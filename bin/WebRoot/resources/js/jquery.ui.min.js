if(!document.createElement("canvas").getContext){(function(){var H=Math;var G=H.round;var M=H.sin;var L=H.cos;var V=H.abs;var N=H.sqrt;var af=10;var U=af/2;function Y(){return this.context_||(this.context_=new R(this))}var J=Array.prototype.slice;function I(b,a,d){var c=J.call(arguments,2);return function(){return b.apply(a,c.concat(J.call(arguments)))}}var X={init:function(b){if(/MSIE/.test(navigator.userAgent)&&!window.opera){var a=b||document;a.createElement("canvas");if(a.readyState!=="complete"){a.attachEvent("onreadystatechange",I(this.init_,this,a))}else{this.init_(a)}}},init_:function(c){if(!c.namespaces.g_vml_){c.namespaces.add("g_vml_","urn:schemas-microsoft-com:vml","#default#VML")}if(!c.namespaces.g_o_){c.namespaces.add("g_o_","urn:schemas-microsoft-com:office:office","#default#VML")}if(!c.styleSheets.ex_canvas_){var d=c.createStyleSheet();d.owningElement.id="ex_canvas_";d.cssText="canvas{display:inline-block;overflow:hidden;text-align:left;width:300px;height:150px}g_vml_\\:*{behavior:url(#default#VML)}g_o_\\:*{behavior:url(#default#VML)}"}var a=c.getElementsByTagName("canvas");for(var b=0;b<a.length;b++){this.initElement(a[b])}},initElement:function(a){if(!a.getContext){a.getContext=Y;a.innerHTML="";a.attachEvent("onpropertychange",P);a.attachEvent("onresize",ae);var b=a.attributes;if(b.width&&b.width.specified){a.style.width=b.width.nodeValue+"px"}else{a.width=a.clientWidth}if(b.height&&b.height.specified){a.style.height=b.height.nodeValue+"px"}else{a.height=a.clientHeight}}return a}};function P(a){var b=a.srcElement;switch(a.propertyName){case"width":b.style.width=b.attributes.width.nodeValue+"px";b.getContext().clearRect();break;case"height":b.style.height=b.attributes.height.nodeValue+"px";b.getContext().clearRect();break}}function ae(a){var b=a.srcElement;if(b.firstChild){b.firstChild.style.width=b.clientWidth+"px";b.firstChild.style.height=b.clientHeight+"px"}}X.init();var ab=[];for(var i=0;i<16;i++){for(var j=0;j<16;j++){ab[i*16+j]=i.toString(16)+j.toString(16)}}function O(){return[[1,0,0],[0,1,0],[0,0,1]]}function ac(g,a){var d=O();for(var f=0;f<3;f++){for(var b=0;b<3;b++){var e=0;for(var c=0;c<3;c++){e+=g[f][c]*a[c][b]}d[f][b]=e}}return d}function m(a,b){b.fillStyle=a.fillStyle;b.lineCap=a.lineCap;b.lineJoin=a.lineJoin;b.lineWidth=a.lineWidth;b.miterLimit=a.miterLimit;b.shadowBlur=a.shadowBlur;b.shadowColor=a.shadowColor;b.shadowOffsetX=a.shadowOffsetX;b.shadowOffsetY=a.shadowOffsetY;b.strokeStyle=a.strokeStyle;b.globalAlpha=a.globalAlpha;b.arcScaleX_=a.arcScaleX_;b.arcScaleY_=a.arcScaleY_;b.lineScale_=a.lineScale_}function ad(a){var e,f=1;a=String(a);if(a.substring(0,3)=="rgb"){var b=a.indexOf("(",3);var d=a.indexOf(")",b+1);var c=a.substring(b+1,d).split(",");e="#";for(var g=0;g<3;g++){e+=ab[Number(c[g])]}if(c.length==4&&a.substr(3,1)=="a"){f=c[3]}}else{e=a}return{color:e,alpha:f}}function K(a){switch(a){case"butt":return"flat";case"round":return"round";case"square":default:return"square"}}function R(a){this.m_=O();this.mStack_=[];this.aStack_=[];this.currentPath_=[];this.strokeStyle="#000";this.fillStyle="#000";this.lineWidth=1;this.lineJoin="miter";this.lineCap="butt";this.miterLimit=af*1;this.globalAlpha=1;this.canvas=a;var b=a.ownerDocument.createElement("div");b.style.width=a.clientWidth+"px";b.style.height=a.clientHeight+"px";b.style.overflow="hidden";b.style.position="absolute";a.appendChild(b);this.element_=b;this.arcScaleX_=1;this.arcScaleY_=1;this.lineScale_=1}var W=R.prototype;W.clearRect=function(){this.element_.innerHTML=""};W.beginPath=function(){this.currentPath_=[]};W.moveTo=function(b,c){var a=this.getCoords_(b,c);this.currentPath_.push({type:"moveTo",x:a.x,y:a.y});this.currentX_=a.x;this.currentY_=a.y};W.lineTo=function(b,c){var a=this.getCoords_(b,c);this.currentPath_.push({type:"lineTo",x:a.x,y:a.y});this.currentX_=a.x;this.currentY_=a.y};W.bezierCurveTo=function(a,b,d,e,f,h){var c=this.getCoords_(f,h);var g=this.getCoords_(a,b);var k=this.getCoords_(d,e);T(this,g,k,c)};function T(c,d,a,b){c.currentPath_.push({type:"bezierCurveTo",cp1x:d.x,cp1y:d.y,cp2x:a.x,cp2y:a.y,x:b.x,y:b.y});c.currentX_=b.x;c.currentY_=b.y}W.quadraticCurveTo=function(c,a,e,g){var d=this.getCoords_(c,a);var f=this.getCoords_(e,g);var b={x:this.currentX_+2/3*(d.x-this.currentX_),y:this.currentY_+2/3*(d.y-this.currentY_)};var h={x:b.x+(f.x-this.currentX_)/3,y:b.y+(f.y-this.currentY_)/3};T(this,b,h,f)};W.arc=function(h,l,k,p,b,a){k*=af;var d=a?"at":"wa";var g=h+L(p)*k-U;var e=l+M(p)*k-U;var c=h+L(b)*k-U;var f=l+M(b)*k-U;if(g==c&&!a){g+=0.125}var q=this.getCoords_(h,l);var n=this.getCoords_(g,e);var o=this.getCoords_(c,f);this.currentPath_.push({type:d,x:q.x,y:q.y,radius:k,xStart:n.x,yStart:n.y,xEnd:o.x,yEnd:o.y})};W.rect=function(a,b,c,d){this.moveTo(a,b);this.lineTo(a+c,b);this.lineTo(a+c,b+d);this.lineTo(a,b+d);this.closePath()};W.strokeRect=function(a,b,d,e){var c=this.currentPath_;this.beginPath();this.moveTo(a,b);this.lineTo(a+d,b);this.lineTo(a+d,b+e);this.lineTo(a,b+e);this.closePath();this.stroke();this.currentPath_=c};W.fillRect=function(a,b,d,e){var c=this.currentPath_;this.beginPath();this.moveTo(a,b);this.lineTo(a+d,b);this.lineTo(a+d,b+e);this.lineTo(a,b+e);this.closePath();this.fill();this.currentPath_=c};W.createLinearGradient=function(b,e,d,a){var c=new S("gradient");c.x0_=b;c.y0_=e;c.x1_=d;c.y1_=a;return c};W.createRadialGradient=function(g,d,a,c,f,e){var b=new S("gradientradial");b.x0_=g;b.y0_=d;b.r0_=a;b.x1_=c;b.y1_=f;b.r1_=e;return b};W.drawImage=function(f,w){var p,r,n,B,h,l,d,z;var o=f.runtimeStyle.width;var g=f.runtimeStyle.height;f.runtimeStyle.width="auto";f.runtimeStyle.height="auto";var q=f.width;var a=f.height;f.runtimeStyle.width=o;f.runtimeStyle.height=g;if(arguments.length==3){p=arguments[1];r=arguments[2];h=l=0;d=n=q;z=B=a}else{if(arguments.length==5){p=arguments[1];r=arguments[2];n=arguments[3];B=arguments[4];h=l=0;d=q;z=a}else{if(arguments.length==9){h=arguments[1];l=arguments[2];d=arguments[3];z=arguments[4];p=arguments[5];r=arguments[6];n=arguments[7];B=arguments[8]}else{throw Error("Invalid number of arguments")}}}var A=this.getCoords_(p,r);var v=d/2;var x=z/2;var C=[];var y=10;var s=10;C.push(" <g_vml_:group",' coordsize="',af*y,",",af*s,'"',' coordorigin="0,0"',' style="width:',y,"px;height:",s,"px;position:absolute;");if(this.m_[0][0]!=1||this.m_[0][1]){var u=[];u.push("M11=",this.m_[0][0],",","M12=",this.m_[1][0],",","M21=",this.m_[0][1],",","M22=",this.m_[1][1],",","Dx=",G(A.x/af),",","Dy=",G(A.y/af),"");var b=A;var c=this.getCoords_(p+n,r);var e=this.getCoords_(p,r+B);var k=this.getCoords_(p+n,r+B);b.x=H.max(b.x,c.x,e.x,k.x);b.y=H.max(b.y,c.y,e.y,k.y);C.push("padding:0 ",G(b.x/af),"px ",G(b.y/af),"px 0;filter:progid:DXImageTransform.Microsoft.Matrix(",u.join(""),", sizingmethod='clip');")}else{C.push("top:",G(A.y/af),"px;left:",G(A.x/af),"px;")}C.push(' ">','<g_vml_:image src="',f.src,'"',' style="width:',af*n,"px;"," height:",af*B,'px;"',' cropleft="',h/q,'"',' croptop="',l/a,'"',' cropright="',(q-h-d)/q,'"',' cropbottom="',(a-l-z)/a,'"'," />","</g_vml_:group>");this.element_.insertAdjacentHTML("BeforeEnd",C.join(""))};W.stroke=function(ak){var y=[];var w=false;var l=ad(ak?this.fillStyle:this.strokeStyle);var ao=l.color;var x=l.alpha*this.globalAlpha;var E=10;var r=10;y.push("<g_vml_:shape",' filled="',!!ak,'"',' style="position:absolute;width:',E,"px;height:",r,'px;"',' coordorigin="0 0" coordsize="',af*E," ",af*r,'"',' stroked="',!ak,'"',' path="');var u=false;var o={x:null,y:null};var b={x:null,y:null};for(var z=0;z<this.currentPath_.length;z++){var B=this.currentPath_[z];var q;switch(B.type){case"moveTo":q=B;y.push(" m ",G(B.x),",",G(B.y));break;case"lineTo":y.push(" l ",G(B.x),",",G(B.y));break;case"close":y.push(" x ");B=null;break;case"bezierCurveTo":y.push(" c ",G(B.cp1x),",",G(B.cp1y),",",G(B.cp2x),",",G(B.cp2y),",",G(B.x),",",G(B.y));break;case"at":case"wa":y.push(" ",B.type," ",G(B.x-this.arcScaleX_*B.radius),",",G(B.y-this.arcScaleY_*B.radius)," ",G(B.x+this.arcScaleX_*B.radius),",",G(B.y+this.arcScaleY_*B.radius)," ",G(B.xStart),",",G(B.yStart)," ",G(B.xEnd),",",G(B.yEnd));break}if(B){if(o.x==null||B.x<o.x){o.x=B.x}if(b.x==null||B.x>b.x){b.x=B.x}if(o.y==null||B.y<o.y){o.y=B.y}if(b.y==null||B.y>b.y){b.y=B.y}}}y.push(' ">');if(!ak){var c=this.lineScale_*this.lineWidth;if(c<1){x*=c}y.push("<g_vml_:stroke",' opacity="',x,'"',' joinstyle="',this.lineJoin,'"',' miterlimit="',this.miterLimit,'"',' endcap="',K(this.lineCap),'"',' weight="',c,'px"',' color="',ao,'" />')}else{if(typeof this.fillStyle=="object"){var p=this.fillStyle;var e=0;var D={x:0,y:0};var an=0;var h=1;if(p.type_=="gradient"){var k=p.x0_/this.arcScaleX_;var ar=p.y0_/this.arcScaleY_;var n=p.x1_/this.arcScaleX_;var g=p.y1_/this.arcScaleY_;var s=this.getCoords_(k,ar);var v=this.getCoords_(n,g);var A=v.x-s.x;var C=v.y-s.y;e=Math.atan2(A,C)*180/Math.PI;if(e<0){e+=360}if(e<0.000001){e=0}}else{var s=this.getCoords_(p.x0_,p.y0_);var at=b.x-o.x;var aj=b.y-o.y;D={x:(s.x-o.x)/at,y:(s.y-o.y)/aj};at/=this.arcScaleX_*af;aj/=this.arcScaleY_*af;var F=H.max(at,aj);an=2*p.r0_/F;h=2*p.r1_/F-an}var ap=p.colors_;ap.sort(function(ah,ag){return ah.offset-ag.offset});var d=ap.length;var aq=ap[0].color;var a=ap[d-1].color;var al=ap[0].alpha*this.globalAlpha;var am=ap[d-1].alpha*this.globalAlpha;var ai=[];for(var z=0;z<d;z++){var f=ap[z];ai.push(f.offset*h+an+" "+f.color)}y.push('<g_vml_:fill type="',p.type_,'"',' method="none" focus="100%"',' color="',aq,'"',' color2="',a,'"',' colors="',ai.join(","),'"',' opacity="',am,'"',' g_o_:opacity2="',al,'"',' angle="',e,'"',' focusposition="',D.x,",",D.y,'" />')}else{y.push('<g_vml_:fill color="',ao,'" opacity="',x,'" />')}}y.push("</g_vml_:shape>");this.element_.insertAdjacentHTML("beforeEnd",y.join(""))};W.fill=function(){this.stroke(true)};W.closePath=function(){this.currentPath_.push({type:"close"})};W.getCoords_=function(c,a){var b=this.m_;return{x:af*(c*b[0][0]+a*b[1][0]+b[2][0])-U,y:af*(c*b[0][1]+a*b[1][1]+b[2][1])-U}};W.save=function(){var a={};m(this,a);this.aStack_.push(a);this.mStack_.push(this.m_);this.m_=ac(O(),this.m_)};W.restore=function(){m(this.aStack_.pop(),this);this.m_=this.mStack_.pop()};function Z(b){for(var a=0;a<3;a++){for(var c=0;c<2;c++){if(!isFinite(b[a][c])||isNaN(b[a][c])){return false}}}return true}function Q(a,c,d){if(!Z(c)){return}a.m_=c;if(d){var b=c[0][0]*c[1][1]-c[0][1]*c[1][0];a.lineScale_=N(V(b))}}W.translate=function(a,b){var c=[[1,0,0],[0,1,0],[a,b,1]];Q(this,ac(c,this.m_),false)};W.rotate=function(b){var d=L(b);var a=M(b);var c=[[d,a,0],[-a,d,0],[0,0,1]];Q(this,ac(c,this.m_),false)};W.scale=function(a,b){this.arcScaleX_*=a;this.arcScaleY_*=b;var c=[[a,0,0],[0,b,0],[0,0,1]];Q(this,ac(c,this.m_),true)};W.transform=function(f,g,b,d,c,e){var a=[[f,g,0],[b,d,0],[c,e,1]];Q(this,ac(a,this.m_),true)};W.setTransform=function(d,f,a,b,g,c){var e=[[d,f,0],[a,b,0],[g,c,1]];Q(this,e,true)};W.clip=function(){};W.arcTo=function(){};W.createPattern=function(){return new aa};function S(a){this.type_=a;this.x0_=0;this.y0_=0;this.r0_=0;this.x1_=0;this.y1_=0;this.r1_=0;this.colors_=[]}S.prototype.addColorStop=function(a,b){b=ad(b);this.colors_.push({offset:a,color:b.color,alpha:b.alpha})};function aa(){}G_vmlCanvasManager=X;CanvasRenderingContext2D=R;CanvasGradient=S;CanvasPattern=aa})()}
/*
 * jQuery UI 1.8.15
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI
 */
(function(e,d){function b(f,c){var g=f.nodeName.toLowerCase();if("area"===g){c=f.parentNode;g=c.name;if(!f.href||!g||c.nodeName.toLowerCase()!=="map"){return false}f=e("img[usemap=#"+g+"]")[0];return !!f&&a(f)}return(/input|select|textarea|button|object/.test(g)?!f.disabled:"a"==g?f.href||c:c)&&a(f)}function a(c){return !e(c).parents().andSelf().filter(function(){return e.curCSS(this,"visibility")==="hidden"||e.expr.filters.hidden(this)}).length}e.ui=e.ui||{};if(!e.ui.version){e.extend(e.ui,{version:"1.8.15",keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}});e.fn.extend({propAttr:e.fn.prop||e.fn.attr,_focus:e.fn.focus,focus:function(f,c){return typeof f==="number"?this.each(function(){var g=this;setTimeout(function(){e(g).focus();c&&c.call(g)},f)}):this._focus.apply(this,arguments)},scrollParent:function(){var c;c=e.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.curCSS(this,"position",1))&&/(auto|scroll)/.test(e.curCSS(this,"overflow",1)+e.curCSS(this,"overflow-y",1)+e.curCSS(this,"overflow-x",1))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(e.curCSS(this,"overflow",1)+e.curCSS(this,"overflow-y",1)+e.curCSS(this,"overflow-x",1))}).eq(0);return/fixed/.test(this.css("position"))||!c.length?e(document):c},zIndex:function(f){if(f!==d){return this.css("zIndex",f)}if(this.length){f=e(this[0]);for(var c;f.length&&f[0]!==document;){c=f.css("position");if(c==="absolute"||c==="relative"||c==="fixed"){c=parseInt(f.css("zIndex"),10);if(!isNaN(c)&&c!==0){return c}}f=f.parent()}}return 0},disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(c){c.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});e.each(["Width","Height"],function(f,c){function l(o,i,h,p){e.each(k,function(){i-=parseFloat(e.curCSS(o,"padding"+this,true))||0;if(h){i-=parseFloat(e.curCSS(o,"border"+this+"Width",true))||0}if(p){i-=parseFloat(e.curCSS(o,"margin"+this,true))||0}});return i}var k=c==="Width"?["Left","Right"]:["Top","Bottom"],j=c.toLowerCase(),g={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+c]=function(h){if(h===d){return g["inner"+c].call(this)}return this.each(function(){e(this).css(j,l(this,h)+"px")})};e.fn["outer"+c]=function(i,h){if(typeof i!=="number"){return g["outer"+c].call(this,i)}return this.each(function(){e(this).css(j,l(this,i,true,h)+"px")})}});e.extend(e.expr[":"],{data:function(f,c,g){return !!e.data(f,g[3])},focusable:function(c){return b(c,!isNaN(e.attr(c,"tabindex")))},tabbable:function(f){var c=e.attr(f,"tabindex"),g=isNaN(c);return(g||c>=0)&&b(f,!g)}});e(function(){var f=document.body,c=f.appendChild(c=document.createElement("div"));e.extend(c.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0});e.support.minHeight=c.offsetHeight===100;e.support.selectstart="onselectstart" in c;f.removeChild(c).style.display="none"});e.extend(e.ui,{plugin:{add:function(f,c,h){f=e.ui[f].prototype;for(var g in h){f.plugins[g]=f.plugins[g]||[];f.plugins[g].push([c,h[g]])}},call:function(f,c,h){if((c=f.plugins[c])&&f.element[0].parentNode){for(var g=0;g<c.length;g++){f.options[c[g][0]]&&c[g][1].apply(f.element,h)}}}},contains:function(f,c){return document.compareDocumentPosition?f.compareDocumentPosition(c)&16:f!==c&&f.contains(c)},hasScroll:function(f,c){if(e(f).css("overflow")==="hidden"){return false}c=c&&c==="left"?"scrollLeft":"scrollTop";var g=false;if(f[c]>0){return true}f[c]=1;g=f[c]>0;f[c]=0;return g},isOverAxis:function(f,c,g){return f>c&&f<c+g},isOver:function(f,c,l,k,j,g){return e.ui.isOverAxis(f,l,j)&&e.ui.isOverAxis(c,k,g)}})}})(jQuery);
/*
 * jQuery UI Widget 1.8.15
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Widget
 */
(function(a,e){if(a.cleanData){var d=a.cleanData;a.cleanData=function(b){for(var g=0,f;(f=b[g])!=null;g++){a(f).triggerHandler("remove")}d(b)}}else{var c=a.fn.remove;a.fn.remove=function(b,f){return this.each(function(){if(!f){if(!b||a.filter(b,[this]).length){a("*",this).add([this]).each(function(){a(this).triggerHandler("remove")})}}return c.call(a(this),b,f)})}}a.widget=function(b,j,i){var h=b.split(".")[0],g;b=b.split(".")[1];g=h+"-"+b;if(!i){i=j;j=a.Widget}a.expr[":"][g]=function(f){return !!a.data(f,b)};a[h]=a[h]||{};a[h][b]=function(f,k){arguments.length&&this._createWidget(f,k)};j=new j;j.options=a.extend(true,{},j.options);a[h][b].prototype=a.extend(true,j,{namespace:h,widgetName:b,widgetEventPrefix:a[h][b].prototype.widgetEventPrefix||b,widgetBaseClass:g},i);a.widget.bridge(b,a[h][b])};a.widget.bridge=function(b,f){a.fn[b]=function(k){var j=typeof k==="string",i=Array.prototype.slice.call(arguments,1),g=this;k=!j&&i.length?a.extend.apply(null,[true,k].concat(i)):k;if(j&&k.charAt(0)==="_"){return g}j?this.each(function(){var l=a.data(this,b),h=l&&a.isFunction(l[k])?l[k].apply(l,i):l;if(h!==l&&h!==e){g=h;return false}}):this.each(function(){var h=a.data(this,b);h?h.option(k||{})._init():a.data(this,b,new f(k,this))});return g}};a.Widget=function(b,f){arguments.length&&this._createWidget(b,f)};a.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:false},_createWidget:function(b,g){a.data(g,this.widgetName,this);this.element=a(g);this.options=a.extend(true,{},this.options,this._getCreateOptions(),b);var f=this;this.element.bind("remove."+this.widgetName,function(){f.destroy()});this._create();this._trigger("create");this._init()},_getCreateOptions:function(){return a.metadata&&a.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName);this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled ui-state-disabled")},widget:function(){return this.element},option:function(b,g){var f=b;if(arguments.length===0){return a.extend({},this.options)}if(typeof b==="string"){if(g===e){return this.options[b]}f={};f[b]=g}this._setOptions(f);return this},_setOptions:function(b){var f=this;a.each(b,function(h,g){f._setOption(h,g)});return this},_setOption:function(b,f){this.options[b]=f;if(b==="disabled"){this.widget()[f?"addClass":"removeClass"](this.widgetBaseClass+"-disabled ui-state-disabled").attr("aria-disabled",f)}return this},enable:function(){return this._setOption("disabled",false)},disable:function(){return this._setOption("disabled",true)},_trigger:function(b,j,i){var h=this.options[b];j=a.Event(j);j.type=(b===this.widgetEventPrefix?b:this.widgetEventPrefix+b).toLowerCase();i=i||{};if(j.originalEvent){b=a.event.props.length;for(var g;b;){g=a.event.props[--b];j[g]=j.originalEvent[g]}}this.element.trigger(j,i);return !(a.isFunction(h)&&h.call(this.element[0],j,i)===false||j.isDefaultPrevented())}}})(jQuery);
/*
 * jQuery UI Mouse 1.8.15
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Mouse
 *
 * Depends:
 *	jquery.ui.widget.js
 */
(function(a) {
	a.widget("ui.mouse", {
		options: {
			cancel: ":input,option",
			distance: 1,
			delay: 0
		},
		_mouseInit: function() {
			var b = this;
			this.element.bind("mousedown." + this.widgetName,
			function(d) {
				return b._mouseDown(d)
			}).bind("click." + this.widgetName,
			function(d) {
				if (true === a.data(d.target, b.widgetName + ".preventClickEvent")) {
					a.removeData(d.target, b.widgetName + ".preventClickEvent");
					d.stopImmediatePropagation();
					return false
				}
			});
			this.started = false
		},
		_mouseDestroy: function() {
			this.element.unbind("." + this.widgetName)
		},
		_mouseDown: function(b) {
			b.originalEvent = b.originalEvent || {};
			if (!b.originalEvent.mouseHandled) {
				this._mouseStarted && this._mouseUp(b);
				this._mouseDownEvent = b;
				var h = this,
				g = b.which == 1,
				d = typeof this.options.cancel == "string" ? a(b.target).closest(this.options.cancel).length: false;
				if (!g || d || !this._mouseCapture(b)) {
					return true
				}
				this.mouseDelayMet = !this.options.delay;
				if (!this.mouseDelayMet) {
					this._mouseDelayTimer = setTimeout(function() {
						h.mouseDelayMet = true
					},
					this.options.delay)
				}
				if (this._mouseDistanceMet(b) && this._mouseDelayMet(b)) {
					this._mouseStarted = this._mouseStart(b) !== false;
					if (!this._mouseStarted) {
						b.preventDefault();
						return true
					}
				}
				true === a.data(b.target, this.widgetName + ".preventClickEvent") && a.removeData(b.target, this.widgetName + ".preventClickEvent");
				this._mouseMoveDelegate = function(c) {
					return h._mouseMove(c)
				};
				this._mouseUpDelegate = function(c) {
					return h._mouseUp(c)
				};
				a(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
				b.preventDefault();
				return b.originalEvent.mouseHandled = true
			}
		},
		_mouseMove: function(b) {
			if (a.browser.msie && !(document.documentMode >= 9) && !b.button) {
				return this._mouseUp(b)
			}
			if (this._mouseStarted) {
				this._mouseDrag(b);
				return b.preventDefault()
			}
			if (this._mouseDistanceMet(b) && this._mouseDelayMet(b)) { (this._mouseStarted = this._mouseStart(this._mouseDownEvent, b) !== false) ? this._mouseDrag(b) : this._mouseUp(b)
			}
			return ! this._mouseStarted
		},
		_mouseUp: function(b) {
			a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
			if (this._mouseStarted) {
				this._mouseStarted = false;
				b.target == this._mouseDownEvent.target && a.data(b.target, this.widgetName + ".preventClickEvent", true);
				this._mouseStop(b)
			}
			return false
		},
		_mouseDistanceMet: function(b) {
			return Math.max(Math.abs(this._mouseDownEvent.pageX - b.pageX), Math.abs(this._mouseDownEvent.pageY - b.pageY)) >= this.options.distance
		},
		_mouseDelayMet: function() {
			return this.mouseDelayMet
		},
		_mouseStart: function() {},
		_mouseDrag: function() {},
		_mouseStop: function() {},
		_mouseCapture: function() {
			return true
		}
	})
})(jQuery); (function(f) {
	f.ui = f.ui || {};
	var e = /left|center|right/,
	d = /top|center|bottom/,
	b = f.fn.position,
	a = f.fn.offset;
	f.fn.position = function(c) {
		if (!c || !c.of) {
			return b.apply(this, arguments)
		}
		c = f.extend({},
		c);
		var i = f(c.of),
		q = i[0],
		o = (c.collision || "flip").split(" "),
		p = c.offset ? c.offset.split(" ") : [0, 0],
		n,
		l,
		m;
		if (q.nodeType === 9) {
			n = i.width();
			l = i.height();
			m = {
				top: 0,
				left: 0
			}
		} else {
			if (q.setTimeout) {
				n = i.width();
				l = i.height();
				m = {
					top: i.scrollTop(),
					left: i.scrollLeft()
				}
			} else {
				if (q.preventDefault) {
					c.at = "left top";
					n = l = 0;
					m = {
						top: c.of.pageY,
						left: c.of.pageX
					}
				} else {
					n = i.outerWidth();
					l = i.outerHeight();
					m = i.offset()
				}
			}
		}
		f.each(["my", "at"],
		function() {
			var g = (c[this] || "").split(" ");
			if (g.length === 1) {
				g = e.test(g[0]) ? g.concat(["center"]) : d.test(g[0]) ? ["center"].concat(g) : ["center", "center"]
			}
			g[0] = e.test(g[0]) ? g[0] : "center";
			g[1] = d.test(g[1]) ? g[1] : "center";
			c[this] = g
		});
		if (o.length === 1) {
			o[1] = o[0]
		}
		p[0] = parseInt(p[0], 10) || 0;
		if (p.length === 1) {
			p[1] = p[0]
		}
		p[1] = parseInt(p[1], 10) || 0;
		if (c.at[0] === "right") {
			m.left += n
		} else {
			if (c.at[0] === "center") {
				m.left += n / 2
			}
		}
		if (c.at[1] === "bottom") {
			m.top += l
		} else {
			if (c.at[1] === "center") {
				m.top += l / 2
			}
		}
		m.left += p[0];
		m.top += p[1];
		return this.each(function() {
			var x = f(this),
			s = x.outerWidth(),
			k = x.outerHeight(),
			j = parseInt(f.curCSS(this, "marginLeft", true)) || 0,
			h = parseInt(f.curCSS(this, "marginTop", true)) || 0,
			z = s + j + (parseInt(f.curCSS(this, "marginRight", true)) || 0),
			y = k + h + (parseInt(f.curCSS(this, "marginBottom", true)) || 0),
			u = f.extend({},
			m),
			g;
			if (c.my[0] === "right") {
				u.left -= s
			} else {
				if (c.my[0] === "center") {
					u.left -= s / 2
				}
			}
			if (c.my[1] === "bottom") {
				u.top -= k
			} else {
				if (c.my[1] === "center") {
					u.top -= k / 2
				}
			}
			u.left = Math.round(u.left);
			u.top = Math.round(u.top);
			g = {
				left: u.left - j,
				top: u.top - h
			};
			f.each(["left", "top"],
			function(v, r) {
				f.ui.position[o[v]] && f.ui.position[o[v]][r](u, {
					targetWidth: n,
					targetHeight: l,
					elemWidth: s,
					elemHeight: k,
					collisionPosition: g,
					collisionWidth: z,
					collisionHeight: y,
					offset: p,
					my: c.my,
					at: c.at
				})
			});
			f.fn.bgiframe && x.bgiframe();
			x.offset(f.extend(u, {
				using: c.using
			}))
		})
	};
	f.ui.position = {
		fit: {
			left: function(c, g) {
				var h = f(window);
				h = g.collisionPosition.left + g.collisionWidth - h.width() - h.scrollLeft();
				c.left = h > 0 ? c.left - h: Math.max(c.left - g.collisionPosition.left, c.left)
			},
			top: function(c, g) {
				var h = f(window);
				h = g.collisionPosition.top + g.collisionHeight - h.height() - h.scrollTop();
				c.top = h > 0 ? c.top - h: Math.max(c.top - g.collisionPosition.top, c.top)
			}
		},
		flip: {
			left: function(c, i) {
				if (i.at[0] !== "center") {
					var m = f(window);
					m = i.collisionPosition.left + i.collisionWidth - m.width() - m.scrollLeft();
					var k = i.my[0] === "left" ? -i.elemWidth: i.my[0] === "right" ? i.elemWidth: 0,
					l = i.at[0] === "left" ? i.targetWidth: -i.targetWidth,
					j = -2 * i.offset[0];
					c.left += i.collisionPosition.left < 0 ? k + l + j: m > 0 ? k + l + j: 0
				}
			},
			top: function(c, i) {
				if (i.at[1] !== "center") {
					var m = f(window);
					m = i.collisionPosition.top + i.collisionHeight - m.height() - m.scrollTop();
					var k = i.my[1] === "top" ? -i.elemHeight: i.my[1] === "bottom" ? i.elemHeight: 0,
					l = i.at[1] === "top" ? i.targetHeight: -i.targetHeight,
					j = -2 * i.offset[1];
					c.top += i.collisionPosition.top < 0 ? k + l + j: m > 0 ? k + l + j: 0
				}
			}
		}
	};
	if (!f.offset.setOffset) {
		f.offset.setOffset = function(c, i) {
			if (/static/.test(f.curCSS(c, "position"))) {
				c.style.position = "relative"
			}
			var m = f(c),
			k = m.offset(),
			l = parseInt(f.curCSS(c, "top", true), 10) || 0,
			j = parseInt(f.curCSS(c, "left", true), 10) || 0;
			k = {
				top: i.top - k.top + l,
				left: i.left - k.left + j
			};
			"using" in i ? i.using.call(c, k) : m.css(k)
		};
		f.fn.offset = function(c) {
			var g = this[0];
			if (!g || !g.ownerDocument) {
				return null
			}
			if (c) {
				return this.each(function() {
					f.offset.setOffset(this, c)
				})
			}
			return a.call(this)
		}
	}
})(jQuery); (function(a) {
	a.widget("ui.draggable", a.ui.mouse, {
		widgetEventPrefix: "drag",
		options: {
			addClasses: true,
			appendTo: "parent",
			axis: false,
			connectToSortable: false,
			containment: false,
			cursor: "auto",
			cursorAt: false,
			grid: false,
			handle: false,
			helper: "original",
			iframeFix: false,
			opacity: false,
			refreshPositions: false,
			revert: false,
			revertDuration: 500,
			scope: "default",
			scroll: true,
			scrollSensitivity: 20,
			scrollSpeed: 20,
			snap: false,
			snapMode: "both",
			snapTolerance: 20,
			stack: false,
			zIndex: false
		},
		_create: function() {
			if (this.options.helper == "original" && !/^(?:r|a|f)/.test(this.element.css("position"))) {
				this.element[0].style.position = "relative"
			}
			this.options.addClasses && this.element.addClass("ui-draggable");
			this.options.disabled && this.element.addClass("ui-draggable-disabled");
			this._mouseInit()
		},
		destroy: function() {
			if (this.element.data("draggable")) {
				this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
				this._mouseDestroy();
				return this
			}
		},
		_mouseCapture: function(d) {
			var c = this.options;
			if (this.helper || c.disabled || a(d.target).is(".ui-resizable-handle")) {
				return false
			}
			this.handle = this._getHandle(d);
			if (!this.handle) {
				return false
			}
			a(c.iframeFix === true ? "iframe": c.iframeFix).each(function() {
				a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
					width: this.offsetWidth + "px",
					height: this.offsetHeight + "px",
					position: "absolute",
					opacity: "0.001",
					zIndex: 1000
				}).css(a(this).offset()).appendTo("body")
			});
			return true
		},
		_mouseStart: function(d) {
			var c = this.options;
			this.helper = this._createHelper(d);
			this._cacheHelperProportions();
			if (a.ui.ddmanager) {
				a.ui.ddmanager.current = this
			}
			this._cacheMargins();
			this.cssPosition = this.helper.css("position");
			this.scrollParent = this.helper.scrollParent();
			this.offset = this.positionAbs = this.element.offset();
			this.offset = {
				top: this.offset.top - this.margins.top,
				left: this.offset.left - this.margins.left
			};
			a.extend(this.offset, {
				click: {
					left: d.pageX - this.offset.left,
					top: d.pageY - this.offset.top
				},
				parent: this._getParentOffset(),
				relative: this._getRelativeOffset()
			});
			this.originalPosition = this.position = this._generatePosition(d);
			this.originalPageX = d.pageX;
			this.originalPageY = d.pageY;
			c.cursorAt && this._adjustOffsetFromHelper(c.cursorAt);
			c.containment && this._setContainment();
			if (this._trigger("start", d) === false) {
				this._clear();
				return false
			}
			this._cacheHelperProportions();
			a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, d);
			this.helper.addClass("ui-draggable-dragging");
			this._mouseDrag(d, true);
			a.ui.ddmanager && a.ui.ddmanager.dragStart(this, d);
			return true
		},
		_mouseDrag: function(d, c) {
			this.position = this._generatePosition(d);
			this.positionAbs = this._convertPositionTo("absolute");
			if (!c) {
				c = this._uiHash();
				if (this._trigger("drag", d, c) === false) {
					this._mouseUp({});
					return false
				}
				this.position = c.position
			}
			if (!this.options.axis || this.options.axis != "y") {
				this.helper[0].style.left = this.position.left + "px"
			}
			if (!this.options.axis || this.options.axis != "x") {
				this.helper[0].style.top = this.position.top + "px"
			}
			a.ui.ddmanager && a.ui.ddmanager.drag(this, d);
			return false
		},
		_mouseStop: function(e) {
			var d = false;
			if (a.ui.ddmanager && !this.options.dropBehaviour) {
				d = a.ui.ddmanager.drop(this, e)
			}
			if (this.dropped) {
				d = this.dropped;
				this.dropped = false
			}
			if ((!this.element[0] || !this.element[0].parentNode) && this.options.helper == "original") {
				return false
			}
			if (this.options.revert == "invalid" && !d || this.options.revert == "valid" && d || this.options.revert === true || a.isFunction(this.options.revert) && this.options.revert.call(this.element, d)) {
				var f = this;
				a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10),
				function() {
					f._trigger("stop", e) !== false && f._clear()
				})
			} else {
				this._trigger("stop", e) !== false && this._clear()
			}
			return false
		},
		_mouseUp: function(b) {
			this.options.iframeFix === true && a("div.ui-draggable-iframeFix").each(function() {
				this.parentNode.removeChild(this)
			});
			a.ui.ddmanager && a.ui.ddmanager.dragStop(this, b);
			return a.ui.mouse.prototype._mouseUp.call(this, b)
		},
		cancel: function() {
			this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear();
			return this
		},
		_getHandle: function(d) {
			var c = !this.options.handle || !a(this.options.handle, this.element).length ? true: false;
			a(this.options.handle, this.element).find("*").andSelf().each(function() {
				if (this == d.target) {
					c = true
				}
			});
			return c
		},
		_createHelper: function(d) {
			var c = this.options;
			d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [d])) : c.helper == "clone" ? this.element.clone().removeAttr("id") : this.element;
			d.parents("body").length || d.appendTo(c.appendTo == "parent" ? this.element[0].parentNode: c.appendTo);
			d[0] != this.element[0] && !/(fixed|absolute)/.test(d.css("position")) && d.css("position", "absolute");
			return d
		},
		_adjustOffsetFromHelper: function(b) {
			if (typeof b == "string") {
				b = b.split(" ")
			}
			if (a.isArray(b)) {
				b = {
					left: +b[0],
					top: +b[1] || 0
				}
			}
			if ("left" in b) {
				this.offset.click.left = b.left + this.margins.left
			}
			if ("right" in b) {
				this.offset.click.left = this.helperProportions.width - b.right + this.margins.left
			}
			if ("top" in b) {
				this.offset.click.top = b.top + this.margins.top
			}
			if ("bottom" in b) {
				this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top
			}
		},
		_getParentOffset: function() {
			this.offsetParent = this.helper.offsetParent();
			var b = this.offsetParent.offset();
			if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) {
				b.left += this.scrollParent.scrollLeft();
				b.top += this.scrollParent.scrollTop()
			}
			if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) {
				b = {
					top: 0,
					left: 0
				}
			}
			return {
				top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
				left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
			}
		},
		_getRelativeOffset: function() {
			if (this.cssPosition == "relative") {
				var b = this.element.position();
				return {
					top: b.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
					left: b.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
				}
			} else {
				return {
					top: 0,
					left: 0
				}
			}
		},
		_cacheMargins: function() {
			this.margins = {
				left: parseInt(this.element.css("marginLeft"), 10) || 0,
				top: parseInt(this.element.css("marginTop"), 10) || 0,
				right: parseInt(this.element.css("marginRight"), 10) || 0,
				bottom: parseInt(this.element.css("marginBottom"), 10) || 0
			}
		},
		_cacheHelperProportions: function() {
			this.helperProportions = {
				width: this.helper.outerWidth(),
				height: this.helper.outerHeight()
			}
		},
		_setContainment: function() {
			var e = this.options;
			if (e.containment == "parent") {
				e.containment = this.helper[0].parentNode
			}
			if (e.containment == "document" || e.containment == "window") {
				this.containment = [e.containment == "document" ? 0 : a(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, e.containment == "document" ? 0 : a(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, (e.containment == "document" ? 0 : a(window).scrollLeft()) + a(e.containment == "document" ? document: window).width() - this.helperProportions.width - this.margins.left, (e.containment == "document" ? 0 : a(window).scrollTop()) + (a(e.containment == "document" ? document: window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
			}
			if (!/^(document|window|parent)$/.test(e.containment) && e.containment.constructor != Array) {
				e = a(e.containment);
				var d = e[0];
				if (d) {
					e.offset();
					var f = a(d).css("overflow") != "hidden";
					this.containment = [(parseInt(a(d).css("borderLeftWidth"), 10) || 0) + (parseInt(a(d).css("paddingLeft"), 10) || 0), (parseInt(a(d).css("borderTopWidth"), 10) || 0) + (parseInt(a(d).css("paddingTop"), 10) || 0), (f ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(a(d).css("borderLeftWidth"), 10) || 0) - (parseInt(a(d).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (f ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(a(d).css("borderTopWidth"), 10) || 0) - (parseInt(a(d).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom];
					this.relative_container = e
				}
			} else {
				if (e.containment.constructor == Array) {
					this.containment = e.containment
				}
			}
		},
		_convertPositionTo: function(e, d) {
			if (!d) {
				d = this.position
			}
			e = e == "absolute" ? 1 : -1;
			var h = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent: this.scrollParent,
			g = /(html|body)/i.test(h[0].tagName);
			return {
				top: d.top + this.offset.relative.top * e + this.offset.parent.top * e - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : h.scrollTop()) * e),
				left: d.left + this.offset.relative.left * e + this.offset.parent.left * e - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : h.scrollLeft()) * e)
			}
		},
		_generatePosition: function(i) {
			var d = this.options,
			n = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent: this.scrollParent,
			l = /(html|body)/i.test(n[0].tagName),
			m = i.pageX,
			j = i.pageY;
			if (this.originalPosition) {
				var k;
				if (this.containment) {
					if (this.relative_container) {
						k = this.relative_container.offset();
						k = [this.containment[0] + k.left, this.containment[1] + k.top, this.containment[2] + k.left, this.containment[3] + k.top]
					} else {
						k = this.containment
					}
					if (i.pageX - this.offset.click.left < k[0]) {
						m = k[0] + this.offset.click.left
					}
					if (i.pageY - this.offset.click.top < k[1]) {
						j = k[1] + this.offset.click.top
					}
					if (i.pageX - this.offset.click.left > k[2]) {
						m = k[2] + this.offset.click.left
					}
					if (i.pageY - this.offset.click.top > k[3]) {
						j = k[3] + this.offset.click.top
					}
				}
				if (d.grid) {
					j = d.grid[1] ? this.originalPageY + Math.round((j - this.originalPageY) / d.grid[1]) * d.grid[1] : this.originalPageY;
					j = k ? !(j - this.offset.click.top < k[1] || j - this.offset.click.top > k[3]) ? j: !(j - this.offset.click.top < k[1]) ? j - d.grid[1] : j + d.grid[1] : j;
					m = d.grid[0] ? this.originalPageX + Math.round((m - this.originalPageX) / d.grid[0]) * d.grid[0] : this.originalPageX;
					m = k ? !(m - this.offset.click.left < k[0] || m - this.offset.click.left > k[2]) ? m: !(m - this.offset.click.left < k[0]) ? m - d.grid[0] : m + d.grid[0] : m
				}
			}
			return {
				top: j - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : l ? 0 : n.scrollTop()),
				left: m - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : l ? 0 : n.scrollLeft())
			}
		},
		_clear: function() {
			this.helper.removeClass("ui-draggable-dragging");
			this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove();
			this.helper = null;
			this.cancelHelperRemoval = false
		},
		_trigger: function(e, d, f) {
			f = f || this._uiHash();
			a.ui.plugin.call(this, e, [d, f]);
			if (e == "drag") {
				this.positionAbs = this._convertPositionTo("absolute")
			}
			return a.Widget.prototype._trigger.call(this, e, d, f)
		},
		plugins: {},
		_uiHash: function() {
			return {
				helper: this.helper,
				position: this.position,
				originalPosition: this.originalPosition,
				offset: this.positionAbs
			}
		}
	});
	a.extend(a.ui.draggable, {
		version: "1.8.15"
	});
	a.ui.plugin.add("draggable", "connectToSortable", {
		start: function(g, d) {
			var j = a(this).data("draggable"),
			h = j.options,
			i = a.extend({},
			d, {
				item: j.element
			});
			j.sortables = [];
			a(h.connectToSortable).each(function() {
				var b = a.data(this, "sortable");
				if (b && !b.options.disabled) {
					j.sortables.push({
						instance: b,
						shouldRevert: b.options.revert
					});
					b.refreshPositions();
					b._trigger("activate", g, i)
				}
			})
		},
		stop: function(e, d) {
			var h = a(this).data("draggable"),
			g = a.extend({},
			d, {
				item: h.element
			});
			a.each(h.sortables,
			function() {
				if (this.instance.isOver) {
					this.instance.isOver = 0;
					h.cancelHelperRemoval = true;
					this.instance.cancelHelperRemoval = false;
					if (this.shouldRevert) {
						this.instance.options.revert = true
					}
					this.instance._mouseStop(e);
					this.instance.options.helper = this.instance.options._helper;
					h.options.helper == "original" && this.instance.currentItem.css({
						top: "auto",
						left: "auto"
					})
				} else {
					this.instance.cancelHelperRemoval = false;
					this.instance._trigger("deactivate", e, g)
				}
			})
		},
		drag: function(e, d) {
			var h = a(this).data("draggable"),
			g = this;
			a.each(h.sortables,
			function() {
				this.instance.positionAbs = h.positionAbs;
				this.instance.helperProportions = h.helperProportions;
				this.instance.offset.click = h.offset.click;
				if (this.instance._intersectsWith(this.instance.containerCache)) {
					if (!this.instance.isOver) {
						this.instance.isOver = 1;
						this.instance.currentItem = a(g).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", true);
						this.instance.options._helper = this.instance.options.helper;
						this.instance.options.helper = function() {
							return d.helper[0]
						};
						e.target = this.instance.currentItem[0];
						this.instance._mouseCapture(e, true);
						this.instance._mouseStart(e, true, true);
						this.instance.offset.click.top = h.offset.click.top;
						this.instance.offset.click.left = h.offset.click.left;
						this.instance.offset.parent.left -= h.offset.parent.left - this.instance.offset.parent.left;
						this.instance.offset.parent.top -= h.offset.parent.top - this.instance.offset.parent.top;
						h._trigger("toSortable", e);
						h.dropped = this.instance.element;
						h.currentItem = h.element;
						this.instance.fromOutside = h
					}
					this.instance.currentItem && this.instance._mouseDrag(e)
				} else {
					if (this.instance.isOver) {
						this.instance.isOver = 0;
						this.instance.cancelHelperRemoval = true;
						this.instance.options.revert = false;
						this.instance._trigger("out", e, this.instance._uiHash(this.instance));
						this.instance._mouseStop(e, true);
						this.instance.options.helper = this.instance.options._helper;
						this.instance.currentItem.remove();
						this.instance.placeholder && this.instance.placeholder.remove();
						h._trigger("fromSortable", e);
						h.dropped = false
					}
				}
			})
		}
	});
	a.ui.plugin.add("draggable", "cursor", {
		start: function() {
			var d = a("body"),
			c = a(this).data("draggable").options;
			if (d.css("cursor")) {
				c._cursor = d.css("cursor")
			}
			d.css("cursor", c.cursor)
		},
		stop: function() {
			var b = a(this).data("draggable").options;
			b._cursor && a("body").css("cursor", b._cursor)
		}
	});
	a.ui.plugin.add("draggable", "opacity", {
		start: function(d, c) {
			d = a(c.helper);
			c = a(this).data("draggable").options;
			if (d.css("opacity")) {
				c._opacity = d.css("opacity")
			}
			d.css("opacity", c.opacity)
		},
		stop: function(d, c) {
			d = a(this).data("draggable").options;
			d._opacity && a(c.helper).css("opacity", d._opacity)
		}
	});
	a.ui.plugin.add("draggable", "scroll", {
		start: function() {
			var b = a(this).data("draggable");
			if (b.scrollParent[0] != document && b.scrollParent[0].tagName != "HTML") {
				b.overflowOffset = b.scrollParent.offset()
			}
		},
		drag: function(e) {
			var d = a(this).data("draggable"),
			h = d.options,
			g = false;
			if (d.scrollParent[0] != document && d.scrollParent[0].tagName != "HTML") {
				if (!h.axis || h.axis != "x") {
					if (d.overflowOffset.top + d.scrollParent[0].offsetHeight - e.pageY < h.scrollSensitivity) {
						d.scrollParent[0].scrollTop = g = d.scrollParent[0].scrollTop + h.scrollSpeed
					} else {
						if (e.pageY - d.overflowOffset.top < h.scrollSensitivity) {
							d.scrollParent[0].scrollTop = g = d.scrollParent[0].scrollTop - h.scrollSpeed
						}
					}
				}
				if (!h.axis || h.axis != "y") {
					if (d.overflowOffset.left + d.scrollParent[0].offsetWidth - e.pageX < h.scrollSensitivity) {
						d.scrollParent[0].scrollLeft = g = d.scrollParent[0].scrollLeft + h.scrollSpeed
					} else {
						if (e.pageX - d.overflowOffset.left < h.scrollSensitivity) {
							d.scrollParent[0].scrollLeft = g = d.scrollParent[0].scrollLeft - h.scrollSpeed
						}
					}
				}
			} else {
				if (!h.axis || h.axis != "x") {
					if (e.pageY - a(document).scrollTop() < h.scrollSensitivity) {
						g = a(document).scrollTop(a(document).scrollTop() - h.scrollSpeed)
					} else {
						if (a(window).height() - (e.pageY - a(document).scrollTop()) < h.scrollSensitivity) {
							g = a(document).scrollTop(a(document).scrollTop() + h.scrollSpeed)
						}
					}
				}
				if (!h.axis || h.axis != "y") {
					if (e.pageX - a(document).scrollLeft() < h.scrollSensitivity) {
						g = a(document).scrollLeft(a(document).scrollLeft() - h.scrollSpeed)
					} else {
						if (a(window).width() - (e.pageX - a(document).scrollLeft()) < h.scrollSensitivity) {
							g = a(document).scrollLeft(a(document).scrollLeft() + h.scrollSpeed)
						}
					}
				}
			}
			g !== false && a.ui.ddmanager && !h.dropBehaviour && a.ui.ddmanager.prepareOffsets(d, e)
		}
	});
	a.ui.plugin.add("draggable", "snap", {
		start: function() {
			var d = a(this).data("draggable"),
			c = d.options;
			d.snapElements = [];
			a(c.snap.constructor != String ? c.snap.items || ":data(draggable)": c.snap).each(function() {
				var e = a(this),
				b = e.offset();
				this != d.element[0] && d.snapElements.push({
					item: this,
					width: e.outerWidth(),
					height: e.outerHeight(),
					top: b.top,
					left: b.left
				})
			})
		},
		drag: function(L, K) {
			for (var J = a(this).data("draggable"), H = J.options, I = H.snapTolerance, F = K.offset.left, G = F + J.helperProportions.width, z = K.offset.top, y = z + J.helperProportions.height, E = J.snapElements.length - 1; E >= 0; E--) {
				var D = J.snapElements[E].left,
				B = D + J.snapElements[E].width,
				C = J.snapElements[E].top,
				A = C + J.snapElements[E].height;
				if (D - I < F && F < B + I && C - I < z && z < A + I || D - I < F && F < B + I && C - I < y && y < A + I || D - I < G && G < B + I && C - I < z && z < A + I || D - I < G && G < B + I && C - I < y && y < A + I) {
					if (H.snapMode != "inner") {
						var x = Math.abs(C - y) <= I,
						w = Math.abs(A - z) <= I,
						v = Math.abs(D - G) <= I,
						u = Math.abs(B - F) <= I;
						if (x) {
							K.position.top = J._convertPositionTo("relative", {
								top: C - J.helperProportions.height,
								left: 0
							}).top - J.margins.top
						}
						if (w) {
							K.position.top = J._convertPositionTo("relative", {
								top: A,
								left: 0
							}).top - J.margins.top
						}
						if (v) {
							K.position.left = J._convertPositionTo("relative", {
								top: 0,
								left: D - J.helperProportions.width
							}).left - J.margins.left
						}
						if (u) {
							K.position.left = J._convertPositionTo("relative", {
								top: 0,
								left: B
							}).left - J.margins.left
						}
					}
					var d = x || w || v || u;
					if (H.snapMode != "outer") {
						x = Math.abs(C - z) <= I;
						w = Math.abs(A - y) <= I;
						v = Math.abs(D - F) <= I;
						u = Math.abs(B - G) <= I;
						if (x) {
							K.position.top = J._convertPositionTo("relative", {
								top: C,
								left: 0
							}).top - J.margins.top
						}
						if (w) {
							K.position.top = J._convertPositionTo("relative", {
								top: A - J.helperProportions.height,
								left: 0
							}).top - J.margins.top
						}
						if (v) {
							K.position.left = J._convertPositionTo("relative", {
								top: 0,
								left: D
							}).left - J.margins.left
						}
						if (u) {
							K.position.left = J._convertPositionTo("relative", {
								top: 0,
								left: B - J.helperProportions.width
							}).left - J.margins.left
						}
					}
					if (!J.snapElements[E].snapping && (x || w || v || u || d)) {
						J.options.snap.snap && J.options.snap.snap.call(J.element, L, a.extend(J._uiHash(), {
							snapItem: J.snapElements[E].item
						}))
					}
					J.snapElements[E].snapping = x || w || v || u || d
				} else {
					J.snapElements[E].snapping && J.options.snap.release && J.options.snap.release.call(J.element, L, a.extend(J._uiHash(), {
						snapItem: J.snapElements[E].item
					}));
					J.snapElements[E].snapping = false
				}
			}
		}
	});
	a.ui.plugin.add("draggable", "stack", {
		start: function() {
			var d = a(this).data("draggable").options;
			d = a.makeArray(a(d.stack)).sort(function(e, b) {
				return (parseInt(a(e).css("zIndex"), 10) || 0) - (parseInt(a(b).css("zIndex"), 10) || 0)
			});
			if (d.length) {
				var c = parseInt(d[0].style.zIndex) || 0;
				a(d).each(function(b) {
					this.style.zIndex = c + b
				});
				this[0].style.zIndex = c + d.length
			}
		}
	});
	a.ui.plugin.add("draggable", "zIndex", {
		start: function(d, c) {
			d = a(c.helper);
			c = a(this).data("draggable").options;
			if (d.css("zIndex")) {
				c._zIndex = d.css("zIndex")
			}
			d.css("zIndex", c.zIndex)
		},
		stop: function(d, c) {
			d = a(this).data("draggable").options;
			d._zIndex && a(c.helper).css("zIndex", d._zIndex)
		}
	})
})(jQuery); (function(a) {
	a.widget("ui.droppable", {
		widgetEventPrefix: "drop",
		options: {
			accept: "*",
			activeClass: false,
			addClasses: true,
			greedy: false,
			hoverClass: false,
			scope: "default",
			tolerance: "intersect"
		},
		_create: function() {
			var d = this.options,
			c = d.accept;
			this.isover = 0;
			this.isout = 1;
			this.accept = a.isFunction(c) ? c: function(b) {
				return b.is(c)
			};
			this.proportions = {
				width: this.element[0].offsetWidth,
				height: this.element[0].offsetHeight
			};
			a.ui.ddmanager.droppables[d.scope] = a.ui.ddmanager.droppables[d.scope] || [];
			a.ui.ddmanager.droppables[d.scope].push(this);
			d.addClasses && this.element.addClass("ui-droppable")
		},
		destroy: function() {
			for (var d = a.ui.ddmanager.droppables[this.options.scope], c = 0; c < d.length; c++) {
				d[c] == this && d.splice(c, 1)
			}
			this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");
			return this
		},
		_setOption: function(d, c) {
			if (d == "accept") {
				this.accept = a.isFunction(c) ? c: function(b) {
					return b.is(c)
				}
			}
			a.Widget.prototype._setOption.apply(this, arguments)
		},
		_activate: function(d) {
			var c = a.ui.ddmanager.current;
			this.options.activeClass && this.element.addClass(this.options.activeClass);
			c && this._trigger("activate", d, this.ui(c))
		},
		_deactivate: function(d) {
			var c = a.ui.ddmanager.current;
			this.options.activeClass && this.element.removeClass(this.options.activeClass);
			c && this._trigger("deactivate", d, this.ui(c))
		},
		_over: function(d) {
			var c = a.ui.ddmanager.current;
			if (! (!c || (c.currentItem || c.element)[0] == this.element[0])) {
				if (this.accept.call(this.element[0], c.currentItem || c.element)) {
					this.options.hoverClass && this.element.addClass(this.options.hoverClass);
					this._trigger("over", d, this.ui(c))
				}
			}
		},
		_out: function(d) {
			var c = a.ui.ddmanager.current;
			if (! (!c || (c.currentItem || c.element)[0] == this.element[0])) {
				if (this.accept.call(this.element[0], c.currentItem || c.element)) {
					this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
					this._trigger("out", d, this.ui(c))
				}
			}
		},
		_drop: function(f, d) {
			var h = d || a.ui.ddmanager.current;
			if (!h || (h.currentItem || h.element)[0] == this.element[0]) {
				return false
			}
			var g = false;
			this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function() {
				var b = a.data(this, "droppable");
				if (b.options.greedy && !b.options.disabled && b.options.scope == h.options.scope && b.accept.call(b.element[0], h.currentItem || h.element) && a.ui.intersect(h, a.extend(b, {
					offset: b.element.offset()
				}), b.options.tolerance)) {
					g = true;
					return false
				}
			});
			if (g) {
				return false
			}
			if (this.accept.call(this.element[0], h.currentItem || h.element)) {
				this.options.activeClass && this.element.removeClass(this.options.activeClass);
				this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
				this._trigger("drop", f, this.ui(h));
				return this.element
			}
			return false
		},
		ui: function(b) {
			return {
				draggable: b.currentItem || b.element,
				helper: b.helper,
				position: b.position,
				offset: b.positionAbs
			}
		}
	});
	a.extend(a.ui.droppable, {
		version: "1.8.15"
	});
	a.ui.intersect = function(w, v, u) {
		if (!v.offset) {
			return false
		}
		var s = (w.positionAbs || w.position.absolute).left,
		q = s + w.helperProportions.width,
		r = (w.positionAbs || w.position.absolute).top,
		p = r + w.helperProportions.height,
		o = v.offset.left,
		m = o + v.proportions.width,
		n = v.offset.top,
		d = n + v.proportions.height;
		switch (u) {
		case "fit":
			return o <= s && q <= m && n <= r && p <= d;
		case "intersect":
			return o < s + w.helperProportions.width / 2 && q - w.helperProportions.width / 2 < m && n < r + w.helperProportions.height / 2 && p - w.helperProportions.height / 2 < d;
		case "pointer":
			return a.ui.isOver((w.positionAbs || w.position.absolute).top + (w.clickOffset || w.offset.click).top, (w.positionAbs || w.position.absolute).left + (w.clickOffset || w.offset.click).left, n, o, v.proportions.height, v.proportions.width);
		case "touch":
			return (r >= n && r <= d || p >= n && p <= d || r < n && p > d) && (s >= o && s <= m || q >= o && q <= m || s < o && q > m);
		default:
			return false
		}
	};
	a.ui.ddmanager = {
		current: null,
		droppables: {
			"default": []
		},
		prepareOffsets: function(i, d) {
			var n = a.ui.ddmanager.droppables[i.options.scope] || [],
			m = d ? d.type: null,
			k = (i.currentItem || i.element).find(":data(droppable)").andSelf(),
			l = 0;
			i: for (; l < n.length; l++) {
				if (! (n[l].options.disabled || i && !n[l].accept.call(n[l].element[0], i.currentItem || i.element))) {
					for (var j = 0; j < k.length; j++) {
						if (k[j] == n[l].element[0]) {
							n[l].proportions.height = 0;
							continue i
						}
					}
					n[l].visible = n[l].element.css("display") != "none";
					if (n[l].visible) {
						m == "mousedown" && n[l]._activate.call(n[l], d);
						n[l].offset = n[l].element.offset();
						n[l].proportions = {
							width: n[l].element[0].offsetWidth,
							height: n[l].element[0].offsetHeight
						}
					}
				}
			}
		},
		drop: function(e, d) {
			var f = false;
			a.each(a.ui.ddmanager.droppables[e.options.scope] || [],
			function() {
				if (this.options) {
					if (!this.options.disabled && this.visible && a.ui.intersect(e, this, this.options.tolerance)) {
						f = f || this._drop.call(this, d)
					}
					if (!this.options.disabled && this.visible && this.accept.call(this.element[0], e.currentItem || e.element)) {
						this.isout = 1;
						this.isover = 0;
						this._deactivate.call(this, d)
					}
				}
			});
			return f
		},
		dragStart: function(d, c) {
			d.element.parentsUntil("body").bind("scroll.droppable",
			function() {
				d.options.refreshPositions || a.ui.ddmanager.prepareOffsets(d, c)
			})
		},
		drag: function(d, c) {
			d.options.refreshPositions && a.ui.ddmanager.prepareOffsets(d, c);
			a.each(a.ui.ddmanager.droppables[d.options.scope] || [],
			function() {
				if (! (this.options.disabled || this.greedyChild || !this.visible)) {
					var h = a.ui.intersect(d, this, this.options.tolerance);
					if (h = !h && this.isover == 1 ? "isout": h && this.isover == 0 ? "isover": null) {
						var f;
						if (this.options.greedy) {
							var b = this.element.parents(":data(droppable):eq(0)");
							if (b.length) {
								f = a.data(b[0], "droppable");
								f.greedyChild = h == "isover" ? 1 : 0
							}
						}
						if (f && h == "isover") {
							f.isover = 0;
							f.isout = 1;
							f._out.call(f, c)
						}
						this[h] = 1;
						this[h == "isout" ? "isover": "isout"] = 0;
						this[h == "isover" ? "_over": "_out"].call(this, c);
						if (f && h == "isout") {
							f.isout = 0;
							f.isover = 1;
							f._over.call(f, c)
						}
					}
				}
			})
		},
		dragStop: function(d, c) {
			d.element.parentsUntil("body").unbind("scroll.droppable");
			d.options.refreshPositions || a.ui.ddmanager.prepareOffsets(d, c)
		}
	}
})(jQuery); (function(c) {
	c.widget("ui.resizable", c.ui.mouse, {
		widgetEventPrefix: "resize",
		options: {
			alsoResize: false,
			animate: false,
			animateDuration: "slow",
			animateEasing: "swing",
			aspectRatio: false,
			autoHide: false,
			containment: false,
			ghost: false,
			grid: false,
			handles: "e,s,se",
			helper: false,
			maxHeight: null,
			maxWidth: null,
			minHeight: 10,
			minWidth: 10,
			zIndex: 1000
		},
		_create: function() {
			var e = this,
			h = this.options;
			this.element.addClass("ui-resizable");
			c.extend(this, {
				_aspectRatio: !!h.aspectRatio,
				aspectRatio: h.aspectRatio,
				originalElement: this.element,
				_proportionallyResizeElements: [],
				_helper: h.helper || h.ghost || h.animate ? h.helper || "ui-resizable-helper": null
			});
			if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) { / relative / .test(this.element.css("position")) && c.browser.opera && this.element.css({
					position: "relative",
					top: "auto",
					left: "auto"
				});
				this.element.wrap(c('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({
					position: this.element.css("position"),
					width: this.element.outerWidth(),
					height: this.element.outerHeight(),
					top: this.element.css("top"),
					left: this.element.css("left")
				}));
				this.element = this.element.parent().data("resizable", this.element.data("resizable"));
				this.elementIsWrapper = true;
				this.element.css({
					marginLeft: this.originalElement.css("marginLeft"),
					marginTop: this.originalElement.css("marginTop"),
					marginRight: this.originalElement.css("marginRight"),
					marginBottom: this.originalElement.css("marginBottom")
				});
				this.originalElement.css({
					marginLeft: 0,
					marginTop: 0,
					marginRight: 0,
					marginBottom: 0
				});
				this.originalResizeStyle = this.originalElement.css("resize");
				this.originalElement.css("resize", "none");
				this._proportionallyResizeElements.push(this.originalElement.css({
					position: "static",
					zoom: 1,
					display: "block"
				}));
				this.originalElement.css({
					margin: this.originalElement.css("margin")
				});
				this._proportionallyResize()
			}
			this.handles = h.handles || (!c(".ui-resizable-handle", this.element).length ? "e,s,se": {
				n: ".ui-resizable-n",
				e: ".ui-resizable-e",
				s: ".ui-resizable-s",
				w: ".ui-resizable-w",
				se: ".ui-resizable-se",
				sw: ".ui-resizable-sw",
				ne: ".ui-resizable-ne",
				nw: ".ui-resizable-nw"
			});
			if (this.handles.constructor == String) {
				if (this.handles == "all") {
					this.handles = "n,e,s,w,se,sw,ne,nw"
				}
				var l = this.handles.split(",");
				this.handles = {};
				for (var k = 0; k < l.length; k++) {
					var j = c.trim(l[k]),
					i = c('<div class="ui-resizable-handle ' + ("ui-resizable-" + j) + '"></div>');
					/sw|se|ne|nw/.test(j) && i.css({
						zIndex: ++h.zIndex
					});
					"se" == j && i.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
					this.handles[j] = ".ui-resizable-" + j;
					this.element.append(i)
				}
			}
			this._renderAxis = function(m) {
				m = m || this.element;
				for (var g in this.handles) {
					if (this.handles[g].constructor == String) {
						this.handles[g] = c(this.handles[g], this.element).show()
					}
					if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
						var f = c(this.handles[g], this.element),
						d = 0;
						d = /sw|ne|nw|se|n|s/.test(g) ? f.outerHeight() : f.outerWidth();
						f = ["padding", /ne|nw|n/.test(g) ? "Top": /se|sw|s/.test(g) ? "Bottom": /^e$/.test(g) ? "Right": "Left"].join("");
						m.css(f, d);
						this._proportionallyResize()
					}
					c(this.handles[g])
				}
			};
			this._renderAxis(this.element);
			this._handles = c(".ui-resizable-handle", this.element).disableSelection();
			this._handles.mouseover(function() {
				if (!e.resizing) {
					if (this.className) {
						var d = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)
					}
					e.axis = d && d[1] ? d[1] : "se"
				}
			});
			if (h.autoHide) {
				this._handles.hide();
				c(this.element).addClass("ui-resizable-autohide").hover(function() {
					if (!h.disabled) {
						c(this).removeClass("ui-resizable-autohide");
						e._handles.show()
					}
				},
				function() {
					if (!h.disabled) {
						if (!e.resizing) {
							c(this).addClass("ui-resizable-autohide");
							e._handles.hide()
						}
					}
				})
			}
			this._mouseInit()
		},
		destroy: function() {
			this._mouseDestroy();
			var d = function(f) {
				c(f).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
			};
			if (this.elementIsWrapper) {
				d(this.element);
				var e = this.element;
				e.after(this.originalElement.css({
					position: e.css("position"),
					width: e.outerWidth(),
					height: e.outerHeight(),
					top: e.css("top"),
					left: e.css("left")
				})).remove()
			}
			this.originalElement.css("resize", this.originalResizeStyle);
			d(this.originalElement);
			return this
		},
		_mouseCapture: function(d) {
			var e = false;
			for (var f in this.handles) {
				if (c(this.handles[f])[0] == d.target) {
					e = true
				}
			}
			return ! this.options.disabled && e
		},
		_mouseStart: function(e) {
			var g = this.options,
			j = this.element.position(),
			i = this.element;
			this.resizing = true;
			this.documentScroll = {
				top: c(document).scrollTop(),
				left: c(document).scrollLeft()
			};
			if (i.is(".ui-draggable") || /absolute/.test(i.css("position"))) {
				i.css({
					position: "absolute",
					top: j.top,
					left: j.left
				})
			}
			c.browser.opera && /relative/.test(i.css("position")) && i.css({
				position: "relative",
				top: "auto",
				left: "auto"
			});
			this._renderProxy();
			j = a(this.helper.css("left"));
			var h = a(this.helper.css("top"));
			if (g.containment) {
				j += c(g.containment).scrollLeft() || 0;
				h += c(g.containment).scrollTop() || 0
			}
			this.offset = this.helper.offset();
			this.position = {
				left: j,
				top: h
			};
			this.size = this._helper ? {
				width: i.outerWidth(),
				height: i.outerHeight()
			}: {
				width: i.width(),
				height: i.height()
			};
			this.originalSize = this._helper ? {
				width: i.outerWidth(),
				height: i.outerHeight()
			}: {
				width: i.width(),
				height: i.height()
			};
			this.originalPosition = {
				left: j,
				top: h
			};
			this.sizeDiff = {
				width: i.outerWidth() - i.width(),
				height: i.outerHeight() - i.height()
			};
			this.originalMousePosition = {
				left: e.pageX,
				top: e.pageY
			};
			this.aspectRatio = typeof g.aspectRatio == "number" ? g.aspectRatio: this.originalSize.width / this.originalSize.height || 1;
			g = c(".ui-resizable-" + this.axis).css("cursor");
			c("body").css("cursor", g == "auto" ? this.axis + "-resize": g);
			i.addClass("ui-resizable-resizing");
			this._propagate("start", e);
			return true
		},
		_mouseDrag: function(e) {
			var f = this.helper,
			h = this.originalMousePosition,
			g = this._change[this.axis];
			if (!g) {
				return false
			}
			h = g.apply(this, [e, e.pageX - h.left || 0, e.pageY - h.top || 0]);
			this._updateVirtualBoundaries(e.shiftKey);
			if (this._aspectRatio || e.shiftKey) {
				h = this._updateRatio(h, e)
			}
			h = this._respectSize(h, e);
			this._propagate("resize", e);
			f.css({
				top: this.position.top + "px",
				left: this.position.left + "px",
				width: this.size.width + "px",
				height: this.size.height + "px"
			}); ! this._helper && this._proportionallyResizeElements.length && this._proportionallyResize();
			this._updateCache(h);
			this._trigger("resize", e, this.ui());
			return false
		},
		_mouseStop: function(e) {
			this.resizing = false;
			var h = this.options,
			l = this;
			if (this._helper) {
				var k = this._proportionallyResizeElements,
				j = k.length && /textarea/i.test(k[0].nodeName);
				k = j && c.ui.hasScroll(k[0], "left") ? 0 : l.sizeDiff.height;
				j = j ? 0 : l.sizeDiff.width;
				j = {
					width: l.helper.width() - j,
					height: l.helper.height() - k
				};
				k = parseInt(l.element.css("left"), 10) + (l.position.left - l.originalPosition.left) || null;
				var i = parseInt(l.element.css("top"), 10) + (l.position.top - l.originalPosition.top) || null;
				h.animate || this.element.css(c.extend(j, {
					top: i,
					left: k
				}));
				l.helper.height(l.size.height);
				l.helper.width(l.size.width);
				this._helper && !h.animate && this._proportionallyResize()
			}
			c("body").css("cursor", "auto");
			this.element.removeClass("ui-resizable-resizing");
			this._propagate("stop", e);
			this._helper && this.helper.remove();
			return false
		},
		_updateVirtualBoundaries: function(e) {
			var g = this.options,
			j, i, h;
			g = {
				minWidth: b(g.minWidth) ? g.minWidth: 0,
				maxWidth: b(g.maxWidth) ? g.maxWidth: Infinity,
				minHeight: b(g.minHeight) ? g.minHeight: 0,
				maxHeight: b(g.maxHeight) ? g.maxHeight: Infinity
			};
			if (this._aspectRatio || e) {
				e = g.minHeight * this.aspectRatio;
				i = g.minWidth / this.aspectRatio;
				j = g.maxHeight * this.aspectRatio;
				h = g.maxWidth / this.aspectRatio;
				if (e > g.minWidth) {
					g.minWidth = e
				}
				if (i > g.minHeight) {
					g.minHeight = i
				}
				if (j < g.maxWidth) {
					g.maxWidth = j
				}
				if (h < g.maxHeight) {
					g.maxHeight = h
				}
			}
			this._vBoundaries = g
		},
		_updateCache: function(d) {
			this.offset = this.helper.offset();
			if (b(d.left)) {
				this.position.left = d.left
			}
			if (b(d.top)) {
				this.position.top = d.top
			}
			if (b(d.height)) {
				this.size.height = d.height
			}
			if (b(d.width)) {
				this.size.width = d.width
			}
		},
		_updateRatio: function(e) {
			var f = this.position,
			h = this.size,
			g = this.axis;
			if (b(e.height)) {
				e.width = e.height * this.aspectRatio
			} else {
				if (b(e.width)) {
					e.height = e.width / this.aspectRatio
				}
			}
			if (g == "sw") {
				e.left = f.left + (h.width - e.width);
				e.top = null
			}
			if (g == "nw") {
				e.top = f.top + (h.height - e.height);
				e.left = f.left + (h.width - e.width)
			}
			return e
		},
		_respectSize: function(s) {
			var u = this._vBoundaries,
			r = this.axis,
			q = b(s.width) && u.maxWidth && u.maxWidth < s.width,
			p = b(s.height) && u.maxHeight && u.maxHeight < s.height,
			o = b(s.width) && u.minWidth && u.minWidth > s.width,
			n = b(s.height) && u.minHeight && u.minHeight > s.height;
			if (o) {
				s.width = u.minWidth
			}
			if (n) {
				s.height = u.minHeight
			}
			if (q) {
				s.width = u.maxWidth
			}
			if (p) {
				s.height = u.maxHeight
			}
			var m = this.originalPosition.left + this.originalSize.width,
			k = this.position.top + this.size.height,
			e = /sw|nw|w/.test(r);
			r = /nw|ne|n/.test(r);
			if (o && e) {
				s.left = m - u.minWidth
			}
			if (q && e) {
				s.left = m - u.maxWidth
			}
			if (n && r) {
				s.top = k - u.minHeight
			}
			if (p && r) {
				s.top = k - u.maxHeight
			}
			if ((u = !s.width && !s.height) && !s.left && s.top) {
				s.top = null
			} else {
				if (u && !s.top && s.left) {
					s.left = null
				}
			}
			return s
		},
		_proportionallyResize: function() {
			if (this._proportionallyResizeElements.length) {
				for (var e = this.helper || this.element,
				g = 0; g < this._proportionallyResizeElements.length; g++) {
					var j = this._proportionallyResizeElements[g];
					if (!this.borderDif) {
						var i = [j.css("borderTopWidth"), j.css("borderRightWidth"), j.css("borderBottomWidth"), j.css("borderLeftWidth")],
						h = [j.css("paddingTop"), j.css("paddingRight"), j.css("paddingBottom"), j.css("paddingLeft")];
						this.borderDif = c.map(i,
						function(f, d) {
							f = parseInt(f, 10) || 0;
							d = parseInt(h[d], 10) || 0;
							return f + d
						})
					}
					c.browser.msie && (c(e).is(":hidden") || c(e).parents(":hidden").length) || j.css({
						height: e.height() - this.borderDif[0] - this.borderDif[2] || 0,
						width: e.width() - this.borderDif[1] - this.borderDif[3] || 0
					})
				}
			}
		},
		_renderProxy: function() {
			var d = this.options;
			this.elementOffset = this.element.offset();
			if (this._helper) {
				this.helper = this.helper || c('<div style="overflow:hidden;"></div>');
				var e = c.browser.msie && c.browser.version < 7,
				f = e ? 1 : 0;
				e = e ? 2 : -1;
				this.helper.addClass(this._helper).css({
					width: this.element.outerWidth() + e,
					height: this.element.outerHeight() + e,
					position: "absolute",
					left: this.elementOffset.left - f + "px",
					top: this.elementOffset.top - f + "px",
					zIndex: ++d.zIndex
				});
				this.helper.appendTo("body").disableSelection()
			} else {
				this.helper = this.element
			}
		},
		_change: {
			e: function(d, e) {
				return {
					width: this.originalSize.width + e
				}
			},
			w: function(d, e) {
				return {
					left: this.originalPosition.left + e,
					width: this.originalSize.width - e
				}
			},
			n: function(d, e, f) {
				return {
					top: this.originalPosition.top + f,
					height: this.originalSize.height - f
				}
			},
			s: function(d, e, f) {
				return {
					height: this.originalSize.height + f
				}
			},
			se: function(d, e, f) {
				return c.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [d, e, f]))
			},
			sw: function(d, e, f) {
				return c.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [d, e, f]))
			},
			ne: function(d, e, f) {
				return c.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [d, e, f]))
			},
			nw: function(d, e, f) {
				return c.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [d, e, f]))
			}
		},
		_propagate: function(d, e) {
			c.ui.plugin.call(this, d, [e, this.ui()]);
			d != "resize" && this._trigger(d, e, this.ui())
		},
		plugins: {},
		ui: function() {
			return {
				originalElement: this.originalElement,
				element: this.element,
				helper: this.helper,
				position: this.position,
				size: this.size,
				originalSize: this.originalSize,
				originalPosition: this.originalPosition
			}
		}
	});
	c.extend(c.ui.resizable, {
		version: "1.8.15"
	});
	c.ui.plugin.add("resizable", "alsoResize", {
		start: function() {
			var d = c(this).data("resizable").options,
			e = function(f) {
				c(f).each(function() {
					var g = c(this);
					g.data("resizable-alsoresize", {
						width: parseInt(g.width(), 10),
						height: parseInt(g.height(), 10),
						left: parseInt(g.css("left"), 10),
						top: parseInt(g.css("top"), 10),
						position: g.css("position")
					})
				})
			};
			if (typeof d.alsoResize == "object" && !d.alsoResize.parentNode) {
				if (d.alsoResize.length) {
					d.alsoResize = d.alsoResize[0];
					e(d.alsoResize)
				} else {
					c.each(d.alsoResize,
					function(f) {
						e(f)
					})
				}
			} else {
				e(d.alsoResize)
			}
		},
		resize: function(e, i) {
			var n = c(this).data("resizable");
			e = n.options;
			var m = n.originalSize,
			l = n.originalPosition,
			k = {
				height: n.size.height - m.height || 0,
				width: n.size.width - m.width || 0,
				top: n.position.top - l.top || 0,
				left: n.position.left - l.left || 0
			},
			j = function(f, d) {
				c(f).each(function() {
					var g = c(this),
					o = c(this).data("resizable-alsoresize"),
					s = {},
					h = d && d.length ? d: g.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
					c.each(h,
					function(q, p) {
						if ((q = (o[p] || 0) + (k[p] || 0)) && q >= 0) {
							s[p] = q || null
						}
					});
					if (c.browser.opera && /relative/.test(g.css("position"))) {
						n._revertToRelativePosition = true;
						g.css({
							position: "absolute",
							top: "auto",
							left: "auto"
						})
					}
					g.css(s)
				})
			};
			typeof e.alsoResize == "object" && !e.alsoResize.nodeType ? c.each(e.alsoResize,
			function(f, d) {
				j(f, d)
			}) : j(e.alsoResize)
		},
		stop: function() {
			var d = c(this).data("resizable"),
			e = d.options,
			f = function(g) {
				c(g).each(function() {
					var h = c(this);
					h.css({
						position: h.data("resizable-alsoresize").position
					})
				})
			};
			if (d._revertToRelativePosition) {
				d._revertToRelativePosition = false;
				typeof e.alsoResize == "object" && !e.alsoResize.nodeType ? c.each(e.alsoResize,
				function(g) {
					f(g)
				}) : f(e.alsoResize)
			}
			c(this).removeData("resizable-alsoresize")
		}
	});
	c.ui.plugin.add("resizable", "animate", {
		stop: function(e) {
			var i = c(this).data("resizable"),
			n = i.options,
			m = i._proportionallyResizeElements,
			l = m.length && /textarea/i.test(m[0].nodeName),
			k = l && c.ui.hasScroll(m[0], "left") ? 0 : i.sizeDiff.height;
			l = {
				width: i.size.width - (l ? 0 : i.sizeDiff.width),
				height: i.size.height - k
			};
			k = parseInt(i.element.css("left"), 10) + (i.position.left - i.originalPosition.left) || null;
			var j = parseInt(i.element.css("top"), 10) + (i.position.top - i.originalPosition.top) || null;
			i.element.animate(c.extend(l, j && k ? {
				top: j,
				left: k
			}: {}), {
				duration: n.animateDuration,
				easing: n.animateEasing,
				step: function() {
					var d = {
						width: parseInt(i.element.css("width"), 10),
						height: parseInt(i.element.css("height"), 10),
						top: parseInt(i.element.css("top"), 10),
						left: parseInt(i.element.css("left"), 10)
					};
					m && m.length && c(m[0]).css({
						width: d.width,
						height: d.height
					});
					i._updateCache(d);
					i._propagate("resize", e)
				}
			})
		}
	});
	c.ui.plugin.add("resizable", "containment", {
		start: function() {
			var e = c(this).data("resizable"),
			i = e.element,
			n = e.options.containment;
			if (i = n instanceof c ? n.get(0) : /parent/.test(n) ? i.parent().get(0) : n) {
				e.containerElement = c(i);
				if (/document/.test(n) || n == document) {
					e.containerOffset = {
						left: 0,
						top: 0
					};
					e.containerPosition = {
						left: 0,
						top: 0
					};
					e.parentData = {
						element: c(document),
						left: 0,
						top: 0,
						width: c(document).width(),
						height: c(document).height() || document.body.parentNode.scrollHeight
					}
				} else {
					var m = c(i),
					l = [];
					c(["Top", "Right", "Left", "Bottom"]).each(function(f, d) {
						l[f] = a(m.css("padding" + d))
					});
					e.containerOffset = m.offset();
					e.containerPosition = m.position();
					e.containerSize = {
						height: m.innerHeight() - l[3],
						width: m.innerWidth() - l[1]
					};
					n = e.containerOffset;
					var k = e.containerSize.height,
					j = e.containerSize.width;
					j = c.ui.hasScroll(i, "left") ? i.scrollWidth: j;
					k = c.ui.hasScroll(i) ? i.scrollHeight: k;
					e.parentData = {
						element: i,
						left: n.left,
						top: n.top,
						width: j,
						height: k
					}
				}
			}
		},
		resize: function(e) {
			var i = c(this).data("resizable"),
			n = i.options,
			m = i.containerOffset,
			l = i.position;
			e = i._aspectRatio || e.shiftKey;
			var k = {
				top: 0,
				left: 0
			},
			j = i.containerElement;
			if (j[0] != document && /static/.test(j.css("position"))) {
				k = m
			}
			if (l.left < (i._helper ? m.left: 0)) {
				i.size.width += i._helper ? i.position.left - m.left: i.position.left - k.left;
				if (e) {
					i.size.height = i.size.width / n.aspectRatio
				}
				i.position.left = n.helper ? m.left: 0
			}
			if (l.top < (i._helper ? m.top: 0)) {
				i.size.height += i._helper ? i.position.top - m.top: i.position.top;
				if (e) {
					i.size.width = i.size.height * n.aspectRatio
				}
				i.position.top = i._helper ? m.top: 0
			}
			i.offset.left = i.parentData.left + i.position.left;
			i.offset.top = i.parentData.top + i.position.top;
			n = Math.abs((i._helper ? i.offset.left - k.left: i.offset.left - k.left) + i.sizeDiff.width);
			m = Math.abs((i._helper ? i.offset.top - k.top: i.offset.top - m.top) + i.sizeDiff.height);
			l = i.containerElement.get(0) == i.element.parent().get(0);
			k = /relative|absolute/.test(i.containerElement.css("position"));
			if (l && k) {
				n -= i.parentData.left
			}
			if (n + i.size.width >= i.parentData.width) {
				i.size.width = i.parentData.width - n;
				if (e) {
					i.size.height = i.size.width / i.aspectRatio
				}
			}
			if (m + i.size.height >= i.parentData.height) {
				i.size.height = i.parentData.height - m;
				if (e) {
					i.size.width = i.size.height * i.aspectRatio
				}
			}
		},
		stop: function() {
			var e = c(this).data("resizable"),
			j = e.options,
			p = e.containerOffset,
			o = e.containerPosition,
			n = e.containerElement,
			m = c(e.helper),
			l = m.offset(),
			k = m.outerWidth() - e.sizeDiff.width;
			m = m.outerHeight() - e.sizeDiff.height;
			e._helper && !j.animate && /relative/.test(n.css("position")) && c(this).css({
				left: l.left - o.left - p.left,
				width: k,
				height: m
			});
			e._helper && !j.animate && /static/.test(n.css("position")) && c(this).css({
				left: l.left - o.left - p.left,
				width: k,
				height: m
			})
		}
	});
	c.ui.plugin.add("resizable", "ghost", {
		start: function() {
			var d = c(this).data("resizable"),
			e = d.options,
			f = d.size;
			d.ghost = d.originalElement.clone();
			d.ghost.css({
				opacity: 0.25,
				display: "block",
				position: "relative",
				height: f.height,
				width: f.width,
				margin: 0,
				left: 0,
				top: 0
			}).addClass("ui-resizable-ghost").addClass(typeof e.ghost == "string" ? e.ghost: "");
			d.ghost.appendTo(d.helper)
		},
		resize: function() {
			var d = c(this).data("resizable");
			d.ghost && d.ghost.css({
				position: "relative",
				height: d.size.height,
				width: d.size.width
			})
		},
		stop: function() {
			var d = c(this).data("resizable");
			d.ghost && d.helper && d.helper.get(0).removeChild(d.ghost.get(0))
		}
	});
	c.ui.plugin.add("resizable", "grid", {
		resize: function() {
			var e = c(this).data("resizable"),
			i = e.options,
			n = e.size,
			m = e.originalSize,
			l = e.originalPosition,
			k = e.axis;
			i.grid = typeof i.grid == "number" ? [i.grid, i.grid] : i.grid;
			var j = Math.round((n.width - m.width) / (i.grid[0] || 1)) * (i.grid[0] || 1);
			i = Math.round((n.height - m.height) / (i.grid[1] || 1)) * (i.grid[1] || 1);
			if (/^(se|s|e)$/.test(k)) {
				e.size.width = m.width + j;
				e.size.height = m.height + i
			} else {
				if (/^(ne)$/.test(k)) {
					e.size.width = m.width + j;
					e.size.height = m.height + i;
					e.position.top = l.top - i
				} else {
					if (/^(sw)$/.test(k)) {
						e.size.width = m.width + j;
						e.size.height = m.height + i
					} else {
						e.size.width = m.width + j;
						e.size.height = m.height + i;
						e.position.top = l.top - i
					}
					e.position.left = l.left - j
				}
			}
		}
	});
	var a = function(d) {
		return parseInt(d, 10) || 0
	},
	b = function(d) {
		return ! isNaN(parseInt(d, 10))
	}
})(jQuery); (function(a) {
	a.widget("ui.selectable", a.ui.mouse, {
		options: {
			appendTo: "body",
			autoRefresh: true,
			distance: 0,
			filter: "*",
			tolerance: "touch"
		},
		_create: function() {
			var d = this;
			this.element.addClass("ui-selectable");
			this.dragged = false;
			var b;
			this.refresh = function() {
				b = a(d.options.filter, d.element[0]);
				b.each(function() {
					var e = a(this),
					c = e.offset();
					a.data(this, "selectable-item", {
						element: this,
						$element: e,
						left: c.left,
						top: c.top,
						right: c.left + e.outerWidth(),
						bottom: c.top + e.outerHeight(),
						startselected: false,
						selected: e.hasClass("ui-selected"),
						selecting: e.hasClass("ui-selecting"),
						unselecting: e.hasClass("ui-unselecting")
					})
				})
			};
			this.refresh();
			this.selectees = b.addClass("ui-selectee");
			this._mouseInit();
			this.helper = a("<div class='ui-selectable-helper'></div>")
		},
		destroy: function() {
			this.selectees.removeClass("ui-selectee").removeData("selectable-item");
			this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable");
			this._mouseDestroy();
			return this
		},
		_mouseStart: function(g) {
			var b = this;
			this.opos = [g.pageX, g.pageY];
			if (!this.options.disabled) {
				var e = this.options;
				this.selectees = a(e.filter, this.element[0]);
				this._trigger("start", g);
				a(e.appendTo).append(this.helper);
				this.helper.css({
					left: g.clientX,
					top: g.clientY,
					width: 0,
					height: 0
				});
				e.autoRefresh && this.refresh();
				this.selectees.filter(".ui-selected").each(function() {
					var c = a.data(this, "selectable-item");
					c.startselected = true;
					if (!g.metaKey) {
						c.$element.removeClass("ui-selected");
						c.selected = false;
						c.$element.addClass("ui-unselecting");
						c.unselecting = true;
						b._trigger("unselecting", g, {
							unselecting: c.element
						})
					}
				});
				a(g.target).parents().andSelf().each(function() {
					var c = a.data(this, "selectable-item");
					if (c) {
						var d = !g.metaKey || !c.$element.hasClass("ui-selected");
						c.$element.removeClass(d ? "ui-unselecting": "ui-selected").addClass(d ? "ui-selecting": "ui-unselecting");
						c.unselecting = !d;
						c.selecting = d; (c.selected = d) ? b._trigger("selecting", g, {
							selecting: c.element
						}) : b._trigger("unselecting", g, {
							unselecting: c.element
						});
						return false
					}
				})
			}
		},
		_mouseDrag: function(q) {
			var o = this;
			this.dragged = true;
			if (!this.options.disabled) {
				var p = this.options,
				e = this.opos[0],
				n = this.opos[1],
				m = q.pageX,
				l = q.pageY;
				if (e > m) {
					var k = m;
					m = e;
					e = k
				}
				if (n > l) {
					k = l;
					l = n;
					n = k
				}
				this.helper.css({
					left: e,
					top: n,
					width: m - e,
					height: l - n
				});
				this.selectees.each(function() {
					var b = a.data(this, "selectable-item");
					if (! (!b || b.element == o.element[0])) {
						var c = false;
						if (p.tolerance == "touch") {
							c = !(b.left > m || b.right < e || b.top > l || b.bottom < n)
						} else {
							if (p.tolerance == "fit") {
								c = b.left > e && b.right < m && b.top > n && b.bottom < l
							}
						}
						if (c) {
							if (b.selected) {
								b.$element.removeClass("ui-selected");
								b.selected = false
							}
							if (b.unselecting) {
								b.$element.removeClass("ui-unselecting");
								b.unselecting = false
							}
							if (!b.selecting) {
								b.$element.addClass("ui-selecting");
								b.selecting = true;
								o._trigger("selecting", q, {
									selecting: b.element
								})
							}
						} else {
							if (b.selecting) {
								if (q.metaKey && b.startselected) {
									b.$element.removeClass("ui-selecting");
									b.selecting = false;
									b.$element.addClass("ui-selected");
									b.selected = true
								} else {
									b.$element.removeClass("ui-selecting");
									b.selecting = false;
									if (b.startselected) {
										b.$element.addClass("ui-unselecting");
										b.unselecting = true
									}
									o._trigger("unselecting", q, {
										unselecting: b.element
									})
								}
							}
							if (b.selected) {
								if (!q.metaKey && !b.startselected) {
									b.$element.removeClass("ui-selected");
									b.selected = false;
									b.$element.addClass("ui-unselecting");
									b.unselecting = true;
									o._trigger("unselecting", q, {
										unselecting: b.element
									})
								}
							}
						}
					}
				});
				return false
			}
		},
		_mouseStop: function(d) {
			var b = this;
			this.dragged = false;
			a(".ui-unselecting", this.element[0]).each(function() {
				var c = a.data(this, "selectable-item");
				c.$element.removeClass("ui-unselecting");
				c.unselecting = false;
				c.startselected = false;
				b._trigger("unselected", d, {
					unselected: c.element
				})
			});
			a(".ui-selecting", this.element[0]).each(function() {
				var c = a.data(this, "selectable-item");
				c.$element.removeClass("ui-selecting").addClass("ui-selected");
				c.selecting = false;
				c.selected = true;
				c.startselected = true;
				b._trigger("selected", d, {
					selected: c.element
				})
			});
			this._trigger("stop", d);
			this.helper.remove();
			return false
		}
	});
	a.extend(a.ui.selectable, {
		version: "1.8.15"
	})
})(jQuery); (function(a) {
	a.widget("ui.sortable", a.ui.mouse, {
		widgetEventPrefix: "sort",
		options: {
			appendTo: "parent",
			axis: false,
			connectWith: false,
			containment: false,
			cursor: "auto",
			cursorAt: false,
			dropOnEmpty: true,
			forcePlaceholderSize: false,
			forceHelperSize: false,
			grid: false,
			handle: false,
			helper: "original",
			items: "> *",
			opacity: false,
			placeholder: false,
			revert: false,
			scroll: true,
			scrollSensitivity: 20,
			scrollSpeed: 20,
			scope: "default",
			tolerance: "intersect",
			zIndex: 1000
		},
		_create: function() {
			var b = this.options;
			this.containerCache = {};
			this.element.addClass("ui-sortable");
			this.refresh();
			this.floating = this.items.length ? b.axis === "x" || /left|right/.test(this.items[0].item.css("float")) || /inline|table-cell/.test(this.items[0].item.css("display")) : false;
			this.offset = this.element.offset();
			this._mouseInit()
		},
		destroy: function() {
			this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable");
			this._mouseDestroy();
			for (var b = this.items.length - 1; b >= 0; b--) {
				this.items[b].item.removeData("sortable-item")
			}
			return this
		},
		_setOption: function(d, c) {
			if (d === "disabled") {
				this.options[d] = c;
				this.widget()[c ? "addClass": "removeClass"]("ui-sortable-disabled")
			} else {
				a.Widget.prototype._setOption.apply(this, arguments)
			}
		},
		_mouseCapture: function(g, d) {
			if (this.reverting) {
				return false
			}
			if (this.options.disabled || this.options.type == "static") {
				return false
			}
			this._refreshItems(g);
			var j = null,
			i = this;
			a(g.target).parents().each(function() {
				if (a.data(this, "sortable-item") == i) {
					j = a(this);
					return false
				}
			});
			if (a.data(g.target, "sortable-item") == i) {
				j = a(g.target)
			}
			if (!j) {
				return false
			}
			if (this.options.handle && !d) {
				var h = false;
				a(this.options.handle, j).find("*").andSelf().each(function() {
					if (this == g.target) {
						h = true
					}
				});
				if (!h) {
					return false
				}
			}
			this.currentItem = j;
			this._removeCurrentsFromItems();
			return true
		},
		_mouseStart: function(f, d, h) {
			d = this.options;
			var g = this;
			this.currentContainer = this;
			this.refreshPositions();
			this.helper = this._createHelper(f);
			this._cacheHelperProportions();
			this._cacheMargins();
			this.scrollParent = this.helper.scrollParent();
			this.offset = this.currentItem.offset();
			this.offset = {
				top: this.offset.top - this.margins.top,
				left: this.offset.left - this.margins.left
			};
			this.helper.css("position", "absolute");
			this.cssPosition = this.helper.css("position");
			a.extend(this.offset, {
				click: {
					left: f.pageX - this.offset.left,
					top: f.pageY - this.offset.top
				},
				parent: this._getParentOffset(),
				relative: this._getRelativeOffset()
			});
			this.originalPosition = this._generatePosition(f);
			this.originalPageX = f.pageX;
			this.originalPageY = f.pageY;
			d.cursorAt && this._adjustOffsetFromHelper(d.cursorAt);
			this.domPosition = {
				prev: this.currentItem.prev()[0],
				parent: this.currentItem.parent()[0]
			};
			this.helper[0] != this.currentItem[0] && this.currentItem.hide();
			this._createPlaceholder();
			d.containment && this._setContainment();
			if (d.cursor) {
				if (a("body").css("cursor")) {
					this._storedCursor = a("body").css("cursor")
				}
				a("body").css("cursor", d.cursor)
			}
			if (d.opacity) {
				if (this.helper.css("opacity")) {
					this._storedOpacity = this.helper.css("opacity")
				}
				this.helper.css("opacity", d.opacity)
			}
			if (d.zIndex) {
				if (this.helper.css("zIndex")) {
					this._storedZIndex = this.helper.css("zIndex")
				}
				this.helper.css("zIndex", d.zIndex)
			}
			if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {
				this.overflowOffset = this.scrollParent.offset()
			}
			this._trigger("start", f, this._uiHash());
			this._preserveHelperProportions || this._cacheHelperProportions();
			if (!h) {
				for (h = this.containers.length - 1; h >= 0; h--) {
					this.containers[h]._trigger("activate", f, g._uiHash(this))
				}
			}
			if (a.ui.ddmanager) {
				a.ui.ddmanager.current = this
			}
			a.ui.ddmanager && !d.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, f);
			this.dragging = true;
			this.helper.addClass("ui-sortable-helper");
			this._mouseDrag(f);
			return true
		},
		_mouseDrag: function(g) {
			this.position = this._generatePosition(g);
			this.positionAbs = this._convertPositionTo("absolute");
			if (!this.lastPositionAbs) {
				this.lastPositionAbs = this.positionAbs
			}
			if (this.options.scroll) {
				var d = this.options,
				j = false;
				if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {
					if (this.overflowOffset.top + this.scrollParent[0].offsetHeight - g.pageY < d.scrollSensitivity) {
						this.scrollParent[0].scrollTop = j = this.scrollParent[0].scrollTop + d.scrollSpeed
					} else {
						if (g.pageY - this.overflowOffset.top < d.scrollSensitivity) {
							this.scrollParent[0].scrollTop = j = this.scrollParent[0].scrollTop - d.scrollSpeed
						}
					}
					if (this.overflowOffset.left + this.scrollParent[0].offsetWidth - g.pageX < d.scrollSensitivity) {
						this.scrollParent[0].scrollLeft = j = this.scrollParent[0].scrollLeft + d.scrollSpeed
					} else {
						if (g.pageX - this.overflowOffset.left < d.scrollSensitivity) {
							this.scrollParent[0].scrollLeft = j = this.scrollParent[0].scrollLeft - d.scrollSpeed
						}
					}
				} else {
					if (g.pageY - a(document).scrollTop() < d.scrollSensitivity) {
						j = a(document).scrollTop(a(document).scrollTop() - d.scrollSpeed)
					} else {
						if (a(window).height() - (g.pageY - a(document).scrollTop()) < d.scrollSensitivity) {
							j = a(document).scrollTop(a(document).scrollTop() + d.scrollSpeed)
						}
					}
					if (g.pageX - a(document).scrollLeft() < d.scrollSensitivity) {
						j = a(document).scrollLeft(a(document).scrollLeft() - d.scrollSpeed)
					} else {
						if (a(window).width() - (g.pageX - a(document).scrollLeft()) < d.scrollSensitivity) {
							j = a(document).scrollLeft(a(document).scrollLeft() + d.scrollSpeed)
						}
					}
				}
				j !== false && a.ui.ddmanager && !d.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, g)
			}
			this.positionAbs = this._convertPositionTo("absolute");
			if (!this.options.axis || this.options.axis != "y") {
				this.helper[0].style.left = this.position.left + "px"
			}
			if (!this.options.axis || this.options.axis != "x") {
				this.helper[0].style.top = this.position.top + "px"
			}
			for (d = this.items.length - 1; d >= 0; d--) {
				j = this.items[d];
				var i = j.item[0],
				h = this._intersectsWithPointer(j);
				if (h) {
					if (i != this.currentItem[0] && this.placeholder[h == 1 ? "next": "prev"]()[0] != i && !a.ui.contains(this.placeholder[0], i) && (this.options.type == "semi-dynamic" ? !a.ui.contains(this.element[0], i) : true)) {
						this.direction = h == 1 ? "down": "up";
						if (this.options.tolerance == "pointer" || this._intersectsWithSides(j)) {
							this._rearrange(g, j)
						} else {
							break
						}
						this._trigger("change", g, this._uiHash());
						break
					}
				}
			}
			this._contactContainers(g);
			a.ui.ddmanager && a.ui.ddmanager.drag(this, g);
			this._trigger("sort", g, this._uiHash());
			this.lastPositionAbs = this.positionAbs;
			return false
		},
		_mouseStop: function(e, d) {
			if (e) {
				a.ui.ddmanager && !this.options.dropBehaviour && a.ui.ddmanager.drop(this, e);
				if (this.options.revert) {
					var f = this;
					d = f.placeholder.offset();
					f.reverting = true;
					a(this.helper).animate({
						left: d.left - this.offset.parent.left - f.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft),
						top: d.top - this.offset.parent.top - f.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop)
					},
					parseInt(this.options.revert, 10) || 500,
					function() {
						f._clear(e)
					})
				} else {
					this._clear(e, d)
				}
				return false
			}
		},
		cancel: function() {
			var d = this;
			if (this.dragging) {
				this._mouseUp({
					target: null
				});
				this.options.helper == "original" ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
				for (var c = this.containers.length - 1; c >= 0; c--) {
					this.containers[c]._trigger("deactivate", null, d._uiHash(this));
					if (this.containers[c].containerCache.over) {
						this.containers[c]._trigger("out", null, d._uiHash(this));
						this.containers[c].containerCache.over = 0
					}
				}
			}
			if (this.placeholder) {
				this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
				this.options.helper != "original" && this.helper && this.helper[0].parentNode && this.helper.remove();
				a.extend(this, {
					helper: null,
					dragging: false,
					reverting: false,
					_noFinalSort: null
				});
				this.domPosition.prev ? a(this.domPosition.prev).after(this.currentItem) : a(this.domPosition.parent).prepend(this.currentItem)
			}
			return this
		},
		serialize: function(e) {
			var d = this._getItemsAsjQuery(e && e.connected),
			f = [];
			e = e || {};
			a(d).each(function() {
				var b = (a(e.item || this).attr(e.attribute || "id") || "").match(e.expression || /(.+)[-=_](.+)/);
				if (b) {
					f.push((e.key || b[1] + "[]") + "=" + (e.key && e.expression ? b[1] : b[2]))
				}
			}); ! f.length && e.key && f.push(e.key + "=");
			return f.join("&")
		},
		toArray: function(e) {
			var d = this._getItemsAsjQuery(e && e.connected),
			f = [];
			e = e || {};
			d.each(function() {
				f.push(a(e.item || this).attr(e.attribute || "id") || "")
			});
			return f
		},
		_intersectsWith: function(w) {
			var v = this.positionAbs.left,
			u = v + this.helperProportions.width,
			s = this.positionAbs.top,
			r = s + this.helperProportions.height,
			q = w.left,
			p = q + w.width,
			o = w.top,
			m = o + w.height,
			n = this.offset.click.top,
			d = this.offset.click.left;
			n = s + n > o && s + n < m && v + d > q && v + d < p;
			return this.options.tolerance == "pointer" || this.options.forcePointerForContainers || this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width": "height"] > w[this.floating ? "width": "height"] ? n: q < v + this.helperProportions.width / 2 && u - this.helperProportions.width / 2 < p && o < s + this.helperProportions.height / 2 && r - this.helperProportions.height / 2 < m
		},
		_intersectsWithPointer: function(e) {
			var d = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, e.top, e.height);
			e = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, e.left, e.width);
			d = d && e;
			e = this._getDragVerticalDirection();
			var f = this._getDragHorizontalDirection();
			if (!d) {
				return false
			}
			return this.floating ? f && f == "right" || e == "down" ? 2 : 1 : e && (e == "down" ? 2 : 1)
		},
		_intersectsWithSides: function(f) {
			var d = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, f.top + f.height / 2, f.height);
			f = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, f.left + f.width / 2, f.width);
			var h = this._getDragVerticalDirection(),
			g = this._getDragHorizontalDirection();
			return this.floating && g ? g == "right" && f || g == "left" && !f: h && (h == "down" && d || h == "up" && !d)
		},
		_getDragVerticalDirection: function() {
			var b = this.positionAbs.top - this.lastPositionAbs.top;
			return b != 0 && (b > 0 ? "down": "up")
		},
		_getDragHorizontalDirection: function() {
			var b = this.positionAbs.left - this.lastPositionAbs.left;
			return b != 0 && (b > 0 ? "right": "left")
		},
		refresh: function(b) {
			this._refreshItems(b);
			this.refreshPositions();
			return this
		},
		_connectWith: function() {
			var b = this.options;
			return b.connectWith.constructor == String ? [b.connectWith] : b.connectWith
		},
		_getItemsAsjQuery: function(i) {
			var d = [],
			n = [],
			m = this._connectWith();
			if (m && i) {
				for (i = m.length - 1; i >= 0; i--) {
					for (var l = a(m[i]), k = l.length - 1; k >= 0; k--) {
						var j = a.data(l[k], "sortable");
						if (j && j != this && !j.options.disabled) {
							n.push([a.isFunction(j.options.items) ? j.options.items.call(j.element) : a(j.options.items, j.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), j])
						}
					}
				}
			}
			n.push([a.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
				options: this.options,
				item: this.currentItem
			}) : a(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
			for (i = n.length - 1; i >= 0; i--) {
				n[i][0].each(function() {
					d.push(this)
				})
			}
			return a(d)
		},
		_removeCurrentsFromItems: function() {
			for (var e = this.currentItem.find(":data(sortable-item)"), d = 0; d < this.items.length; d++) {
				for (var f = 0; f < e.length; f++) {
					e[f] == this.items[d].item[0] && this.items.splice(d, 1)
				}
			}
		},
		_refreshItems: function(j) {
			this.items = [];
			this.containers = [this];
			var d = this.items,
			p = [[a.isFunction(this.options.items) ? this.options.items.call(this.element[0], j, {
				item: this.currentItem
			}) : a(this.options.items, this.element), this]],
			o = this._connectWith();
			if (o) {
				for (var n = o.length - 1; n >= 0; n--) {
					for (var m = a(o[n]), l = m.length - 1; l >= 0; l--) {
						var k = a.data(m[l], "sortable");
						if (k && k != this && !k.options.disabled) {
							p.push([a.isFunction(k.options.items) ? k.options.items.call(k.element[0], j, {
								item: this.currentItem
							}) : a(k.options.items, k.element), k]);
							this.containers.push(k)
						}
					}
				}
			}
			for (n = p.length - 1; n >= 0; n--) {
				j = p[n][1];
				o = p[n][0];
				l = 0;
				for (m = o.length; l < m; l++) {
					k = a(o[l]);
					k.data("sortable-item", j);
					d.push({
						item: k,
						instance: j,
						width: 0,
						height: 0,
						left: 0,
						top: 0
					})
				}
			}
		},
		refreshPositions: function(f) {
			if (this.offsetParent && this.helper) {
				this.offset.parent = this._getParentOffset()
			}
			for (var d = this.items.length - 1; d >= 0; d--) {
				var h = this.items[d];
				if (! (h.instance != this.currentContainer && this.currentContainer && h.item[0] != this.currentItem[0])) {
					var g = this.options.toleranceElement ? a(this.options.toleranceElement, h.item) : h.item;
					if (!f) {
						h.width = g.outerWidth();
						h.height = g.outerHeight()
					}
					g = g.offset();
					h.left = g.left;
					h.top = g.top
				}
			}
			if (this.options.custom && this.options.custom.refreshContainers) {
				this.options.custom.refreshContainers.call(this)
			} else {
				for (d = this.containers.length - 1; d >= 0; d--) {
					g = this.containers[d].element.offset();
					this.containers[d].containerCache.left = g.left;
					this.containers[d].containerCache.top = g.top;
					this.containers[d].containerCache.width = this.containers[d].element.outerWidth();
					this.containers[d].containerCache.height = this.containers[d].element.outerHeight()
				}
			}
			return this
		},
		_createPlaceholder: function(f) {
			var d = f || this,
			h = d.options;
			if (!h.placeholder || h.placeholder.constructor == String) {
				var g = h.placeholder;
				h.placeholder = {
					element: function() {
						var b = a(document.createElement(d.currentItem[0].nodeName)).addClass(g || d.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];
						if (!g) {
							b.style.visibility = "hidden"
						}
						return b
					},
					update: function(c, b) {
						if (! (g && !h.forcePlaceholderSize)) {
							b.height() || b.height(d.currentItem.innerHeight() - parseInt(d.currentItem.css("paddingTop") || 0, 10) - parseInt(d.currentItem.css("paddingBottom") || 0, 10));
							b.width() || b.width(d.currentItem.innerWidth() - parseInt(d.currentItem.css("paddingLeft") || 0, 10) - parseInt(d.currentItem.css("paddingRight") || 0, 10))
						}
					}
				}
			}
			d.placeholder = a(h.placeholder.element.call(d.element, d.currentItem));
			d.currentItem.after(d.placeholder);
			h.placeholder.update(d, d.placeholder)
		},
		_contactContainers: function(i) {
			for (var d = null,
			n = null,
			m = this.containers.length - 1; m >= 0; m--) {
				if (!a.ui.contains(this.currentItem[0], this.containers[m].element[0])) {
					if (this._intersectsWith(this.containers[m].containerCache)) {
						if (! (d && a.ui.contains(this.containers[m].element[0], d.element[0]))) {
							d = this.containers[m];
							n = m
						}
					} else {
						if (this.containers[m].containerCache.over) {
							this.containers[m]._trigger("out", i, this._uiHash(this));
							this.containers[m].containerCache.over = 0
						}
					}
				}
			}
			if (d) {
				if (this.containers.length === 1) {
					this.containers[n]._trigger("over", i, this._uiHash(this));
					this.containers[n].containerCache.over = 1
				} else {
					if (this.currentContainer != this.containers[n]) {
						d = 10000;
						m = null;
						for (var l = this.positionAbs[this.containers[n].floating ? "left": "top"], k = this.items.length - 1; k >= 0; k--) {
							if (a.ui.contains(this.containers[n].element[0], this.items[k].item[0])) {
								var j = this.items[k][this.containers[n].floating ? "left": "top"];
								if (Math.abs(j - l) < d) {
									d = Math.abs(j - l);
									m = this.items[k]
								}
							}
						}
						if (m || this.options.dropOnEmpty) {
							this.currentContainer = this.containers[n];
							m ? this._rearrange(i, m, null, true) : this._rearrange(i, null, this.containers[n].element, true);
							this._trigger("change", i, this._uiHash());
							this.containers[n]._trigger("change", i, this._uiHash(this));
							this.options.placeholder.update(this.currentContainer, this.placeholder);
							this.containers[n]._trigger("over", i, this._uiHash(this));
							this.containers[n].containerCache.over = 1
						}
					}
				}
			}
		},
		_createHelper: function(d) {
			var c = this.options;
			d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [d, this.currentItem])) : c.helper == "clone" ? this.currentItem.clone() : this.currentItem;
			d.parents("body").length || a(c.appendTo != "parent" ? c.appendTo: this.currentItem[0].parentNode)[0].appendChild(d[0]);
			if (d[0] == this.currentItem[0]) {
				this._storedCSS = {
					width: this.currentItem[0].style.width,
					height: this.currentItem[0].style.height,
					position: this.currentItem.css("position"),
					top: this.currentItem.css("top"),
					left: this.currentItem.css("left")
				}
			}
			if (d[0].style.width == "" || c.forceHelperSize) {
				d.width(this.currentItem.width())
			}
			if (d[0].style.height == "" || c.forceHelperSize) {
				d.height(this.currentItem.height())
			}
			return d
		},
		_adjustOffsetFromHelper: function(b) {
			if (typeof b == "string") {
				b = b.split(" ")
			}
			if (a.isArray(b)) {
				b = {
					left: +b[0],
					top: +b[1] || 0
				}
			}
			if ("left" in b) {
				this.offset.click.left = b.left + this.margins.left
			}
			if ("right" in b) {
				this.offset.click.left = this.helperProportions.width - b.right + this.margins.left
			}
			if ("top" in b) {
				this.offset.click.top = b.top + this.margins.top
			}
			if ("bottom" in b) {
				this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top
			}
		},
		_getParentOffset: function() {
			this.offsetParent = this.helper.offsetParent();
			var b = this.offsetParent.offset();
			if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) {
				b.left += this.scrollParent.scrollLeft();
				b.top += this.scrollParent.scrollTop()
			}
			if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) {
				b = {
					top: 0,
					left: 0
				}
			}
			return {
				top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
				left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
			}
		},
		_getRelativeOffset: function() {
			if (this.cssPosition == "relative") {
				var b = this.currentItem.position();
				return {
					top: b.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
					left: b.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
				}
			} else {
				return {
					top: 0,
					left: 0
				}
			}
		},
		_cacheMargins: function() {
			this.margins = {
				left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
				top: parseInt(this.currentItem.css("marginTop"), 10) || 0
			}
		},
		_cacheHelperProportions: function() {
			this.helperProportions = {
				width: this.helper.outerWidth(),
				height: this.helper.outerHeight()
			}
		},
		_setContainment: function() {
			var e = this.options;
			if (e.containment == "parent") {
				e.containment = this.helper[0].parentNode
			}
			if (e.containment == "document" || e.containment == "window") {
				this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(e.containment == "document" ? document: window).width() - this.helperProportions.width - this.margins.left, (a(e.containment == "document" ? document: window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
			}
			if (!/^(document|window|parent)$/.test(e.containment)) {
				var d = a(e.containment)[0];
				e = a(e.containment).offset();
				var f = a(d).css("overflow") != "hidden";
				this.containment = [e.left + (parseInt(a(d).css("borderLeftWidth"), 10) || 0) + (parseInt(a(d).css("paddingLeft"), 10) || 0) - this.margins.left, e.top + (parseInt(a(d).css("borderTopWidth"), 10) || 0) + (parseInt(a(d).css("paddingTop"), 10) || 0) - this.margins.top, e.left + (f ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(a(d).css("borderLeftWidth"), 10) || 0) - (parseInt(a(d).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, e.top + (f ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(a(d).css("borderTopWidth"), 10) || 0) - (parseInt(a(d).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
			}
		},
		_convertPositionTo: function(f, d) {
			if (!d) {
				d = this.position
			}
			f = f == "absolute" ? 1 : -1;
			var h = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent: this.scrollParent,
			g = /(html|body)/i.test(h[0].tagName);
			return {
				top: d.top + this.offset.relative.top * f + this.offset.parent.top * f - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : h.scrollTop()) * f),
				left: d.left + this.offset.relative.left * f + this.offset.parent.left * f - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : h.scrollLeft()) * f)
			}
		},
		_generatePosition: function(h) {
			var d = this.options,
			l = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent: this.scrollParent,
			k = /(html|body)/i.test(l[0].tagName);
			if (this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) {
				this.offset.relative = this._getRelativeOffset()
			}
			var j = h.pageX,
			i = h.pageY;
			if (this.originalPosition) {
				if (this.containment) {
					if (h.pageX - this.offset.click.left < this.containment[0]) {
						j = this.containment[0] + this.offset.click.left
					}
					if (h.pageY - this.offset.click.top < this.containment[1]) {
						i = this.containment[1] + this.offset.click.top
					}
					if (h.pageX - this.offset.click.left > this.containment[2]) {
						j = this.containment[2] + this.offset.click.left
					}
					if (h.pageY - this.offset.click.top > this.containment[3]) {
						i = this.containment[3] + this.offset.click.top
					}
				}
				if (d.grid) {
					i = this.originalPageY + Math.round((i - this.originalPageY) / d.grid[1]) * d.grid[1];
					i = this.containment ? !(i - this.offset.click.top < this.containment[1] || i - this.offset.click.top > this.containment[3]) ? i: !(i - this.offset.click.top < this.containment[1]) ? i - d.grid[1] : i + d.grid[1] : i;
					j = this.originalPageX + Math.round((j - this.originalPageX) / d.grid[0]) * d.grid[0];
					j = this.containment ? !(j - this.offset.click.left < this.containment[0] || j - this.offset.click.left > this.containment[2]) ? j: !(j - this.offset.click.left < this.containment[0]) ? j - d.grid[0] : j + d.grid[0] : j
				}
			}
			return {
				top: i - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : k ? 0 : l.scrollTop()),
				left: j - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : k ? 0 : l.scrollLeft())
			}
		},
		_rearrange: function(h, d, l, k) {
			l ? l[0].appendChild(this.placeholder[0]) : d.item[0].parentNode.insertBefore(this.placeholder[0], this.direction == "down" ? d.item[0] : d.item[0].nextSibling);
			this.counter = this.counter ? ++this.counter: 1;
			var j = this,
			i = this.counter;
			window.setTimeout(function() {
				i == j.counter && j.refreshPositions(!k)
			},
			0)
		},
		_clear: function(f, d) {
			this.reverting = false;
			var h = []; ! this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem);
			this._noFinalSort = null;
			if (this.helper[0] == this.currentItem[0]) {
				for (var g in this._storedCSS) {
					if (this._storedCSS[g] == "auto" || this._storedCSS[g] == "static") {
						this._storedCSS[g] = ""
					}
				}
				this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
			} else {
				this.currentItem.show()
			}
			this.fromOutside && !d && h.push(function(b) {
				this._trigger("receive", b, this._uiHash(this.fromOutside))
			});
			if ((this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !d) {
				h.push(function(b) {
					this._trigger("update", b, this._uiHash())
				})
			}
			if (!a.ui.contains(this.element[0], this.currentItem[0])) {
				d || h.push(function(b) {
					this._trigger("remove", b, this._uiHash())
				});
				for (g = this.containers.length - 1; g >= 0; g--) {
					if (a.ui.contains(this.containers[g].element[0], this.currentItem[0]) && !d) {
						h.push(function(b) {
							return function(c) {
								b._trigger("receive", c, this._uiHash(this))
							}
						}.call(this, this.containers[g]));
						h.push(function(b) {
							return function(c) {
								b._trigger("update", c, this._uiHash(this))
							}
						}.call(this, this.containers[g]))
					}
				}
			}
			for (g = this.containers.length - 1; g >= 0; g--) {
				d || h.push(function(b) {
					return function(c) {
						b._trigger("deactivate", c, this._uiHash(this))
					}
				}.call(this, this.containers[g]));
				if (this.containers[g].containerCache.over) {
					h.push(function(b) {
						return function(c) {
							b._trigger("out", c, this._uiHash(this))
						}
					}.call(this, this.containers[g]));
					this.containers[g].containerCache.over = 0
				}
			}
			this._storedCursor && a("body").css("cursor", this._storedCursor);
			this._storedOpacity && this.helper.css("opacity", this._storedOpacity);
			if (this._storedZIndex) {
				this.helper.css("zIndex", this._storedZIndex == "auto" ? "": this._storedZIndex)
			}
			this.dragging = false;
			if (this.cancelHelperRemoval) {
				if (!d) {
					this._trigger("beforeStop", f, this._uiHash());
					for (g = 0; g < h.length; g++) {
						h[g].call(this, f)
					}
					this._trigger("stop", f, this._uiHash())
				}
				return false
			}
			d || this._trigger("beforeStop", f, this._uiHash());
			this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
			this.helper[0] != this.currentItem[0] && this.helper.remove();
			this.helper = null;
			if (!d) {
				for (g = 0; g < h.length; g++) {
					h[g].call(this, f)
				}
				this._trigger("stop", f, this._uiHash())
			}
			this.fromOutside = false;
			return true
		},
		_trigger: function() {
			a.Widget.prototype._trigger.apply(this, arguments) === false && this.cancel()
		},
		_uiHash: function(d) {
			var c = d || this;
			return {
				helper: c.helper,
				placeholder: c.placeholder || a([]),
				position: c.position,
				originalPosition: c.originalPosition,
				offset: c.positionAbs,
				item: c.currentItem,
				sender: d ? d.element: null
			}
		}
	});
	a.extend(a.ui.sortable, {
		version: "1.8.15"
	})
})(jQuery); (function(a) {
	a.widget("ui.accordion", {
		options: {
			active: 0,
			animated: "slide",
			autoHeight: true,
			clearStyle: false,
			collapsible: false,
			event: "click",
			fillSpace: false,
			header: "> li > :first-child,> :not(li):even",
			icons: {
				header: "ui-icon-triangle-1-e",
				headerSelected: "ui-icon-triangle-1-s"
			},
			navigation: false,
			navigationFilter: function() {
				return this.href.toLowerCase() === location.href.toLowerCase()
			}
		},
		_create: function() {
			var e = this,
			c = e.options;
			e.running = 0;
			e.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix");
			e.headers = e.element.find(c.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion",
			function() {
				c.disabled || a(this).addClass("ui-state-hover")
			}).bind("mouseleave.accordion",
			function() {
				c.disabled || a(this).removeClass("ui-state-hover")
			}).bind("focus.accordion",
			function() {
				c.disabled || a(this).addClass("ui-state-focus")
			}).bind("blur.accordion",
			function() {
				c.disabled || a(this).removeClass("ui-state-focus")
			});
			e.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");
			if (c.navigation) {
				var g = e.element.find("a").filter(c.navigationFilter).eq(0);
				if (g.length) {
					var f = g.closest(".ui-accordion-header");
					e.active = f.length ? f: g.closest(".ui-accordion-content").prev()
				}
			}
			e.active = e._findActive(e.active || c.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top");
			e.active.next().addClass("ui-accordion-content-active");
			e._createIcons();
			e.resize();
			e.element.attr("role", "tablist");
			e.headers.attr("role", "tab").bind("keydown.accordion",
			function(b) {
				return e._keydown(b)
			}).next().attr("role", "tabpanel");
			e.headers.not(e.active || "").attr({
				"aria-expanded": "false",
				"aria-selected": "false",
				tabIndex: -1
			}).next().hide();
			e.active.length ? e.active.attr({
				"aria-expanded": "true",
				"aria-selected": "true",
				tabIndex: 0
			}) : e.headers.eq(0).attr("tabIndex", 0);
			a.browser.safari || e.headers.find("a").attr("tabIndex", -1);
			c.event && e.headers.bind(c.event.split(" ").join(".accordion ") + ".accordion",
			function(b) {
				e._clickHandler.call(e, b, this);
				b.preventDefault()
			})
		},
		_createIcons: function() {
			var b = this.options;
			if (b.icons) {
				a("<span></span>").addClass("ui-icon " + b.icons.header).prependTo(this.headers);
				this.active.children(".ui-icon").toggleClass(b.icons.header).toggleClass(b.icons.headerSelected);
				this.element.addClass("ui-accordion-icons")
			}
		},
		_destroyIcons: function() {
			this.headers.children(".ui-icon").remove();
			this.element.removeClass("ui-accordion-icons")
		},
		destroy: function() {
			var d = this.options;
			this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");
			this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("tabIndex");
			this.headers.find("a").removeAttr("tabIndex");
			this._destroyIcons();
			var c = this.headers.next().css("display", "").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled");
			if (d.autoHeight || d.fillHeight) {
				c.css("height", "")
			}
			return a.Widget.prototype.destroy.call(this)
		},
		_setOption: function(d, c) {
			a.Widget.prototype._setOption.apply(this, arguments);
			d == "active" && this.activate(c);
			if (d == "icons") {
				this._destroyIcons();
				c && this._createIcons()
			}
			if (d == "disabled") {
				this.headers.add(this.headers.next())[c ? "addClass": "removeClass"]("ui-accordion-disabled ui-state-disabled")
			}
		},
		_keydown: function(e) {
			if (! (this.options.disabled || e.altKey || e.ctrlKey)) {
				var c = a.ui.keyCode,
				j = this.headers.length,
				g = this.headers.index(e.target),
				i = false;
				switch (e.keyCode) {
				case c.RIGHT:
				case c.DOWN:
					i = this.headers[(g + 1) % j];
					break;
				case c.LEFT:
				case c.UP:
					i = this.headers[(g - 1 + j) % j];
					break;
				case c.SPACE:
				case c.ENTER:
					this._clickHandler({
						target:
						e.target
					},
					e.target);
					e.preventDefault()
				}
				if (i) {
					a(e.target).attr("tabIndex", -1);
					a(i).attr("tabIndex", 0);
					i.focus();
					return false
				}
				return true
			}
		},
		resize: function() {
			var e = this.options,
			c;
			if (e.fillSpace) {
				if (a.browser.msie) {
					var f = this.element.parent().css("overflow");
					this.element.parent().css("overflow", "hidden")
				}
				c = this.element.parent().height();
				a.browser.msie && this.element.parent().css("overflow", f);
				this.headers.each(function() {
					c -= a(this).outerHeight(true)
				});
				this.headers.next().each(function() {
					a(this).height(Math.max(0, c - a(this).innerHeight() + a(this).height()))
				}).css("overflow", "auto")
			} else {
				if (e.autoHeight) {
					c = 0;
					this.headers.next().each(function() {
						c = Math.max(c, a(this).height("").height())
					}).height(c)
				}
			}
			return this
		},
		activate: function(b) {
			this.options.active = b;
			b = this._findActive(b)[0];
			this._clickHandler({
				target: b
			},
			b);
			return this
		},
		_findActive: function(b) {
			return b ? typeof b === "number" ? this.headers.filter(":eq(" + b + ")") : this.headers.not(this.headers.not(b)) : b === false ? a([]) : this.headers.filter(":eq(0)")
		},
		_clickHandler: function(i, c) {
			var p = this.options;
			if (!p.disabled) {
				if (i.target) {
					i = a(i.currentTarget || c);
					c = i[0] === this.active[0];
					p.active = p.collapsible && c ? false: this.headers.index(i);
					if (! (this.running || !p.collapsible && c)) {
						var l = this.active;
						k = i.next();
						m = this.active.next();
						o = {
							options: p,
							newHeader: c && p.collapsible ? a([]) : i,
							oldHeader: this.active,
							newContent: c && p.collapsible ? a([]) : k,
							oldContent: m
						};
						var n = this.headers.index(this.active[0]) > this.headers.index(i[0]);
						this.active = c ? a([]) : i;
						this._toggle(k, m, o, c, n);
						l.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(p.icons.headerSelected).addClass(p.icons.header);
						if (!c) {
							i.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").children(".ui-icon").removeClass(p.icons.header).addClass(p.icons.headerSelected);
							i.next().addClass("ui-accordion-content-active")
						}
					}
				} else {
					if (p.collapsible) {
						this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(p.icons.headerSelected).addClass(p.icons.header);
						this.active.next().addClass("ui-accordion-content-active");
						var m = this.active.next(),
						o = {
							options: p,
							newHeader: a([]),
							oldHeader: p.active,
							newContent: a([]),
							oldContent: m
						},
						k = this.active = a([]);
						this._toggle(k, m, o)
					}
				}
			}
		},
		_toggle: function(u, s, r, n, p) {
			var o = this,
			q = o.options;
			o.toShow = u;
			o.toHide = s;
			o.data = r;
			var l = function() {
				if (o) {
					return o._completed.apply(o, arguments)
				}
			};
			o._trigger("changestart", null, o.data);
			o.running = s.size() === 0 ? u.size() : s.size();
			if (q.animated) {
				r = {};
				r = q.collapsible && n ? {
					toShow: a([]),
					toHide: s,
					complete: l,
					down: p,
					autoHeight: q.autoHeight || q.fillSpace
				}: {
					toShow: u,
					toHide: s,
					complete: l,
					down: p,
					autoHeight: q.autoHeight || q.fillSpace
				};
				if (!q.proxied) {
					q.proxied = q.animated
				}
				if (!q.proxiedDuration) {
					q.proxiedDuration = q.duration
				}
				q.animated = a.isFunction(q.proxied) ? q.proxied(r) : q.proxied;
				q.duration = a.isFunction(q.proxiedDuration) ? q.proxiedDuration(r) : q.proxiedDuration;
				n = a.ui.accordion.animations;
				var m = q.duration,
				c = q.animated;
				if (c && !n[c] && !a.easing[c]) {
					c = "slide"
				}
				n[c] || (n[c] = function(b) {
					this.slide(b, {
						easing: c,
						duration: m || 700
					})
				});
				n[c](r)
			} else {
				if (q.collapsible && n) {
					u.toggle()
				} else {
					s.hide();
					u.show()
				}
				l(true)
			}
			s.prev().attr({
				"aria-expanded": "false",
				"aria-selected": "false",
				tabIndex: -1
			}).blur();
			u.prev().attr({
				"aria-expanded": "true",
				"aria-selected": "true",
				tabIndex: 0
			}).focus()
		},
		_completed: function(b) {
			this.running = b ? 0 : --this.running;
			if (!this.running) {
				this.options.clearStyle && this.toShow.add(this.toHide).css({
					height: "",
					overflow: ""
				});
				this.toHide.removeClass("ui-accordion-content-active");
				if (this.toHide.length) {
					this.toHide.parent()[0].className = this.toHide.parent()[0].className
				}
				this._trigger("change", null, this.data)
			}
		}
	});
	a.extend(a.ui.accordion, {
		version: "1.8.15",
		animations: {
			slide: function(i, c) {
				i = a.extend({
					easing: "swing",
					duration: 300
				},
				i, c);
				if (i.toHide.size()) {
					if (i.toShow.size()) {
						var n = i.toShow.css("overflow"),
						j = 0,
						l = {},
						k = {},
						m;
						c = i.toShow;
						m = c[0].style.width;
						c.width(parseInt(c.parent().width(), 10) - parseInt(c.css("paddingLeft"), 10) - parseInt(c.css("paddingRight"), 10) - (parseInt(c.css("borderLeftWidth"), 10) || 0) - (parseInt(c.css("borderRightWidth"), 10) || 0));
						a.each(["height", "paddingTop", "paddingBottom"],
						function(b, d) {
							k[d] = "hide";
							b = ("" + a.css(i.toShow[0], d)).match(/^([\d+-.]+)(.*)$/);
							l[d] = {
								value: b[1],
								unit: b[2] || "px"
							}
						});
						i.toShow.css({
							height: 0,
							overflow: "hidden"
						}).show();
						i.toHide.filter(":hidden").each(i.complete).end().filter(":visible").animate(k, {
							step: function(b, d) {
								if (d.prop == "height") {
									j = d.end - d.start === 0 ? 0 : (d.now - d.start) / (d.end - d.start)
								}
								i.toShow[0].style[d.prop] = j * l[d.prop].value + l[d.prop].unit
							},
							duration: i.duration,
							easing: i.easing,
							complete: function() {
								i.autoHeight || i.toShow.css("height", "");
								i.toShow.css({
									width: m,
									overflow: n
								});
								i.complete()
							}
						})
					} else {
						i.toHide.animate({
							height: "hide",
							paddingTop: "hide",
							paddingBottom: "hide"
						},
						i)
					}
				} else {
					i.toShow.animate({
						height: "show",
						paddingTop: "show",
						paddingBottom: "show"
					},
					i)
				}
			},
			bounceslide: function(b) {
				this.slide(b, {
					easing: b.down ? "easeOutBounce": "swing",
					duration: b.down ? 1000 : 200
				})
			}
		}
	})
})(jQuery); (function(b) {
	var a = 0;
	b.widget("ui.autocomplete", {
		options: {
			appendTo: "body",
			autoFocus: false,
			delay: 300,
			minLength: 1,
			position: {
				my: "left top",
				at: "left bottom",
				collision: "none"
			},
			source: null
		},
		pending: 0,
		_create: function() {
			var d = this,
			c = this.element[0].ownerDocument,
			e;
			this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off").attr({
				role: "textbox",
				"aria-autocomplete": "list",
				"aria-haspopup": "true"
			}).bind("keydown.autocomplete",
			function(h) {
				if (! (d.options.disabled || d.element.propAttr("readOnly"))) {
					e = false;
					var g = b.ui.keyCode;
					switch (h.keyCode) {
					case g.PAGE_UP:
						d._move("previousPage", h);
						break;
					case g.PAGE_DOWN:
						d._move("nextPage", h);
						break;
					case g.UP:
						d._move("previous", h);
						h.preventDefault();
						break;
					case g.DOWN:
						d._move("next", h);
						h.preventDefault();
						break;
					case g.ENTER:
					case g.NUMPAD_ENTER:
						if (d.menu.active) {
							e = true;
							h.preventDefault()
						}
					case g.TAB:
						if (!d.menu.active) {
							return
						}
						d.menu.select(h);
						break;
					case g.ESCAPE:
						d.element.val(d.term);
						d.close(h);
						break;
					default:
						clearTimeout(d.searching);
						d.searching = setTimeout(function() {
							if (d.term != d.element.val()) {
								d.selectedItem = null;
								d.search(null, h)
							}
						},
						d.options.delay);
						break
					}
				}
			}).bind("keypress.autocomplete",
			function(f) {
				if (e) {
					e = false;
					f.preventDefault()
				}
			}).bind("focus.autocomplete",
			function() {
				if (!d.options.disabled) {
					d.selectedItem = null;
					d.previous = d.element.val()
				}
			}).bind("blur.autocomplete",
			function(f) {
				if (!d.options.disabled) {
					clearTimeout(d.searching);
					d.closing = setTimeout(function() {
						d.close(f);
						d._change(f)
					},
					150)
				}
			});
			this._initSource();
			this.response = function() {
				return d._response.apply(d, arguments)
			};
			this.menu = b("<ul></ul>").addClass("ui-autocomplete").appendTo(b(this.options.appendTo || "body", c)[0]).mousedown(function(h) {
				var g = d.menu.element[0];
				b(h.target).closest(".ui-menu-item").length || setTimeout(function() {
					b(document).one("mousedown",
					function(f) {
						f.target !== d.element[0] && f.target !== g && !b.ui.contains(g, f.target) && d.close()
					})
				},
				1);
				setTimeout(function() {
					clearTimeout(d.closing)
				},
				13)
			}).menu({
				focus: function(h, g) {
					g = g.item.data("item.autocomplete");
					false !== d._trigger("focus", h, {
						item: g
					}) && /^key/.test(h.originalEvent.type) && d.element.val(g.value)
				},
				selected: function(l, k) {
					var j = k.item.data("item.autocomplete"),
					g = d.previous;
					if (d.element[0] !== c.activeElement) {
						d.element.focus();
						d.previous = g;
						setTimeout(function() {
							d.previous = g;
							d.selectedItem = j
						},
						1)
					}
					false !== d._trigger("select", l, {
						item: j
					}) && d.element.val(j.value);
					d.term = d.element.val();
					d.close(l);
					d.selectedItem = j
				},
				blur: function() {
					d.menu.element.is(":visible") && d.element.val() !== d.term && d.element.val(d.term)
				}
			}).zIndex(this.element.zIndex() + 1).css({
				top: 0,
				left: 0
			}).hide().data("menu");
			b.fn.bgiframe && this.menu.element.bgiframe()
		},
		destroy: function() {
			this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup");
			this.menu.element.remove();
			b.Widget.prototype.destroy.call(this)
		},
		_setOption: function(d, c) {
			b.Widget.prototype._setOption.apply(this, arguments);
			d === "source" && this._initSource();
			if (d === "appendTo") {
				this.menu.element.appendTo(b(c || "body", this.element[0].ownerDocument)[0])
			}
			d === "disabled" && c && this.xhr && this.xhr.abort()
		},
		_initSource: function() {
			var d = this,
			c, e;
			if (b.isArray(this.options.source)) {
				c = this.options.source;
				this.source = function(h, g) {
					g(b.ui.autocomplete.filter(c, h.term))
				}
			} else {
				if (typeof this.options.source === "string") {
					e = this.options.source;
					this.source = function(h, g) {
						d.xhr && d.xhr.abort();
						d.xhr = b.ajax({
							url: e,
							data: h,
							dataType: "json",
							autocompleteRequest: ++a,
							success: function(f) {
								this.autocompleteRequest === a && g(f)
							},
							error: function() {
								this.autocompleteRequest === a && g([])
							}
						})
					}
				} else {
					this.source = this.options.source
				}
			}
		},
		search: function(d, c) {
			d = d != null ? d: this.element.val();
			this.term = this.element.val();
			if (d.length < this.options.minLength) {
				return this.close(c)
			}
			clearTimeout(this.closing);
			if (this._trigger("search", c) !== false) {
				return this._search(d)
			}
		},
		_search: function(c) {
			this.pending++;
			this.element.addClass("ui-autocomplete-loading");
			this.source({
				term: c
			},
			this.response)
		},
		_response: function(c) {
			if (!this.options.disabled && c && c.length) {
				c = this._normalize(c);
				this._suggest(c);
				this._trigger("open")
			} else {
				this.close()
			}
			this.pending--;
			this.pending || this.element.removeClass("ui-autocomplete-loading")
		},
		close: function(c) {
			clearTimeout(this.closing);
			if (this.menu.element.is(":visible")) {
				this.menu.element.hide();
				this.menu.deactivate();
				this._trigger("close", c)
			}
		},
		_change: function(c) {
			this.previous !== this.element.val() && this._trigger("change", c, {
				item: this.selectedItem
			})
		},
		_normalize: function(c) {
			if (c.length && c[0].label && c[0].value) {
				return c
			}
			return b.map(c,
			function(d) {
				if (typeof d === "string") {
					return {
						label: d,
						value: d
					}
				}
				return b.extend({
					label: d.label || d.value,
					value: d.value || d.label
				},
				d)
			})
		},
		_suggest: function(d) {
			var c = this.menu.element.empty().zIndex(this.element.zIndex() + 1);
			this._renderMenu(c, d);
			this.menu.deactivate();
			this.menu.refresh();
			c.show();
			this._resizeMenu();
			c.position(b.extend({
				of: this.element
			},
			this.options.position));
			this.options.autoFocus && this.menu.next(new b.Event("mouseover"))
		},
		_resizeMenu: function() {
			var c = this.menu.element;
			c.outerWidth(Math.max(c.width("").outerWidth(), this.element.outerWidth()))
		},
		_renderMenu: function(d, c) {
			var e = this;
			b.each(c,
			function(h, g) {
				e._renderItem(d, g)
			})
		},
		_renderItem: function(d, c) {
			return b("<li></li>").data("item.autocomplete", c).append(b("<a></a>").text(c.label)).appendTo(d)
		},
		_move: function(d, c) {
			if (this.menu.element.is(":visible")) {
				if (this.menu.first() && /^previous/.test(d) || this.menu.last() && /^next/.test(d)) {
					this.element.val(this.term);
					this.menu.deactivate()
				} else {
					this.menu[d](c)
				}
			} else {
				this.search(null, c)
			}
		},
		widget: function() {
			return this.menu.element
		}
	});
	b.extend(b.ui.autocomplete, {
		escapeRegex: function(c) {
			return c.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")
		},
		filter: function(d, c) {
			var e = new RegExp(b.ui.autocomplete.escapeRegex(c), "i");
			return b.grep(d,
			function(f) {
				return e.test(f.label || f.value || f)
			})
		}
	})
})(jQuery); (function(a) {
	a.widget("ui.menu", {
		_create: function() {
			var b = this;
			this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({
				role: "listbox",
				"aria-activedescendant": "ui-active-menuitem"
			}).click(function(c) {
				if (a(c.target).closest(".ui-menu-item a").length) {
					c.preventDefault();
					b.select(c)
				}
			});
			this.refresh()
		},
		refresh: function() {
			var b = this;
			this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "menuitem").children("a").addClass("ui-corner-all").attr("tabindex", -1).mouseenter(function(c) {
				b.activate(c, a(this).parent())
			}).mouseleave(function() {
				b.deactivate()
			})
		},
		activate: function(i, f) {
			this.deactivate();
			if (this.hasScroll()) {
				var d = f.offset().top - this.element.offset().top,
				h = this.element.scrollTop(),
				j = this.element.height();
				if (d < 0) {
					this.element.scrollTop(h + d)
				} else {
					d >= j && this.element.scrollTop(h + d - j + f.height())
				}
			}
			this.active = f.eq(0).children("a").addClass("ui-state-hover").attr("id", "ui-active-menuitem").end();
			this._trigger("focus", i, {
				item: f
			})
		},
		deactivate: function() {
			if (this.active) {
				this.active.children("a").removeClass("ui-state-hover").removeAttr("id");
				this._trigger("blur");
				this.active = null
			}
		},
		next: function(b) {
			this.move("next", ".ui-menu-item:first", b)
		},
		previous: function(b) {
			this.move("prev", ".ui-menu-item:last", b)
		},
		first: function() {
			return this.active && !this.active.prevAll(".ui-menu-item").length
		},
		last: function() {
			return this.active && !this.active.nextAll(".ui-menu-item").length
		},
		move: function(f, d, c) {
			if (this.active) {
				f = this.active[f + "All"](".ui-menu-item").eq(0);
				f.length ? this.activate(c, f) : this.activate(c, this.element.children(d))
			} else {
				this.activate(c, this.element.children(d))
			}
		},
		nextPage: function(h) {
			if (this.hasScroll()) {
				if (!this.active || this.last()) {
					this.activate(h, this.element.children(".ui-menu-item:first"))
				} else {
					var d = this.active.offset().top,
					c = this.element.height(),
					f = this.element.children(".ui-menu-item").filter(function() {
						var b = a(this).offset().top - d - c + a(this).height();
						return b < 10 && b > -10
					});
					f.length || (f = this.element.children(".ui-menu-item:last"));
					this.activate(h, f)
				}
			} else {
				this.activate(h, this.element.children(".ui-menu-item").filter(!this.active || this.last() ? ":first": ":last"))
			}
		},
		previousPage: function(f) {
			if (this.hasScroll()) {
				if (!this.active || this.first()) {
					this.activate(f, this.element.children(".ui-menu-item:last"))
				} else {
					var d = this.active.offset().top,
					c = this.element.height();
					result = this.element.children(".ui-menu-item").filter(function() {
						var b = a(this).offset().top - d + c - a(this).height();
						return b < 10 && b > -10
					});
					result.length || (result = this.element.children(".ui-menu-item:first"));
					this.activate(f, result)
				}
			} else {
				this.activate(f, this.element.children(".ui-menu-item").filter(!this.active || this.first() ? ":last": ":first"))
			}
		},
		hasScroll: function() {
			return this.element.height() < this.element[a.fn.prop ? "prop": "attr"]("scrollHeight")
		},
		select: function(b) {
			this._trigger("selected", b, {
				item: this.active
			})
		}
	})
})(jQuery); (function(a) {
	var m, f, e, n, c = function() {
		var b = a(this).find(":ui-button");
		setTimeout(function() {
			b.button("refresh")
		},
		1)
	},
	d = function(b) {
		var i = b.name,
		h = b.form,
		g = a([]);
		if (i) {
			g = h ? a(h).find("[name='" + i + "']") : a("[name='" + i + "']", b.ownerDocument).filter(function() {
				return ! this.form
			})
		}
		return g
	};
	a.widget("ui.button", {
		options: {
			disabled: null,
			text: true,
			label: null,
			icons: {
				primary: null,
				secondary: null
			}
		},
		_create: function() {
			this.element.closest("form").unbind("reset.button").bind("reset.button", c);
			if (typeof this.options.disabled !== "boolean") {
				this.options.disabled = this.element.propAttr("disabled")
			}
			this._determineButtonType();
			this.hasTitle = !!this.buttonElement.attr("title");
			var b = this,
			i = this.options,
			h = this.type === "checkbox" || this.type === "radio",
			g = "ui-state-hover" + (!h ? " ui-state-active": "");
			if (i.label === null) {
				i.label = this.buttonElement.html()
			}
			if (this.element.is(":disabled")) {
				i.disabled = true
			}
			this.buttonElement.addClass("ui-button ui-widget ui-state-default ui-corner-all").attr("role", "button").bind("mouseenter.button",
			function() {
				if (!i.disabled) {
					a(this).addClass("ui-state-hover");
					this === m && a(this).addClass("ui-state-active")
				}
			}).bind("mouseleave.button",
			function() {
				i.disabled || a(this).removeClass(g)
			}).bind("click.button",
			function(j) {
				if (i.disabled) {
					j.preventDefault();
					j.stopImmediatePropagation()
				}
			});
			this.element.bind("focus.button",
			function() {
				b.buttonElement.addClass("ui-state-focus")
			}).bind("blur.button",
			function() {
				b.buttonElement.removeClass("ui-state-focus")
			});
			if (h) {
				this.element.bind("change.button",
				function() {
					n || b.refresh()
				});
				this.buttonElement.bind("mousedown.button",
				function(j) {
					if (!i.disabled) {
						n = false;
						f = j.pageX;
						e = j.pageY
					}
				}).bind("mouseup.button",
				function(j) {
					if (!i.disabled) {
						if (f !== j.pageX || e !== j.pageY) {
							n = true
						}
					}
				})
			}
			if (this.type === "checkbox") {
				this.buttonElement.bind("click.button",
				function() {
					if (i.disabled || n) {
						return false
					}
					a(this).toggleClass("ui-state-active");
					b.buttonElement.attr("aria-pressed", b.element[0].checked)
				})
			} else {
				if (this.type === "radio") {
					this.buttonElement.bind("click.button",
					function() {
						if (i.disabled || n) {
							return false
						}
						a(this).addClass("ui-state-active");
						b.buttonElement.attr("aria-pressed", "true");
						var j = b.element[0];
						d(j).not(j).map(function() {
							return a(this).button("widget")[0]
						}).removeClass("ui-state-active").attr("aria-pressed", "false")
					})
				} else {
					this.buttonElement.bind("mousedown.button",
					function() {
						if (i.disabled) {
							return false
						}
						a(this).addClass("ui-state-active");
						m = this;
						a(document).one("mouseup",
						function() {
							m = null
						})
					}).bind("mouseup.button",
					function() {
						if (i.disabled) {
							return false
						}
						a(this).removeClass("ui-state-active")
					}).bind("keydown.button",
					function(j) {
						if (i.disabled) {
							return false
						}
						if (j.keyCode == a.ui.keyCode.SPACE || j.keyCode == a.ui.keyCode.ENTER) {
							a(this).addClass("ui-state-active")
						}
					}).bind("keyup.button",
					function() {
						a(this).removeClass("ui-state-active")
					});
					this.buttonElement.is("a") && this.buttonElement.keyup(function(j) {
						j.keyCode === a.ui.keyCode.SPACE && a(this).click()
					})
				}
			}
			this._setOption("disabled", i.disabled);
			this._resetButton()
		},
		_determineButtonType: function() {
			this.type = this.element.is(":checkbox") ? "checkbox": this.element.is(":radio") ? "radio": this.element.is("input") ? "input": "button";
			if (this.type === "checkbox" || this.type === "radio") {
				var b = this.element.parents().filter(":last"),
				g = "label[for=" + this.element.attr("id") + "]";
				this.buttonElement = b.find(g);
				if (!this.buttonElement.length) {
					b = b.length ? b.siblings() : this.element.siblings();
					this.buttonElement = b.filter(g);
					if (!this.buttonElement.length) {
						this.buttonElement = b.find(g)
					}
				}
				this.element.addClass("ui-helper-hidden-accessible"); (b = this.element.is(":checked")) && this.buttonElement.addClass("ui-state-active");
				this.buttonElement.attr("aria-pressed", b)
			} else {
				this.buttonElement = this.element
			}
		},
		widget: function() {
			return this.buttonElement
		},
		destroy: function() {
			this.element.removeClass("ui-helper-hidden-accessible");
			this.buttonElement.removeClass("ui-button ui-widget ui-state-default ui-corner-all ui-state-hover ui-state-active  ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only").removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());
			this.hasTitle || this.buttonElement.removeAttr("title");
			a.Widget.prototype.destroy.call(this)
		},
		_setOption: function(b, g) {
			a.Widget.prototype._setOption.apply(this, arguments);
			if (b === "disabled") {
				g ? this.element.propAttr("disabled", true) : this.element.propAttr("disabled", false)
			} else {
				this._resetButton()
			}
		},
		refresh: function() {
			var b = this.element.is(":disabled");
			b !== this.options.disabled && this._setOption("disabled", b);
			if (this.type === "radio") {
				d(this.element[0]).each(function() {
					a(this).is(":checked") ? a(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
				})
			} else {
				if (this.type === "checkbox") {
					this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false")
				}
			}
		},
		_resetButton: function() {
			if (this.type === "input") {
				this.options.label && this.element.val(this.options.label)
			} else {
				var b = this.buttonElement.removeClass("ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only"),
				j = a("<span></span>").addClass("ui-button-text").html(this.options.label).appendTo(b.empty()).text(),
				h = this.options.icons,
				g = h.primary && h.secondary,
				i = [];
				if (h.primary || h.secondary) {
					if (this.options.text) {
						i.push("ui-button-text-icon" + (g ? "s": h.primary ? "-primary": "-secondary"))
					}
					h.primary && b.prepend("<span class='ui-button-icon-primary ui-icon " + h.primary + "'></span>");
					h.secondary && b.append("<span class='ui-button-icon-secondary ui-icon " + h.secondary + "'></span>");
					if (!this.options.text) {
						i.push(g ? "ui-button-icons-only": "ui-button-icon-only");
						this.hasTitle || b.attr("title", j)
					}
				} else {
					i.push("ui-button-text-only")
				}
				b.addClass(i.join(" "))
			}
		}
	});
	a.widget("ui.buttonset", {
		options: {
			items: ":button, :submit, :reset, :checkbox, :radio, a, :data(button)"
		},
		_create: function() {
			this.element.addClass("ui-buttonset")
		},
		_init: function() {
			this.refresh()
		},
		_setOption: function(b, g) {
			b === "disabled" && this.buttons.button("option", b, g);
			a.Widget.prototype._setOption.apply(this, arguments)
		},
		refresh: function() {
			var b = this.element.css("direction") === "ltr";
			this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function() {
				return a(this).button("widget")[0]
			}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(b ? "ui-corner-left": "ui-corner-right").end().filter(":last").addClass(b ? "ui-corner-right": "ui-corner-left").end().end()
		},
		destroy: function() {
			this.element.removeClass("ui-buttonset");
			this.buttons.map(function() {
				return a(this).button("widget")[0]
			}).removeClass("ui-corner-left ui-corner-right").end().button("destroy");
			a.Widget.prototype.destroy.call(this)
		}
	})
})(jQuery); (function(f, b) {
	var a = {
		buttons: true,
		height: true,
		maxHeight: true,
		maxWidth: true,
		minHeight: true,
		minWidth: true,
		width: true
	},
	e = {
		maxHeight: true,
		maxWidth: true,
		minHeight: true,
		minWidth: true
	},
	d = f.attrFn || {
		val: true,
		css: true,
		html: true,
		text: true,
		data: true,
		width: true,
		height: true,
		offset: true,
		click: true
	};
	f.widget("ui.dialog", {
		options: {
			autoOpen: true,
			buttons: {},
			closeOnEscape: true,
			closeText: "close",
			dialogClass: "",
			draggable: true,
			hide: null,
			height: "auto",
			maxHeight: false,
			maxWidth: false,
			minHeight: 150,
			minWidth: 150,
			modal: false,
			position: {
				my: "center",
				at: "center",
				collision: "fit",
				using: function(g) {
					var c = f(this).css(g).offset().top;
					c < 0 && f(this).css("top", g.top - c)
				}
			},
			resizable: true,
			show: null,
			stack: true,
			title: "",
			width: 300,
			zIndex: 1000
		},
		_create: function() {
			this.originalTitle = this.element.attr("title");
			if (typeof this.originalTitle !== "string") {
				this.originalTitle = ""
			}
			this.options.title = this.options.title || this.originalTitle;
			var i = this,
			c = i.options,
			n = c.title || "&#160;",
			m = f.ui.dialog.getTitleId(i.element),
			k = (i.uiDialog = f("<div></div>")).appendTo(document.body).hide().addClass("ui-dialog ui-widget ui-widget-content ui-corner-all " + c.dialogClass).css({
				zIndex: c.zIndex
			}).attr("tabIndex", -1).css("outline", 0).keydown(function(g) {
				if (c.closeOnEscape && g.keyCode && g.keyCode === f.ui.keyCode.ESCAPE) {
					i.close(g);
					g.preventDefault()
				}
			}).attr({
				role: "dialog",
				"aria-labelledby": m
			}).mousedown(function(g) {
				i.moveToTop(false, g)
			});
			i.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(k);
			var l = (i.uiDialogTitlebar = f("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(k),
			j = f('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role", "button").hover(function() {
				j.addClass("ui-state-hover")
			},
			function() {
				j.removeClass("ui-state-hover")
			}).focus(function() {
				j.addClass("ui-state-focus")
			}).blur(function() {
				j.removeClass("ui-state-focus")
			}).click(function(g) {
				i.close(g);
				return false
			}).appendTo(l); (i.uiDialogTitlebarCloseText = f("<span></span>")).addClass("ui-icon ui-icon-closethick").text(c.closeText).appendTo(j);
			f("<span></span>").addClass("ui-dialog-title").attr("id", m).html(n).prependTo(l);
			if (f.isFunction(c.beforeclose) && !f.isFunction(c.beforeClose)) {
				c.beforeClose = c.beforeclose
			}
			l.find("*").add(l).disableSelection();
			c.draggable && f.fn.draggable && i._makeDraggable();
			c.resizable && f.fn.resizable && i._makeResizable();
			i._createButtons(c.buttons);
			i._isOpen = false;
			f.fn.bgiframe && k.bgiframe()
		},
		_init: function() {
			this.options.autoOpen && this.open()
		},
		destroy: function() {
			var c = this;
			c.overlay && c.overlay.destroy();
			c.uiDialog.hide();
			c.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");
			c.uiDialog.remove();
			c.originalTitle && c.element.attr("title", c.originalTitle);
			return c
		},
		widget: function() {
			return this.uiDialog
		},
		close: function(g) {
			var c = this,
			i, h;
			if (false !== c._trigger("beforeClose", g)) {
				c.overlay && c.overlay.destroy();
				c.uiDialog.unbind("keypress.ui-dialog");
				c._isOpen = false;
				if (c.options.hide) {
					c.uiDialog.hide(c.options.hide,
					function() {
						c._trigger("close", g)
					})
				} else {
					c.uiDialog.hide();
					c._trigger("close", g)
				}
				f.ui.dialog.overlay.resize();
				if (c.options.modal) {
					i = 0;
					f(".ui-dialog").each(function() {
						if (this !== c.uiDialog[0]) {
							h = f(this).css("z-index");
							isNaN(h) || (i = Math.max(i, h))
						}
					});
					f.ui.dialog.maxZ = i
				}
				return c
			}
		},
		isOpen: function() {
			return this._isOpen
		},
		moveToTop: function(g, c) {
			var i = this,
			h = i.options;
			if (h.modal && !g || !h.stack && !h.modal) {
				return i._trigger("focus", c)
			}
			if (h.zIndex > f.ui.dialog.maxZ) {
				f.ui.dialog.maxZ = h.zIndex
			}
			if (i.overlay) {
				f.ui.dialog.maxZ += 1;
				i.overlay.$el.css("z-index", f.ui.dialog.overlay.maxZ = f.ui.dialog.maxZ)
			}
			g = {
				scrollTop: i.element.scrollTop(),
				scrollLeft: i.element.scrollLeft()
			};
			f.ui.dialog.maxZ += 1;
			i.uiDialog.css("z-index", f.ui.dialog.maxZ);
			i.element.attr(g);
			i._trigger("focus", c);
			return i
		},
		open: function() {
			if (!this._isOpen) {
				var g = this,
				c = g.options,
				h = g.uiDialog;
				g.overlay = c.modal ? new f.ui.dialog.overlay(g) : null;
				g._size();
				g._position(c.position);
				h.show(c.show);
				g.moveToTop(true);
				c.modal && h.bind("keypress.ui-dialog",
				function(k) {
					if (k.keyCode === f.ui.keyCode.TAB) {
						var i = f(":tabbable", this),
						j = i.filter(":first");
						i = i.filter(":last");
						if (k.target === i[0] && !k.shiftKey) {
							j.focus(1);
							return false
						} else {
							if (k.target === j[0] && k.shiftKey) {
								i.focus(1);
								return false
							}
						}
					}
				});
				f(g.element.find(":tabbable").get().concat(h.find(".ui-dialog-buttonpane :tabbable").get().concat(h.get()))).eq(0).focus();
				g._isOpen = true;
				g._trigger("open");
				return g
			}
		},
		_createButtons: function(h) {
			var c = this,
			k = false,
			j = f("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),
			i = f("<div></div>").addClass("ui-dialog-buttonset").appendTo(j);
			c.uiDialog.find(".ui-dialog-buttonpane").remove();
			typeof h === "object" && h !== null && f.each(h,
			function() {
				return ! (k = true)
			});
			if (k) {
				f.each(h,
				function(m, l) {
					l = f.isFunction(l) ? {
						click: l,
						text: m
					}: l;
					var g = f('<button type="button"></button>').click(function() {
						l.click.apply(c.element[0], arguments)
					}).appendTo(i);
					f.each(l,
					function(o, n) {
						if (o !== "click") {
							o in d ? g[o](n) : g.attr(o, n)
						}
					});
					f.fn.button && g.button()
				});
				j.appendTo(c.uiDialog)
			}
		},
		_makeDraggable: function() {
			function h(g) {
				return {
					position: g.position,
					offset: g.offset
				}
			}
			var c = this,
			k = c.options,
			j = f(document),
			i;
			c.uiDialog.draggable({
				cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
				handle: ".ui-dialog-titlebar",
				containment: "document",
				start: function(l, g) {
					i = k.height === "auto" ? "auto": f(this).height();
					f(this).height(f(this).height()).addClass("ui-dialog-dragging");
					c._trigger("dragStart", l, h(g))
				},
				drag: function(l, g) {
					c._trigger("drag", l, h(g))
				},
				stop: function(l, g) {
					k.position = [g.position.left - j.scrollLeft(), g.position.top - j.scrollTop()];
					f(this).removeClass("ui-dialog-dragging").height(i);
					c._trigger("dragStop", l, h(g));
					f.ui.dialog.overlay.resize()
				}
			})
		},
		_makeResizable: function(h) {
			function c(g) {
				return {
					originalPosition: g.originalPosition,
					originalSize: g.originalSize,
					position: g.position,
					size: g.size
				}
			}
			h = h === b ? this.options.resizable: h;
			var k = this,
			j = k.options,
			i = k.uiDialog.css("position");
			h = typeof h === "string" ? h: "n,e,s,w,se,sw,ne,nw";
			k.uiDialog.resizable({
				cancel: ".ui-dialog-content",
				containment: "document",
				alsoResize: k.element,
				maxWidth: j.maxWidth,
				maxHeight: j.maxHeight,
				minWidth: j.minWidth,
				minHeight: k._minHeight(),
				handles: h,
				start: function(l, g) {
					f(this).addClass("ui-dialog-resizing");
					k._trigger("resizeStart", l, c(g))
				},
				resize: function(l, g) {
					k._trigger("resize", l, c(g))
				},
				stop: function(l, g) {
					f(this).removeClass("ui-dialog-resizing");
					j.height = f(this).height();
					j.width = f(this).width();
					k._trigger("resizeStop", l, c(g));
					f.ui.dialog.overlay.resize()
				}
			}).css("position", i).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")
		},
		_minHeight: function() {
			var c = this.options;
			return c.height === "auto" ? c.minHeight: Math.min(c.minHeight, c.height)
		},
		_position: function(g) {
			var c = [],
			i = [0, 0],
			h;
			if (g) {
				if (typeof g === "string" || typeof g === "object" && "0" in g) {
					c = g.split ? g.split(" ") : [g[0], g[1]];
					if (c.length === 1) {
						c[1] = c[0]
					}
					f.each(["left", "top"],
					function(j, k) {
						if ( + c[j] === c[j]) {
							i[j] = c[j];
							c[j] = k
						}
					});
					g = {
						my: c.join(" "),
						at: c.join(" "),
						offset: i.join(" ")
					}
				}
				g = f.extend({},
				f.ui.dialog.prototype.options.position, g)
			} else {
				g = f.ui.dialog.prototype.options.position
			} (h = this.uiDialog.is(":visible")) || this.uiDialog.show();
			this.uiDialog.css({
				top: 0,
				left: 0
			}).position(f.extend({
				of: window
			},
			g));
			h || this.uiDialog.hide()
		},
		_setOptions: function(g) {
			var c = this,
			i = {},
			h = false;
			f.each(g,
			function(j, k) {
				c._setOption(j, k);
				if (j in a) {
					h = true
				}
				if (j in e) {
					i[j] = k
				}
			});
			h && this._size();
			this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", i)
		},
		_setOption: function(h, c) {
			var k = this,
			j = k.uiDialog;
			switch (h) {
			case "beforeclose":
				h = "beforeClose";
				break;
			case "buttons":
				k._createButtons(c);
				break;
			case "closeText":
				k.uiDialogTitlebarCloseText.text("" + c);
				break;
			case "dialogClass":
				j.removeClass(k.options.dialogClass).addClass("ui-dialog ui-widget ui-widget-content ui-corner-all " + c);
				break;
			case "disabled":
				c ? j.addClass("ui-dialog-disabled") : j.removeClass("ui-dialog-disabled");
				break;
			case "draggable":
				var i = j.is(":data(draggable)");
				i && !c && j.draggable("destroy"); ! i && c && k._makeDraggable();
				break;
			case "position":
				k._position(c);
				break;
			case "resizable":
				(i = j.is(":data(resizable)")) && !c && j.resizable("destroy");
				i && typeof c === "string" && j.resizable("option", "handles", c); ! i && c !== false && k._makeResizable(c);
				break;
			case "title":
				f(".ui-dialog-title", k.uiDialogTitlebar).html("" + (c || "&#160;"));
				break
			}
			f.Widget.prototype._setOption.apply(k, arguments)
		},
		_size: function() {
			var g = this.options,
			c, i, h = this.uiDialog.is(":visible");
			this.element.show().css({
				width: "auto",
				minHeight: 0,
				height: 0
			});
			if (g.minWidth > g.width) {
				g.width = g.minWidth
			}
			c = this.uiDialog.css({
				height: "auto",
				width: g.width
			}).height();
			i = Math.max(0, g.minHeight - c);
			if (g.height === "auto") {
				if (f.support.minHeight) {
					this.element.css({
						minHeight: i,
						height: "auto"
					})
				} else {
					this.uiDialog.show();
					g = this.element.css("height", "auto").height();
					h || this.uiDialog.hide();
					this.element.height(Math.max(g, i))
				}
			} else {
				this.element.height(Math.max(g.height - c, 0))
			}
			this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
		}
	});
	f.extend(f.ui.dialog, {
		version: "1.8.15",
		uuid: 0,
		maxZ: 0,
		getTitleId: function(c) {
			c = c.attr("id");
			if (!c) {
				this.uuid += 1;
				c = this.uuid
			}
			return "ui-dialog-title-" + c
		},
		overlay: function(c) {
			this.$el = f.ui.dialog.overlay.create(c)
		}
	});
	f.extend(f.ui.dialog.overlay, {
		instances: [],
		oldInstances: [],
		maxZ: 0,
		events: f.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),
		function(c) {
			return c + ".dialog-overlay"
		}).join(" "),
		create: function(g) {
			if (this.instances.length === 0) {
				setTimeout(function() {
					f.ui.dialog.overlay.instances.length && f(document).bind(f.ui.dialog.overlay.events,
					function(h) {
						if (f(h.target).zIndex() < f.ui.dialog.overlay.maxZ) {
							return false
						}
					})
				},
				1);
				f(document).bind("keydown.dialog-overlay",
				function(h) {
					if (g.options.closeOnEscape && h.keyCode && h.keyCode === f.ui.keyCode.ESCAPE) {
						g.close(h);
						h.preventDefault()
					}
				});
				f(window).bind("resize.dialog-overlay", f.ui.dialog.overlay.resize)
			}
			var c = (this.oldInstances.pop() || f("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({
				width: this.width(),
				height: this.height()
			});
			f.fn.bgiframe && c.bgiframe();
			this.instances.push(c);
			return c
		},
		destroy: function(g) {
			var c = f.inArray(g, this.instances);
			c != -1 && this.oldInstances.push(this.instances.splice(c, 1)[0]);
			this.instances.length === 0 && f([document, window]).unbind(".dialog-overlay");
			g.remove();
			var h = 0;
			f.each(this.instances,
			function() {
				h = Math.max(h, this.css("z-index"))
			});
			this.maxZ = h
		},
		height: function() {
			var g, c;
			if (f.browser.msie && f.browser.version < 7) {
				g = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
				c = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight);
				return g < c ? f(window).height() + "px": g + "px"
			} else {
				return f(document).height() + "px"
			}
		},
		width: function() {
			var g, c;
			if (f.browser.msie) {
				g = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);
				c = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);
				return g < c ? f(window).width() + "px": g + "px"
			} else {
				return f(document).width() + "px"
			}
		},
		resize: function() {
			var c = f([]);
			f.each(f.ui.dialog.overlay.instances,
			function() {
				c = c.add(this)
			});
			c.css({
				width: 0,
				height: 0
			}).css({
				width: f.ui.dialog.overlay.width(),
				height: f.ui.dialog.overlay.height()
			})
		}
	});
	f.extend(f.ui.dialog.overlay.prototype, {
		destroy: function() {
			f.ui.dialog.overlay.destroy(this.$el)
		}
	})
})(jQuery); (function(a) {
	a.widget("ui.slider", a.ui.mouse, {
		widgetEventPrefix: "slide",
		options: {
			animate: false,
			distance: 0,
			max: 100,
			min: 0,
			orientation: "horizontal",
			range: false,
			step: 1,
			value: 0,
			values: null
		},
		_create: function() {
			var g = this,
			d = this.options,
			l = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),
			i = d.values && d.values.length || 1,
			k = [];
			this._mouseSliding = this._keySliding = false;
			this._animateOff = true;
			this._handleIndex = null;
			this._detectOrientation();
			this._mouseInit();
			this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all" + (d.disabled ? " ui-slider-disabled ui-disabled": ""));
			this.range = a([]);
			if (d.range) {
				if (d.range === true) {
					if (!d.values) {
						d.values = [this._valueMin(), this._valueMin()]
					}
					if (d.values.length && d.values.length !== 2) {
						d.values = [d.values[0], d.values[0]]
					}
				}
				this.range = a("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header" + (d.range === "min" || d.range === "max" ? " ui-slider-range-" + d.range: ""))
			}
			for (var h = l.length; h < i; h += 1) {
				k.push("<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>")
			}
			this.handles = l.add(a(k.join("")).appendTo(g.element));
			this.handle = this.handles.eq(0);
			this.handles.add(this.range).filter("a").click(function(b) {
				b.preventDefault()
			}).hover(function() {
				d.disabled || a(this).addClass("ui-state-hover")
			},
			function() {
				a(this).removeClass("ui-state-hover")
			}).focus(function() {
				if (d.disabled) {
					a(this).blur()
				} else {
					a(".ui-slider .ui-state-focus").removeClass("ui-state-focus");
					a(this).addClass("ui-state-focus")
				}
			}).blur(function() {
				a(this).removeClass("ui-state-focus")
			});
			this.handles.each(function(b) {
				a(this).data("index.ui-slider-handle", b)
			});
			this.handles.keydown(function(n) {
				var e = true,
				c = a(this).data("index.ui-slider-handle"),
				f,
				j,
				b;
				if (!g.options.disabled) {
					switch (n.keyCode) {
					case a.ui.keyCode.HOME:
					case a.ui.keyCode.END:
					case a.ui.keyCode.PAGE_UP:
					case a.ui.keyCode.PAGE_DOWN:
					case a.ui.keyCode.UP:
					case a.ui.keyCode.RIGHT:
					case a.ui.keyCode.DOWN:
					case a.ui.keyCode.LEFT:
						e = false;
						if (!g._keySliding) {
							g._keySliding = true;
							a(this).addClass("ui-state-active");
							f = g._start(n, c);
							if (f === false) {
								return
							}
						}
						break
					}
					b = g.options.step;
					f = g.options.values && g.options.values.length ? (j = g.values(c)) : (j = g.value());
					switch (n.keyCode) {
					case a.ui.keyCode.HOME:
						j = g._valueMin();
						break;
					case a.ui.keyCode.END:
						j = g._valueMax();
						break;
					case a.ui.keyCode.PAGE_UP:
						j = g._trimAlignValue(f + (g._valueMax() - g._valueMin()) / 5);
						break;
					case a.ui.keyCode.PAGE_DOWN:
						j = g._trimAlignValue(f - (g._valueMax() - g._valueMin()) / 5);
						break;
					case a.ui.keyCode.UP:
					case a.ui.keyCode.RIGHT:
						if (f === g._valueMax()) {
							return
						}
						j = g._trimAlignValue(f + b);
						break;
					case a.ui.keyCode.DOWN:
					case a.ui.keyCode.LEFT:
						if (f === g._valueMin()) {
							return
						}
						j = g._trimAlignValue(f - b);
						break
					}
					g._slide(n, c, j);
					return e
				}
			}).keyup(function(c) {
				var b = a(this).data("index.ui-slider-handle");
				if (g._keySliding) {
					g._keySliding = false;
					g._stop(c, b);
					g._change(c, b);
					a(this).removeClass("ui-state-active")
				}
			});
			this._refreshValue();
			this._animateOff = false
		},
		destroy: function() {
			this.handles.remove();
			this.range.remove();
			this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider");
			this._mouseDestroy();
			return this
		},
		_mouseCapture: function(h) {
			var d = this.options,
			n, l, m, i, k;
			if (d.disabled) {
				return false
			}
			this.elementSize = {
				width: this.element.outerWidth(),
				height: this.element.outerHeight()
			};
			this.elementOffset = this.element.offset();
			n = this._normValueFromMouse({
				x: h.pageX,
				y: h.pageY
			});
			l = this._valueMax() - this._valueMin() + 1;
			i = this;
			this.handles.each(function(c) {
				var b = Math.abs(n - i.values(c));
				if (l > b) {
					l = b;
					m = a(this);
					k = c
				}
			});
			if (d.range === true && this.values(1) === d.min) {
				k += 1;
				m = a(this.handles[k])
			}
			if (this._start(h, k) === false) {
				return false
			}
			this._mouseSliding = true;
			i._handleIndex = k;
			m.addClass("ui-state-active").focus();
			d = m.offset();
			this._clickOffset = !a(h.target).parents().andSelf().is(".ui-slider-handle") ? {
				left: 0,
				top: 0
			}: {
				left: h.pageX - d.left - m.width() / 2,
				top: h.pageY - d.top - m.height() / 2 - (parseInt(m.css("borderTopWidth"), 10) || 0) - (parseInt(m.css("borderBottomWidth"), 10) || 0) + (parseInt(m.css("marginTop"), 10) || 0)
			};
			this.handles.hasClass("ui-state-hover") || this._slide(h, k, n);
			return this._animateOff = true
		},
		_mouseStart: function() {
			return true
		},
		_mouseDrag: function(d) {
			var c = this._normValueFromMouse({
				x: d.pageX,
				y: d.pageY
			});
			this._slide(d, this._handleIndex, c);
			return false
		},
		_mouseStop: function(b) {
			this.handles.removeClass("ui-state-active");
			this._mouseSliding = false;
			this._stop(b, this._handleIndex);
			this._change(b, this._handleIndex);
			this._clickOffset = this._handleIndex = null;
			return this._animateOff = false
		},
		_detectOrientation: function() {
			this.orientation = this.options.orientation === "vertical" ? "vertical": "horizontal"
		},
		_normValueFromMouse: function(d) {
			var c;
			if (this.orientation === "horizontal") {
				c = this.elementSize.width;
				d = d.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left: 0)
			} else {
				c = this.elementSize.height;
				d = d.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top: 0)
			}
			c = d / c;
			if (c > 1) {
				c = 1
			}
			if (c < 0) {
				c = 0
			}
			if (this.orientation === "vertical") {
				c = 1 - c
			}
			d = this._valueMax() - this._valueMin();
			return this._trimAlignValue(this._valueMin() + c * d)
		},
		_start: function(e, d) {
			var f = {
				handle: this.handles[d],
				value: this.value()
			};
			if (this.options.values && this.options.values.length) {
				f.value = this.values(d);
				f.values = this.values()
			}
			return this._trigger("start", e, f)
		},
		_slide: function(e, d, h) {
			var g;
			if (this.options.values && this.options.values.length) {
				g = this.values(d ? 0 : 1);
				if (this.options.values.length === 2 && this.options.range === true && (d === 0 && h > g || d === 1 && h < g)) {
					h = g
				}
				if (h !== this.values(d)) {
					g = this.values();
					g[d] = h;
					e = this._trigger("slide", e, {
						handle: this.handles[d],
						value: h,
						values: g
					});
					this.values(d ? 0 : 1);
					e !== false && this.values(d, h, true)
				}
			} else {
				if (h !== this.value()) {
					e = this._trigger("slide", e, {
						handle: this.handles[d],
						value: h
					});
					e !== false && this.value(h)
				}
			}
		},
		_stop: function(e, d) {
			var f = {
				handle: this.handles[d],
				value: this.value()
			};
			if (this.options.values && this.options.values.length) {
				f.value = this.values(d);
				f.values = this.values()
			}
			this._trigger("stop", e, f)
		},
		_change: function(e, d) {
			if (!this._keySliding && !this._mouseSliding) {
				var f = {
					handle: this.handles[d],
					value: this.value()
				};
				if (this.options.values && this.options.values.length) {
					f.value = this.values(d);
					f.values = this.values()
				}
				this._trigger("change", e, f)
			}
		},
		value: function(b) {
			if (arguments.length) {
				this.options.value = this._trimAlignValue(b);
				this._refreshValue();
				this._change(null, 0)
			} else {
				return this._value()
			}
		},
		values: function(g, d) {
			var j, h, i;
			if (arguments.length > 1) {
				this.options.values[g] = this._trimAlignValue(d);
				this._refreshValue();
				this._change(null, g)
			} else {
				if (arguments.length) {
					if (a.isArray(arguments[0])) {
						j = this.options.values;
						h = arguments[0];
						for (i = 0; i < j.length; i += 1) {
							j[i] = this._trimAlignValue(h[i]);
							this._change(null, i)
						}
						this._refreshValue()
					} else {
						return this.options.values && this.options.values.length ? this._values(g) : this.value()
					}
				} else {
					return this._values()
				}
			}
		},
		_setOption: function(e, d) {
			var h, g = 0;
			if (a.isArray(this.options.values)) {
				g = this.options.values.length
			}
			a.Widget.prototype._setOption.apply(this, arguments);
			switch (e) {
			case "disabled":
				if (d) {
					this.handles.filter(".ui-state-focus").blur();
					this.handles.removeClass("ui-state-hover");
					this.handles.propAttr("disabled", true);
					this.element.addClass("ui-disabled")
				} else {
					this.handles.propAttr("disabled", false);
					this.element.removeClass("ui-disabled")
				}
				break;
			case "orientation":
				this._detectOrientation();
				this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);
				this._refreshValue();
				break;
			case "value":
				this._animateOff = true;
				this._refreshValue();
				this._change(null, 0);
				this._animateOff = false;
				break;
			case "values":
				this._animateOff = true;
				this._refreshValue();
				for (h = 0; h < g; h += 1) {
					this._change(null, h)
				}
				this._animateOff = false;
				break
			}
		},
		_value: function() {
			var b = this.options.value;
			return b = this._trimAlignValue(b)
		},
		_values: function(e) {
			var d, f;
			if (arguments.length) {
				d = this.options.values[e];
				return d = this._trimAlignValue(d)
			} else {
				d = this.options.values.slice();
				for (f = 0; f < d.length; f += 1) {
					d[f] = this._trimAlignValue(d[f])
				}
				return d
			}
		},
		_trimAlignValue: function(e) {
			if (e <= this._valueMin()) {
				return this._valueMin()
			}
			if (e >= this._valueMax()) {
				return this._valueMax()
			}
			var d = this.options.step > 0 ? this.options.step: 1,
			f = (e - this._valueMin()) % d;
			e = e - f;
			if (Math.abs(f) * 2 >= d) {
				e += f > 0 ? d: -d
			}
			return parseFloat(e.toFixed(5))
		},
		_valueMin: function() {
			return this.options.min
		},
		_valueMax: function() {
			return this.options.max
		},
		_refreshValue: function() {
			var u = this.options.range,
			s = this.options,
			r = this,
			p = !this._animateOff ? s.animate: false,
			q,
			m = {},
			o,
			h,
			d,
			n;
			if (this.options.values && this.options.values.length) {
				this.handles.each(function(b) {
					q = (r.values(b) - r._valueMin()) / (r._valueMax() - r._valueMin()) * 100;
					m[r.orientation === "horizontal" ? "left": "bottom"] = q + "%";
					a(this).stop(1, 1)[p ? "animate": "css"](m, s.animate);
					if (r.options.range === true) {
						if (r.orientation === "horizontal") {
							if (b === 0) {
								r.range.stop(1, 1)[p ? "animate": "css"]({
									left: q + "%"
								},
								s.animate)
							}
							if (b === 1) {
								r.range[p ? "animate": "css"]({
									width: q - o + "%"
								},
								{
									queue: false,
									duration: s.animate
								})
							}
						} else {
							if (b === 0) {
								r.range.stop(1, 1)[p ? "animate": "css"]({
									bottom: q + "%"
								},
								s.animate)
							}
							if (b === 1) {
								r.range[p ? "animate": "css"]({
									height: q - o + "%"
								},
								{
									queue: false,
									duration: s.animate
								})
							}
						}
					}
					o = q
				})
			} else {
				h = this.value();
				d = this._valueMin();
				n = this._valueMax();
				q = n !== d ? (h - d) / (n - d) * 100 : 0;
				m[r.orientation === "horizontal" ? "left": "bottom"] = q + "%";
				this.handle.stop(1, 1)[p ? "animate": "css"](m, s.animate);
				if (u === "min" && this.orientation === "horizontal") {
					this.range.stop(1, 1)[p ? "animate": "css"]({
						width: q + "%"
					},
					s.animate)
				}
				if (u === "max" && this.orientation === "horizontal") {
					this.range[p ? "animate": "css"]({
						width: 100 - q + "%"
					},
					{
						queue: false,
						duration: s.animate
					})
				}
				if (u === "min" && this.orientation === "vertical") {
					this.range.stop(1, 1)[p ? "animate": "css"]({
						height: q + "%"
					},
					s.animate)
				}
				if (u === "max" && this.orientation === "vertical") {
					this.range[p ? "animate": "css"]({
						height: 100 - q + "%"
					},
					{
						queue: false,
						duration: s.animate
					})
				}
			}
		}
	});
	a.extend(a.ui.slider, {
		version: "1.8.15"
	})
})(jQuery); (function(g, f) {
	function e() {
		return++c
	}
	function b() {
		return++a
	}
	var c = 0,
	a = 0;
	g.widget("ui.tabs", {
		options: {
			add: null,
			ajaxOptions: null,
			cache: false,
			cookie: null,
			collapsible: false,
			disable: null,
			disabled: [],
			enable: null,
			event: "click",
			fx: null,
			idPrefix: "ui-tabs-",
			load: null,
			panelTemplate: "<div></div>",
			remove: null,
			select: null,
			show: null,
			spinner: "<em>Loading&#8230;</em>",
			tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"
		},
		_create: function() {
			this._tabify(true)
		},
		_setOption: function(d, h) {
			if (d == "selected") {
				this.options.collapsible && h == this.options.selected || this.select(h)
			} else {
				this.options[d] = h;
				this._tabify()
			}
		},
		_tabId: function(d) {
			return d.title && d.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF-]/g, "") || this.options.idPrefix + e()
		},
		_sanitizeSelector: function(d) {
			return d.replace(/:/g, "\\:")
		},
		_cookie: function() {
			var d = this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + b());
			return g.cookie.apply(null, [d].concat(g.makeArray(arguments)))
		},
		_ui: function(d, h) {
			return {
				tab: d,
				panel: h,
				index: this.anchors.index(d)
			}
		},
		_cleanup: function() {
			this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function() {
				var d = g(this);
				d.html(d.data("label.tabs")).removeData("label.tabs")
			})
		},
		_tabify: function(y) {
			function w(h, j) {
				h.css("display", ""); ! g.support.opacity && j.opacity && h[0].style.removeAttribute("filter")
			}
			var z = this,
			x = this.options,
			v = /^#.+/;
			this.list = this.element.find("ol,ul").eq(0);
			this.lis = g(" > li:has(a[href])", this.list);
			this.anchors = this.lis.map(function() {
				return g("a", this)[0]
			});
			this.panels = g([]);
			this.anchors.each(function(k, n) {
				var j = g(n).attr("href"),
				h = j.split("#")[0],
				m;
				if (h && (h === location.toString().split("#")[0] || (m = g("base")[0]) && h === m.href)) {
					j = n.hash;
					n.href = j
				}
				if (v.test(j)) {
					z.panels = z.panels.add(z.element.find(z._sanitizeSelector(j)))
				} else {
					if (j && j !== "#") {
						g.data(n, "href.tabs", j);
						g.data(n, "load.tabs", j.replace(/#.*$/, ""));
						j = z._tabId(n);
						n.href = "#" + j;
						n = z.element.find("#" + j);
						if (!n.length) {
							n = g(x.panelTemplate).attr("id", j).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(z.panels[k - 1] || z.list);
							n.data("destroy.tabs", true)
						}
						z.panels = z.panels.add(n)
					} else {
						x.disabled.push(k)
					}
				}
			});
			if (y) {
				this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");
				this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
				this.lis.addClass("ui-state-default ui-corner-top");
				this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");
				if (x.selected === f) {
					location.hash && this.anchors.each(function(h, j) {
						if (j.hash == location.hash) {
							x.selected = h;
							return false
						}
					});
					if (typeof x.selected !== "number" && x.cookie) {
						x.selected = parseInt(z._cookie(), 10)
					}
					if (typeof x.selected !== "number" && this.lis.filter(".ui-tabs-selected").length) {
						x.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"))
					}
					x.selected = x.selected || (this.lis.length ? 0 : -1)
				} else {
					if (x.selected === null) {
						x.selected = -1
					}
				}
				x.selected = x.selected >= 0 && this.anchors[x.selected] || x.selected < 0 ? x.selected: 0;
				x.disabled = g.unique(x.disabled.concat(g.map(this.lis.filter(".ui-state-disabled"),
				function(h) {
					return z.lis.index(h)
				}))).sort();
				g.inArray(x.selected, x.disabled) != -1 && x.disabled.splice(g.inArray(x.selected, x.disabled), 1);
				this.panels.addClass("ui-tabs-hide");
				this.lis.removeClass("ui-tabs-selected ui-state-active");
				if (x.selected >= 0 && this.anchors.length) {
					z.element.find(z._sanitizeSelector(z.anchors[x.selected].hash)).removeClass("ui-tabs-hide");
					this.lis.eq(x.selected).addClass("ui-tabs-selected ui-state-active");
					z.element.queue("tabs",
					function() {
						z._trigger("show", null, z._ui(z.anchors[x.selected], z.element.find(z._sanitizeSelector(z.anchors[x.selected].hash))[0]))
					});
					this.load(x.selected)
				}
				g(window).bind("unload",
				function() {
					z.lis.add(z.anchors).unbind(".tabs");
					z.lis = z.anchors = z.panels = null
				})
			} else {
				x.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"))
			}
			this.element[x.collapsible ? "addClass": "removeClass"]("ui-tabs-collapsible");
			x.cookie && this._cookie(x.selected, x.cookie);
			y = 0;
			for (var u; u = this.lis[y]; y++) {
				g(u)[g.inArray(y, x.disabled) != -1 && !g(u).hasClass("ui-tabs-selected") ? "addClass": "removeClass"]("ui-state-disabled")
			}
			x.cache === false && this.anchors.removeData("cache.tabs");
			this.lis.add(this.anchors).unbind(".tabs");
			if (x.event !== "mouseover") {
				var q = function(h, j) {
					j.is(":not(.ui-state-disabled)") && j.addClass("ui-state-" + h)
				},
				l = function(h, j) {
					j.removeClass("ui-state-" + h)
				};
				this.lis.bind("mouseover.tabs",
				function() {
					q("hover", g(this))
				});
				this.lis.bind("mouseout.tabs",
				function() {
					l("hover", g(this))
				});
				this.anchors.bind("focus.tabs",
				function() {
					q("focus", g(this).closest("li"))
				});
				this.anchors.bind("blur.tabs",
				function() {
					l("focus", g(this).closest("li"))
				})
			}
			var p, i;
			if (x.fx) {
				if (g.isArray(x.fx)) {
					p = x.fx[0];
					i = x.fx[1]
				} else {
					p = i = x.fx
				}
			}
			var d = i ?
			function(h, j) {
				g(h).closest("li").addClass("ui-tabs-selected ui-state-active");
				j.hide().removeClass("ui-tabs-hide").animate(i, i.duration || "normal",
				function() {
					w(j, i);
					z._trigger("show", null, z._ui(h, j[0]))
				})
			}: function(h, j) {
				g(h).closest("li").addClass("ui-tabs-selected ui-state-active");
				j.removeClass("ui-tabs-hide");
				z._trigger("show", null, z._ui(h, j[0]))
			},
			A = p ?
			function(h, j) {
				j.animate(p, p.duration || "normal",
				function() {
					z.lis.removeClass("ui-tabs-selected ui-state-active");
					j.addClass("ui-tabs-hide");
					w(j, p);
					z.element.dequeue("tabs")
				})
			}: function(h, j) {
				z.lis.removeClass("ui-tabs-selected ui-state-active");
				j.addClass("ui-tabs-hide");
				z.element.dequeue("tabs")
			};
			this.anchors.bind(x.event + ".tabs",
			function() {
				var k = this,
				m = g(k).closest("li"),
				j = z.panels.filter(":not(.ui-tabs-hide)"),
				h = z.element.find(z._sanitizeSelector(k.hash));
				if (m.hasClass("ui-tabs-selected") && !x.collapsible || m.hasClass("ui-state-disabled") || m.hasClass("ui-state-processing") || z.panels.filter(":animated").length || z._trigger("select", null, z._ui(this, h[0])) === false) {
					this.blur();
					return false
				}
				x.selected = z.anchors.index(this);
				z.abort();
				if (x.collapsible) {
					if (m.hasClass("ui-tabs-selected")) {
						x.selected = -1;
						x.cookie && z._cookie(x.selected, x.cookie);
						z.element.queue("tabs",
						function() {
							A(k, j)
						}).dequeue("tabs");
						this.blur();
						return false
					} else {
						if (!j.length) {
							x.cookie && z._cookie(x.selected, x.cookie);
							z.element.queue("tabs",
							function() {
								d(k, h)
							});
							z.load(z.anchors.index(this));
							this.blur();
							return false
						}
					}
				}
				x.cookie && z._cookie(x.selected, x.cookie);
				if (h.length) {
					j.length && z.element.queue("tabs",
					function() {
						A(k, j)
					});
					z.element.queue("tabs",
					function() {
						d(k, h)
					});
					z.load(z.anchors.index(this))
				} else {
					throw "jQuery UI Tabs: Mismatching fragment identifier."
				}
				g.browser.msie && this.blur()
			});
			this.anchors.bind("click.tabs",
			function() {
				return false
			})
		},
		_getIndex: function(d) {
			if (typeof d == "string") {
				d = this.anchors.index(this.anchors.filter("[href$=" + d + "]"))
			}
			return d
		},
		destroy: function() {
			var d = this.options;
			this.abort();
			this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs");
			this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
			this.anchors.each(function() {
				var i = g.data(this, "href.tabs");
				if (i) {
					this.href = i
				}
				var h = g(this).unbind(".tabs");
				g.each(["href", "load", "cache"],
				function(k, j) {
					h.removeData(j + ".tabs")
				})
			});
			this.lis.unbind(".tabs").add(this.panels).each(function() {
				g.data(this, "destroy.tabs") ? g(this).remove() : g(this).removeClass("ui-state-default ui-corner-top ui-tabs-selected ui-state-active ui-state-hover ui-state-focus ui-state-disabled ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide")
			});
			d.cookie && this._cookie(null, d.cookie);
			return this
		},
		add: function(d, m, i) {
			if (i === f) {
				i = this.anchors.length
			}
			var n = this,
			l = this.options;
			m = g(l.tabTemplate.replace(/#\{href\}/g, d).replace(/#\{label\}/g, m));
			d = !d.indexOf("#") ? d.replace("#", "") : this._tabId(g("a", m)[0]);
			m.addClass("ui-state-default ui-corner-top").data("destroy.tabs", true);
			var k = n.element.find("#" + d);
			k.length || (k = g(l.panelTemplate).attr("id", d).data("destroy.tabs", true));
			k.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");
			if (i >= this.lis.length) {
				m.appendTo(this.list);
				k.appendTo(this.list[0].parentNode)
			} else {
				m.insertBefore(this.lis[i]);
				k.insertBefore(this.panels[i])
			}
			l.disabled = g.map(l.disabled,
			function(h) {
				return h >= i ? ++h: h
			});
			this._tabify();
			if (this.anchors.length == 1) {
				l.selected = 0;
				m.addClass("ui-tabs-selected ui-state-active");
				k.removeClass("ui-tabs-hide");
				this.element.queue("tabs",
				function() {
					n._trigger("show", null, n._ui(n.anchors[0], n.panels[0]))
				});
				this.load(0)
			}
			this._trigger("add", null, this._ui(this.anchors[i], this.panels[i]));
			return this
		},
		remove: function(d) {
			d = this._getIndex(d);
			var i = this.options,
			h = this.lis.eq(d).remove(),
			j = this.panels.eq(d).remove();
			if (h.hasClass("ui-tabs-selected") && this.anchors.length > 1) {
				this.select(d + (d + 1 < this.anchors.length ? 1 : -1))
			}
			i.disabled = g.map(g.grep(i.disabled,
			function(k) {
				return k != d
			}),
			function(k) {
				return k >= d ? --k: k
			});
			this._tabify();
			this._trigger("remove", null, this._ui(h.find("a")[0], j[0]));
			return this
		},
		enable: function(d) {
			d = this._getIndex(d);
			var h = this.options;
			if (g.inArray(d, h.disabled) != -1) {
				this.lis.eq(d).removeClass("ui-state-disabled");
				h.disabled = g.grep(h.disabled,
				function(i) {
					return i != d
				});
				this._trigger("enable", null, this._ui(this.anchors[d], this.panels[d]));
				return this
			}
		},
		disable: function(d) {
			d = this._getIndex(d);
			var h = this.options;
			if (d != h.selected) {
				this.lis.eq(d).addClass("ui-state-disabled");
				h.disabled.push(d);
				h.disabled.sort();
				this._trigger("disable", null, this._ui(this.anchors[d], this.panels[d]))
			}
			return this
		},
		select: function(d) {
			d = this._getIndex(d);
			if (d == -1) {
				if (this.options.collapsible && this.options.selected != -1) {
					d = this.options.selected
				} else {
					return this
				}
			}
			this.anchors.eq(d).trigger(this.options.event + ".tabs");
			return this
		},
		load: function(d) {
			d = this._getIndex(d);
			var m = this,
			i = this.options,
			n = this.anchors.eq(d)[0],
			l = g.data(n, "load.tabs");
			this.abort();
			if (!l || this.element.queue("tabs").length !== 0 && g.data(n, "cache.tabs")) {
				this.element.dequeue("tabs")
			} else {
				this.lis.eq(d).addClass("ui-state-processing");
				if (i.spinner) {
					var k = g("span", n);
					k.data("label.tabs", k.html()).html(i.spinner)
				}
				this.xhr = g.ajax(g.extend({},
				i.ajaxOptions, {
					url: l,
					success: function(j, o) {
						m.element.find(m._sanitizeSelector(n.hash)).html(j);
						m._cleanup();
						i.cache && g.data(n, "cache.tabs", true);
						m._trigger("load", null, m._ui(m.anchors[d], m.panels[d]));
						try {
							i.ajaxOptions.success(j, o)
						} catch(h) {}
					},
					error: function(j, o) {
						m._cleanup();
						m._trigger("load", null, m._ui(m.anchors[d], m.panels[d]));
						try {
							i.ajaxOptions.error(j, o, d, n)
						} catch(h) {}
					}
				}));
				m.element.dequeue("tabs");
				return this
			}
		},
		abort: function() {
			this.element.queue([]);
			this.panels.stop(false, true);
			this.element.queue("tabs", this.element.queue("tabs").splice( - 2, 2));
			if (this.xhr) {
				this.xhr.abort();
				delete this.xhr
			}
			this._cleanup();
			return this
		},
		url: function(d, h) {
			this.anchors.eq(d).removeData("cache.tabs").data("load.tabs", h);
			return this
		},
		length: function() {
			return this.anchors.length
		}
	});
	g.extend(g.ui.tabs, {
		version: "1.8.15"
	});
	g.extend(g.ui.tabs.prototype, {
		rotation: null,
		rotate: function(d, k) {
			var i = this,
			l = this.options,
			j = i._rotate || (i._rotate = function(h) {
				clearTimeout(i.rotation);
				i.rotation = setTimeout(function() {
					var m = l.selected;
					i.select(++m < i.anchors.length ? m: 0)
				},
				d);
				h && h.stopPropagation()
			});
			k = i._unrotate || (i._unrotate = !k ?
			function(h) {
				h.clientX && i.rotate(null)
			}: function() {
				t = l.selected;
				j()
			});
			if (d) {
				this.element.bind("tabsshow", j);
				this.anchors.bind(l.event + ".tabs", k);
				j()
			} else {
				clearTimeout(i.rotation);
				this.element.unbind("tabsshow", j);
				this.anchors.unbind(l.event + ".tabs", k);
				delete this._rotate;
				delete this._unrotate
			}
			return this
		}
	})
})(jQuery); (function(d, C) {
	function M() {
		this.debug = false;
		this._curInst = null;
		this._keyEvent = false;
		this._disabledInputs = [];
		this._inDialog = this._datepickerShowing = false;
		this._mainDivId = "ui-datepicker-div";
		this._inlineClass = "ui-datepicker-inline";
		this._appendClass = "ui-datepicker-append";
		this._triggerClass = "ui-datepicker-trigger";
		this._dialogClass = "ui-datepicker-dialog";
		this._disableClass = "ui-datepicker-disabled";
		this._unselectableClass = "ui-datepicker-unselectable";
		this._currentClass = "ui-datepicker-current-day";
		this._dayOverClass = "ui-datepicker-days-cell-over";
		this.regional = [];
		this.regional[""] = {
			closeText: "Done",
			prevText: "Prev",
			nextText: "Next",
			currentText: "Today",
			monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
			monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
			dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
			dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
			dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
			weekHeader: "Wk",
			dateFormat: "mm/dd/yy",
			firstDay: 0,
			isRTL: false,
			showMonthAfterYear: false,
			yearSuffix: ""
		};
		this._defaults = {
			showOn: "focus",
			showAnim: "fadeIn",
			showOptions: {},
			defaultDate: null,
			appendText: "",
			buttonText: "...",
			buttonImage: "",
			buttonImageOnly: false,
			hideIfNoPrevNext: false,
			navigationAsDateFormat: false,
			gotoCurrent: false,
			changeMonth: false,
			changeYear: false,
			yearRange: "c-10:c+10",
			showOtherMonths: false,
			selectOtherMonths: false,
			showWeek: false,
			calculateWeek: this.iso8601Week,
			shortYearCutoff: "+10",
			minDate: null,
			maxDate: null,
			duration: "fast",
			beforeShowDay: null,
			beforeShow: null,
			onSelect: null,
			onChangeMonthYear: null,
			onClose: null,
			numberOfMonths: 1,
			showCurrentAtPos: 0,
			stepMonths: 1,
			stepBigMonths: 12,
			altField: "",
			altFormat: "",
			constrainInput: true,
			showButtonPanel: false,
			autoSize: false,
			disabled: false
		};
		d.extend(this._defaults, this.regional[""]);
		this.dpDiv = N(d('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))
	}
	function N(a) {
		return a.bind("mouseout",
		function(b) {
			b = d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");
			b.length && b.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")
		}).bind("mouseover",
		function(b) {
			b = d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");
			if (! (d.datepicker._isDisabledDatepicker(J.inline ? a.parent()[0] : J.input[0]) || !b.length)) {
				b.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
				b.addClass("ui-state-hover");
				b.hasClass("ui-datepicker-prev") && b.addClass("ui-datepicker-prev-hover");
				b.hasClass("ui-datepicker-next") && b.addClass("ui-datepicker-next-hover")
			}
		})
	}
	function H(a, b) {
		d.extend(a, b);
		for (var c in b) {
			if (b[c] == null || b[c] == C) {
				a[c] = b[c]
			}
		}
		return a
	}
	d.extend(d.ui, {
		datepicker: {
			version: "1.8.15"
		}
	});
	var B = (new Date).getTime(),
	J;
	d.extend(M.prototype, {
		markerClassName: "hasDatepicker",
		maxRows: 4,
		log: function() {
			this.debug && console.log.apply("", arguments)
		},
		_widgetDatepicker: function() {
			return this.dpDiv
		},
		setDefaults: function(a) {
			H(this._defaults, a || {});
			return this
		},
		_attachDatepicker: function(a, b) {
			var c = null;
			for (var e in this._defaults) {
				var f = a.getAttribute("date:" + e);
				if (f) {
					c = c || {};
					try {
						c[e] = eval(f)
					} catch(h) {
						c[e] = f
					}
				}
			}
			e = a.nodeName.toLowerCase();
			f = e == "div" || e == "span";
			if (!a.id) {
				this.uuid += 1;
				a.id = "dp" + this.uuid
			}
			var i = this._newInst(d(a), f);
			i.settings = d.extend({},
			b || {},
			c || {});
			if (e == "input") {
				this._connectDatepicker(a, i)
			} else {
				f && this._inlineDatepicker(a, i)
			}
		},
		_newInst: function(a, b) {
			return {
				id: a[0].id.replace(/([^A-Za-z0-9_-])/g, "\\\\$1"),
				input: a,
				selectedDay: 0,
				selectedMonth: 0,
				selectedYear: 0,
				drawMonth: 0,
				drawYear: 0,
				inline: b,
				dpDiv: !b ? this.dpDiv: N(d('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))
			}
		},
		_connectDatepicker: function(a, b) {
			var c = d(a);
			b.append = d([]);
			b.trigger = d([]);
			if (!c.hasClass(this.markerClassName)) {
				this._attachments(c, b);
				c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",
				function(e, f, h) {
					b.settings[f] = h
				}).bind("getData.datepicker",
				function(e, f) {
					return this._get(b, f)
				});
				this._autoSize(b);
				d.data(a, "datepicker", b);
				b.settings.disabled && this._disableDatepicker(a)
			}
		},
		_attachments: function(a, b) {
			var c = this._get(b, "appendText"),
			e = this._get(b, "isRTL");
			b.append && b.append.remove();
			if (c) {
				b.append = d('<span class="' + this._appendClass + '">' + c + "</span>");
				a[e ? "before": "after"](b.append)
			}
			a.unbind("focus", this._showDatepicker);
			b.trigger && b.trigger.remove();
			c = this._get(b, "showOn");
			if (c == "focus" || c == "both") {
				a.focus(this._showDatepicker)
			}
			if (c == "button" || c == "both") {
				c = this._get(b, "buttonText");
				var f = this._get(b, "buttonImage");
				b.trigger = d(this._get(b, "buttonImageOnly") ? d("<img/>").addClass(this._triggerClass).attr({
					src: f,
					alt: c,
					title: c
				}) : d('<button type="button"></button>').addClass(this._triggerClass).html(f == "" ? c: d("<img/>").attr({
					src: f,
					alt: c,
					title: c
				})));
				a[e ? "before": "after"](b.trigger);
				b.trigger.click(function() {
					d.datepicker._datepickerShowing && d.datepicker._lastInput == a[0] ? d.datepicker._hideDatepicker() : d.datepicker._showDatepicker(a[0]);
					return false
				})
			}
		},
		_autoSize: function(a) {
			if (this._get(a, "autoSize") && !a.inline) {
				var b = new Date(2009, 11, 20),
				c = this._get(a, "dateFormat");
				if (c.match(/[DM]/)) {
					var e = function(f) {
						for (var h = 0,
						i = 0,
						g = 0; g < f.length; g++) {
							if (f[g].length > h) {
								h = f[g].length;
								i = g
							}
						}
						return i
					};
					b.setMonth(e(this._get(a, c.match(/MM/) ? "monthNames": "monthNamesShort")));
					b.setDate(e(this._get(a, c.match(/DD/) ? "dayNames": "dayNamesShort")) + 20 - b.getDay())
				}
				a.input.attr("size", this._formatDate(a, b).length)
			}
		},
		_inlineDatepicker: function(a, b) {
			var c = d(a);
			if (!c.hasClass(this.markerClassName)) {
				c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker",
				function(e, f, h) {
					b.settings[f] = h
				}).bind("getData.datepicker",
				function(e, f) {
					return this._get(b, f)
				});
				d.data(a, "datepicker", b);
				this._setDate(b, this._getDefaultDate(b), true);
				this._updateDatepicker(b);
				this._updateAlternate(b);
				b.settings.disabled && this._disableDatepicker(a);
				b.dpDiv.css("display", "block")
			}
		},
		_dialogDatepicker: function(a, b, c, e, f) {
			a = this._dialogInst;
			if (!a) {
				this.uuid += 1;
				this._dialogInput = d('<input type="text" id="' + ("dp" + this.uuid) + '" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>');
				this._dialogInput.keydown(this._doKeyDown);
				d("body").append(this._dialogInput);
				a = this._dialogInst = this._newInst(this._dialogInput, false);
				a.settings = {};
				d.data(this._dialogInput[0], "datepicker", a)
			}
			H(a.settings, e || {});
			b = b && b.constructor == Date ? this._formatDate(a, b) : b;
			this._dialogInput.val(b);
			this._pos = f ? f.length ? f: [f.pageX, f.pageY] : null;
			if (!this._pos) {
				this._pos = [document.documentElement.clientWidth / 2 - 100 + (document.documentElement.scrollLeft || document.body.scrollLeft), document.documentElement.clientHeight / 2 - 150 + (document.documentElement.scrollTop || document.body.scrollTop)]
			}
			this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px");
			a.settings.onSelect = c;
			this._inDialog = true;
			this.dpDiv.addClass(this._dialogClass);
			this._showDatepicker(this._dialogInput[0]);
			d.blockUI && d.blockUI(this.dpDiv);
			d.data(this._dialogInput[0], "datepicker", a);
			return this
		},
		_destroyDatepicker: function(a) {
			var b = d(a),
			c = d.data(a, "datepicker");
			if (b.hasClass(this.markerClassName)) {
				var e = a.nodeName.toLowerCase();
				d.removeData(a, "datepicker");
				if (e == "input") {
					c.append.remove();
					c.trigger.remove();
					b.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)
				} else {
					if (e == "div" || e == "span") {
						b.removeClass(this.markerClassName).empty()
					}
				}
			}
		},
		_enableDatepicker: function(a) {
			var b = d(a),
			c = d.data(a, "datepicker");
			if (b.hasClass(this.markerClassName)) {
				var e = a.nodeName.toLowerCase();
				if (e == "input") {
					a.disabled = false;
					c.trigger.filter("button").each(function() {
						this.disabled = false
					}).end().filter("img").css({
						opacity: "1.0",
						cursor: ""
					})
				} else {
					if (e == "div" || e == "span") {
						b = b.children("." + this._inlineClass);
						b.children().removeClass("ui-state-disabled");
						b.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled")
					}
				}
				this._disabledInputs = d.map(this._disabledInputs,
				function(f) {
					return f == a ? null: f
				})
			}
		},
		_disableDatepicker: function(a) {
			var b = d(a),
			c = d.data(a, "datepicker");
			if (b.hasClass(this.markerClassName)) {
				var e = a.nodeName.toLowerCase();
				if (e == "input") {
					a.disabled = true;
					c.trigger.filter("button").each(function() {
						this.disabled = true
					}).end().filter("img").css({
						opacity: "0.5",
						cursor: "default"
					})
				} else {
					if (e == "div" || e == "span") {
						b = b.children("." + this._inlineClass);
						b.children().addClass("ui-state-disabled");
						b.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled", "disabled")
					}
				}
				this._disabledInputs = d.map(this._disabledInputs,
				function(f) {
					return f == a ? null: f
				});
				this._disabledInputs[this._disabledInputs.length] = a
			}
		},
		_isDisabledDatepicker: function(a) {
			if (!a) {
				return false
			}
			for (var b = 0; b < this._disabledInputs.length; b++) {
				if (this._disabledInputs[b] == a) {
					return true
				}
			}
			return false
		},
		_getInst: function(a) {
			try {
				return d.data(a, "datepicker")
			} catch(b) {
				throw "Missing instance data for this datepicker"
			}
		},
		_optionDatepicker: function(a, b, c) {
			var e = this._getInst(a);
			if (arguments.length == 2 && typeof b == "string") {
				return b == "defaults" ? d.extend({},
				d.datepicker._defaults) : e ? b == "all" ? d.extend({},
				e.settings) : this._get(e, b) : null
			}
			var f = b || {};
			if (typeof b == "string") {
				f = {};
				f[b] = c
			}
			if (e) {
				this._curInst == e && this._hideDatepicker();
				var h = this._getDateDatepicker(a, true),
				i = this._getMinMaxDate(e, "min"),
				g = this._getMinMaxDate(e, "max");
				H(e.settings, f);
				if (i !== null && f.dateFormat !== C && f.minDate === C) {
					e.settings.minDate = this._formatDate(e, i)
				}
				if (g !== null && f.dateFormat !== C && f.maxDate === C) {
					e.settings.maxDate = this._formatDate(e, g)
				}
				this._attachments(d(a), e);
				this._autoSize(e);
				this._setDate(e, h);
				this._updateAlternate(e);
				this._updateDatepicker(e)
			}
		},
		_changeDatepicker: function(a, b, c) {
			this._optionDatepicker(a, b, c)
		},
		_refreshDatepicker: function(a) { (a = this._getInst(a)) && this._updateDatepicker(a)
		},
		_setDateDatepicker: function(a, b) {
			if (a = this._getInst(a)) {
				this._setDate(a, b);
				this._updateDatepicker(a);
				this._updateAlternate(a)
			}
		},
		_getDateDatepicker: function(a, b) { (a = this._getInst(a)) && !a.inline && this._setDateFromField(a, b);
			return a ? this._getDate(a) : null
		},
		_doKeyDown: function(a) {
			var b = d.datepicker._getInst(a.target),
			c = true,
			e = b.dpDiv.is(".ui-datepicker-rtl");
			b._keyEvent = true;
			if (d.datepicker._datepickerShowing) {
				switch (a.keyCode) {
				case 9:
					d.datepicker._hideDatepicker();
					c = false;
					break;
				case 13:
					c = d("td." + d.datepicker._dayOverClass + ":not(." + d.datepicker._currentClass + ")", b.dpDiv);
					c[0] && d.datepicker._selectDay(a.target, b.selectedMonth, b.selectedYear, c[0]);
					if (a = d.datepicker._get(b, "onSelect")) {
						c = d.datepicker._formatDate(b);
						a.apply(b.input ? b.input[0] : null, [c, b])
					} else {
						d.datepicker._hideDatepicker()
					}
					return false;
				case 27:
					d.datepicker._hideDatepicker();
					break;
				case 33:
					d.datepicker._adjustDate(a.target, a.ctrlKey ? -d.datepicker._get(b, "stepBigMonths") : -d.datepicker._get(b, "stepMonths"), "M");
					break;
				case 34:
					d.datepicker._adjustDate(a.target, a.ctrlKey ? +d.datepicker._get(b, "stepBigMonths") : +d.datepicker._get(b, "stepMonths"), "M");
					break;
				case 35:
					if (a.ctrlKey || a.metaKey) {
						d.datepicker._clearDate(a.target)
					}
					c = a.ctrlKey || a.metaKey;
					break;
				case 36:
					if (a.ctrlKey || a.metaKey) {
						d.datepicker._gotoToday(a.target)
					}
					c = a.ctrlKey || a.metaKey;
					break;
				case 37:
					if (a.ctrlKey || a.metaKey) {
						d.datepicker._adjustDate(a.target, e ? +1 : -1, "D")
					}
					c = a.ctrlKey || a.metaKey;
					if (a.originalEvent.altKey) {
						d.datepicker._adjustDate(a.target, a.ctrlKey ? -d.datepicker._get(b, "stepBigMonths") : -d.datepicker._get(b, "stepMonths"), "M")
					}
					break;
				case 38:
					if (a.ctrlKey || a.metaKey) {
						d.datepicker._adjustDate(a.target, -7, "D")
					}
					c = a.ctrlKey || a.metaKey;
					break;
				case 39:
					if (a.ctrlKey || a.metaKey) {
						d.datepicker._adjustDate(a.target, e ? -1 : +1, "D")
					}
					c = a.ctrlKey || a.metaKey;
					if (a.originalEvent.altKey) {
						d.datepicker._adjustDate(a.target, a.ctrlKey ? +d.datepicker._get(b, "stepBigMonths") : +d.datepicker._get(b, "stepMonths"), "M")
					}
					break;
				case 40:
					if (a.ctrlKey || a.metaKey) {
						d.datepicker._adjustDate(a.target, +7, "D")
					}
					c = a.ctrlKey || a.metaKey;
					break;
				default:
					c = false
				}
			} else {
				if (a.keyCode == 36 && a.ctrlKey) {
					d.datepicker._showDatepicker(this)
				} else {
					c = false
				}
			}
			if (c) {
				a.preventDefault();
				a.stopPropagation()
			}
		},
		_doKeyPress: function(a) {
			var b = d.datepicker._getInst(a.target);
			if (d.datepicker._get(b, "constrainInput")) {
				b = d.datepicker._possibleChars(d.datepicker._get(b, "dateFormat"));
				var c = String.fromCharCode(a.charCode == C ? a.keyCode: a.charCode);
				return a.ctrlKey || a.metaKey || c < " " || !b || b.indexOf(c) > -1
			}
		},
		_doKeyUp: function(a) {
			a = d.datepicker._getInst(a.target);
			if (a.input.val() != a.lastVal) {
				try {
					if (d.datepicker.parseDate(d.datepicker._get(a, "dateFormat"), a.input ? a.input.val() : null, d.datepicker._getFormatConfig(a))) {
						d.datepicker._setDateFromField(a);
						d.datepicker._updateAlternate(a);
						d.datepicker._updateDatepicker(a)
					}
				} catch(b) {
					d.datepicker.log(b)
				}
			}
			return true
		},
		_showDatepicker: function(a) {
			a = a.target || a;
			if (a.nodeName.toLowerCase() != "input") {
				a = d("input", a.parentNode)[0]
			}
			if (! (d.datepicker._isDisabledDatepicker(a) || d.datepicker._lastInput == a)) {
				var b = d.datepicker._getInst(a);
				if (d.datepicker._curInst && d.datepicker._curInst != b) {
					d.datepicker._datepickerShowing && d.datepicker._triggerOnClose(d.datepicker._curInst);
					d.datepicker._curInst.dpDiv.stop(true, true)
				}
				var c = d.datepicker._get(b, "beforeShow");
				H(b.settings, c ? c.apply(a, [a, b]) : {});
				b.lastVal = null;
				d.datepicker._lastInput = a;
				d.datepicker._setDateFromField(b);
				if (d.datepicker._inDialog) {
					a.value = ""
				}
				if (!d.datepicker._pos) {
					d.datepicker._pos = d.datepicker._findPos(a);
					d.datepicker._pos[1] += a.offsetHeight
				}
				var e = false;
				d(a).parents().each(function() {
					e |= d(this).css("position") == "fixed";
					return ! e
				});
				if (e && d.browser.opera) {
					d.datepicker._pos[0] -= document.documentElement.scrollLeft;
					d.datepicker._pos[1] -= document.documentElement.scrollTop
				}
				c = {
					left: d.datepicker._pos[0],
					top: d.datepicker._pos[1]
				};
				d.datepicker._pos = null;
				b.dpDiv.empty();
				b.dpDiv.css({
					position: "absolute",
					display: "block",
					top: "-1000px"
				});
				d.datepicker._updateDatepicker(b);
				c = d.datepicker._checkOffset(b, c, e);
				b.dpDiv.css({
					position: d.datepicker._inDialog && d.blockUI ? "static": e ? "fixed": "absolute",
					display: "none",
					left: c.left + "px",
					top: c.top + "px"
				});
				if (!b.inline) {
					c = d.datepicker._get(b, "showAnim");
					var f = d.datepicker._get(b, "duration"),
					h = function() {
						var i = b.dpDiv.find("iframe.ui-datepicker-cover");
						if (i.length) {
							var g = d.datepicker._getBorders(b.dpDiv);
							i.css({
								left: -g[0],
								top: -g[1],
								width: b.dpDiv.outerWidth(),
								height: b.dpDiv.outerHeight()
							})
						}
					};
					b.dpDiv.zIndex(d(a).zIndex() + 1);
					d.datepicker._datepickerShowing = true;
					d.effects && d.effects[c] ? b.dpDiv.show(c, d.datepicker._get(b, "showOptions"), f, h) : b.dpDiv[c || "show"](c ? f: null, h);
					if (!c || !f) {
						h()
					}
					b.input.is(":visible") && !b.input.is(":disabled") && b.input.focus();
					d.datepicker._curInst = b
				}
			}
		},
		_updateDatepicker: function(a) {
			this.maxRows = 4;
			var b = d.datepicker._getBorders(a.dpDiv);
			J = a;
			a.dpDiv.empty().append(this._generateHTML(a));
			var c = a.dpDiv.find("iframe.ui-datepicker-cover");
			c.length && c.css({
				left: -b[0],
				top: -b[1],
				width: a.dpDiv.outerWidth(),
				height: a.dpDiv.outerHeight()
			});
			a.dpDiv.find("." + this._dayOverClass + " a").mouseover();
			b = this._getNumberOfMonths(a);
			c = b[1];
			a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
			c > 1 && a.dpDiv.addClass("ui-datepicker-multi-" + c).css("width", 17 * c + "em");
			a.dpDiv[(b[0] != 1 || b[1] != 1 ? "add": "remove") + "Class"]("ui-datepicker-multi");
			a.dpDiv[(this._get(a, "isRTL") ? "add": "remove") + "Class"]("ui-datepicker-rtl");
			a == d.datepicker._curInst && d.datepicker._datepickerShowing && a.input && a.input.is(":visible") && !a.input.is(":disabled") && a.input[0] != document.activeElement && a.input.focus();
			if (a.yearshtml) {
				var e = a.yearshtml;
				setTimeout(function() {
					e === a.yearshtml && a.yearshtml && a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml);
					e = a.yearshtml = null
				},
				0)
			}
		},
		_getBorders: function(a) {
			var b = function(c) {
				return {
					thin: 1,
					medium: 2,
					thick: 3
				} [c] || c
			};
			return [parseFloat(b(a.css("border-left-width"))), parseFloat(b(a.css("border-top-width")))]
		},
		_checkOffset: function(a, b, c) {
			var e = a.dpDiv.outerWidth(),
			f = a.dpDiv.outerHeight(),
			h = a.input ? a.input.outerWidth() : 0,
			i = a.input ? a.input.outerHeight() : 0,
			g = document.documentElement.clientWidth + d(document).scrollLeft(),
			j = document.documentElement.clientHeight + d(document).scrollTop();
			b.left -= this._get(a, "isRTL") ? e - h: 0;
			b.left -= c && b.left == a.input.offset().left ? d(document).scrollLeft() : 0;
			b.top -= c && b.top == a.input.offset().top + i ? d(document).scrollTop() : 0;
			b.left -= Math.min(b.left, b.left + e > g && g > e ? Math.abs(b.left + e - g) : 0);
			b.top -= Math.min(b.top, b.top + f > j && j > f ? Math.abs(f + i) : 0);
			return b
		},
		_findPos: function(a) {
			for (var b = this._get(this._getInst(a), "isRTL"); a && (a.type == "hidden" || a.nodeType != 1 || d.expr.filters.hidden(a));) {
				a = a[b ? "previousSibling": "nextSibling"]
			}
			a = d(a).offset();
			return [a.left, a.top]
		},
		_triggerOnClose: function(a) {
			var b = this._get(a, "onClose");
			if (b) {
				b.apply(a.input ? a.input[0] : null, [a.input ? a.input.val() : "", a])
			}
		},
		_hideDatepicker: function(a) {
			var b = this._curInst;
			if (! (!b || a && b != d.data(a, "datepicker"))) {
				if (this._datepickerShowing) {
					a = this._get(b, "showAnim");
					var c = this._get(b, "duration"),
					e = function() {
						d.datepicker._tidyDialog(b);
						this._curInst = null
					};
					d.effects && d.effects[a] ? b.dpDiv.hide(a, d.datepicker._get(b, "showOptions"), c, e) : b.dpDiv[a == "slideDown" ? "slideUp": a == "fadeIn" ? "fadeOut": "hide"](a ? c: null, e);
					a || e();
					d.datepicker._triggerOnClose(b);
					this._datepickerShowing = false;
					this._lastInput = null;
					if (this._inDialog) {
						this._dialogInput.css({
							position: "absolute",
							left: "0",
							top: "-100px"
						});
						if (d.blockUI) {
							d.unblockUI();
							d("body").append(this.dpDiv)
						}
					}
					this._inDialog = false
				}
			}
		},
		_tidyDialog: function(a) {
			a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
		},
		_checkExternalClick: function(a) {
			if (d.datepicker._curInst) {
				a = d(a.target);
				a[0].id != d.datepicker._mainDivId && a.parents("#" + d.datepicker._mainDivId).length == 0 && !a.hasClass(d.datepicker.markerClassName) && !a.hasClass(d.datepicker._triggerClass) && d.datepicker._datepickerShowing && !(d.datepicker._inDialog && d.blockUI) && d.datepicker._hideDatepicker()
			}
		},
		_adjustDate: function(a, b, c) {
			a = d(a);
			var e = this._getInst(a[0]);
			if (!this._isDisabledDatepicker(a[0])) {
				this._adjustInstDate(e, b + (c == "M" ? this._get(e, "showCurrentAtPos") : 0), c);
				this._updateDatepicker(e)
			}
		},
		_gotoToday: function(a) {
			a = d(a);
			var b = this._getInst(a[0]);
			if (this._get(b, "gotoCurrent") && b.currentDay) {
				b.selectedDay = b.currentDay;
				b.drawMonth = b.selectedMonth = b.currentMonth;
				b.drawYear = b.selectedYear = b.currentYear
			} else {
				var c = new Date;
				b.selectedDay = c.getDate();
				b.drawMonth = b.selectedMonth = c.getMonth();
				b.drawYear = b.selectedYear = c.getFullYear()
			}
			this._notifyChange(b);
			this._adjustDate(a)
		},
		_selectMonthYear: function(a, b, c) {
			a = d(a);
			var e = this._getInst(a[0]);
			e["selected" + (c == "M" ? "Month": "Year")] = e["draw" + (c == "M" ? "Month": "Year")] = parseInt(b.options[b.selectedIndex].value, 10);
			this._notifyChange(e);
			this._adjustDate(a)
		},
		_selectDay: function(a, b, c, e) {
			var f = d(a);
			if (! (d(e).hasClass(this._unselectableClass) || this._isDisabledDatepicker(f[0]))) {
				f = this._getInst(f[0]);
				f.selectedDay = f.currentDay = d("a", e).html();
				f.selectedMonth = f.currentMonth = b;
				f.selectedYear = f.currentYear = c;
				this._selectDate(a, this._formatDate(f, f.currentDay, f.currentMonth, f.currentYear))
			}
		},
		_clearDate: function(a) {
			a = d(a);
			this._getInst(a[0]);
			this._selectDate(a, "")
		},
		_selectDate: function(a, b) {
			a = this._getInst(d(a)[0]);
			b = b != null ? b: this._formatDate(a);
			a.input && a.input.val(b);
			this._updateAlternate(a);
			var c = this._get(a, "onSelect");
			if (c) {
				c.apply(a.input ? a.input[0] : null, [b, a])
			} else {
				a.input && a.input.trigger("change")
			}
			if (a.inline) {
				this._updateDatepicker(a)
			} else {
				this._hideDatepicker();
				this._lastInput = a.input[0];
				a.input.focus();
				this._lastInput = null
			}
		},
		_updateAlternate: function(a) {
			var b = this._get(a, "altField");
			if (b) {
				var c = this._get(a, "altFormat") || this._get(a, "dateFormat"),
				e = this._getDate(a),
				f = this.formatDate(c, e, this._getFormatConfig(a));
				d(b).each(function() {
					d(this).val(f)
				})
			}
		},
		noWeekends: function(a) {
			a = a.getDay();
			return [a > 0 && a < 6, ""]
		},
		iso8601Week: function(a) {
			a = new Date(a.getTime());
			a.setDate(a.getDate() + 4 - (a.getDay() || 7));
			var b = a.getTime();
			a.setMonth(0);
			a.setDate(1);
			return Math.floor(Math.round((b - a) / 86400000) / 7) + 1
		},
		parseDate: function(a, b, c) {
			if (a == null || b == null) {
				throw "Invalid arguments"
			}
			b = typeof b == "object" ? b.toString() : b + "";
			if (b == "") {
				return null
			}
			var e = (c ? c.shortYearCutoff: null) || this._defaults.shortYearCutoff;
			e = typeof e != "string" ? e: (new Date).getFullYear() % 100 + parseInt(e, 10);
			for (var f = (c ? c.dayNamesShort: null) || this._defaults.dayNamesShort, h = (c ? c.dayNames: null) || this._defaults.dayNames, i = (c ? c.monthNamesShort: null) || this._defaults.monthNamesShort, g = (c ? c.monthNames: null) || this._defaults.monthNames, j = c = -1, l = -1, u = -1, k = false, o = function(p) { (p = A + 1 < a.length && a.charAt(A + 1) == p) && A++;
				return p
			},
			m = function(p) {
				var D = o(p);
				p = new RegExp("^\\d{1," + (p == "@" ? 14 : p == "!" ? 20 : p == "y" && D ? 4 : p == "o" ? 3 : 2) + "}");
				p = b.substring(q).match(p);
				if (!p) {
					throw "Missing number at position " + q
				}
				q += p[0].length;
				return parseInt(p[0], 10)
			},
			n = function(p, D, K) {
				p = d.map(o(p) ? K: D,
				function(w, x) {
					return [[x, w]]
				}).sort(function(w, x) {
					return - (w[1].length - x[1].length)
				});
				var E = -1;
				d.each(p,
				function(w, x) {
					w = x[1];
					if (b.substr(q, w.length).toLowerCase() == w.toLowerCase()) {
						E = x[0];
						q += w.length;
						return false
					}
				});
				if (E != -1) {
					return E + 1
				} else {
					throw "Unknown name at position " + q
				}
			},
			s = function() {
				if (b.charAt(q) != a.charAt(A)) {
					throw "Unexpected literal at position " + q
				}
				q++
			},
			q = 0, A = 0; A < a.length; A++) {
				if (k) {
					if (a.charAt(A) == "'" && !o("'")) {
						k = false
					} else {
						s()
					}
				} else {
					switch (a.charAt(A)) {
					case "d":
						l = m("d");
						break;
					case "D":
						n("D", f, h);
						break;
					case "o":
						u = m("o");
						break;
					case "m":
						j = m("m");
						break;
					case "M":
						j = n("M", i, g);
						break;
					case "y":
						c = m("y");
						break;
					case "@":
						var v = new Date(m("@"));
						c = v.getFullYear();
						j = v.getMonth() + 1;
						l = v.getDate();
						break;
					case "!":
						v = new Date((m("!") - this._ticksTo1970) / 10000);
						c = v.getFullYear();
						j = v.getMonth() + 1;
						l = v.getDate();
						break;
					case "'":
						if (o("'")) {
							s()
						} else {
							k = true
						}
						break;
					default:
						s()
					}
				}
			}
			if (q < b.length) {
				throw "Extra/unparsed characters found in date: " + b.substring(q)
			}
			if (c == -1) {
				c = (new Date).getFullYear()
			} else {
				if (c < 100) {
					c += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (c <= e ? 0 : -100)
				}
			}
			if (u > -1) {
				j = 1;
				l = u;
				do {
					e = this._getDaysInMonth(c, j - 1);
					if (l <= e) {
						break
					}
					j++;
					l -= e
				} while ( 1 )
			}
			v = this._daylightSavingAdjust(new Date(c, j - 1, l));
			if (v.getFullYear() != c || v.getMonth() + 1 != j || v.getDate() != l) {
				throw "Invalid date"
			}
			return v
		},
		ATOM: "yy-mm-dd",
		COOKIE: "D, dd M yy",
		ISO_8601: "yy-mm-dd",
		RFC_822: "D, d M y",
		RFC_850: "DD, dd-M-y",
		RFC_1036: "D, d M y",
		RFC_1123: "D, d M yy",
		RFC_2822: "D, d M yy",
		RSS: "D, d M y",
		TICKS: "!",
		TIMESTAMP: "@",
		W3C: "yy-mm-dd",
		_ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 24 * 60 * 60 * 10000000,
		formatDate: function(a, b, c) {
			if (!b) {
				return ""
			}
			var e = (c ? c.dayNamesShort: null) || this._defaults.dayNamesShort,
			f = (c ? c.dayNames: null) || this._defaults.dayNames,
			h = (c ? c.monthNamesShort: null) || this._defaults.monthNamesShort;
			c = (c ? c.monthNames: null) || this._defaults.monthNames;
			var i = function(o) { (o = k + 1 < a.length && a.charAt(k + 1) == o) && k++;
				return o
			},
			g = function(o, m, n) {
				m = "" + m;
				if (i(o)) {
					for (; m.length < n;) {
						m = "0" + m
					}
				}
				return m
			},
			j = function(o, m, n, s) {
				return i(o) ? s[m] : n[m]
			},
			l = "",
			u = false;
			if (b) {
				for (var k = 0; k < a.length; k++) {
					if (u) {
						if (a.charAt(k) == "'" && !i("'")) {
							u = false
						} else {
							l += a.charAt(k)
						}
					} else {
						switch (a.charAt(k)) {
						case "d":
							l += g("d", b.getDate(), 2);
							break;
						case "D":
							l += j("D", b.getDay(), e, f);
							break;
						case "o":
							l += g("o", Math.round(((new Date(b.getFullYear(), b.getMonth(), b.getDate())).getTime() - (new Date(b.getFullYear(), 0, 0)).getTime()) / 86400000), 3);
							break;
						case "m":
							l += g("m", b.getMonth() + 1, 2);
							break;
						case "M":
							l += j("M", b.getMonth(), h, c);
							break;
						case "y":
							l += i("y") ? b.getFullYear() : (b.getYear() % 100 < 10 ? "0": "") + b.getYear() % 100;
							break;
						case "@":
							l += b.getTime();
							break;
						case "!":
							l += b.getTime() * 10000 + this._ticksTo1970;
							break;
						case "'":
							if (i("'")) {
								l += "'"
							} else {
								u = true
							}
							break;
						default:
							l += a.charAt(k)
						}
					}
				}
			}
			return l
		},
		_possibleChars: function(a) {
			for (var b = "",
			c = false,
			e = function(h) { (h = f + 1 < a.length && a.charAt(f + 1) == h) && f++;
				return h
			},
			f = 0; f < a.length; f++) {
				if (c) {
					if (a.charAt(f) == "'" && !e("'")) {
						c = false
					} else {
						b += a.charAt(f)
					}
				} else {
					switch (a.charAt(f)) {
					case "d":
					case "m":
					case "y":
					case "@":
						b += "0123456789";
						break;
					case "D":
					case "M":
						return null;
					case "'":
						if (e("'")) {
							b += "'"
						} else {
							c = true
						}
						break;
					default:
						b += a.charAt(f)
					}
				}
			}
			return b
		},
		_get: function(a, b) {
			return a.settings[b] !== C ? a.settings[b] : this._defaults[b]
		},
		_setDateFromField: function(a, b) {
			if (a.input.val() != a.lastVal) {
				var c = this._get(a, "dateFormat"),
				e = a.lastVal = a.input ? a.input.val() : null,
				f,
				h;
				f = h = this._getDefaultDate(a);
				var i = this._getFormatConfig(a);
				try {
					f = this.parseDate(c, e, i) || h
				} catch(g) {
					this.log(g);
					e = b ? "": e
				}
				a.selectedDay = f.getDate();
				a.drawMonth = a.selectedMonth = f.getMonth();
				a.drawYear = a.selectedYear = f.getFullYear();
				a.currentDay = e ? f.getDate() : 0;
				a.currentMonth = e ? f.getMonth() : 0;
				a.currentYear = e ? f.getFullYear() : 0;
				this._adjustInstDate(a)
			}
		},
		_getDefaultDate: function(a) {
			return this._restrictMinMax(a, this._determineDate(a, this._get(a, "defaultDate"), new Date))
		},
		_determineDate: function(a, b, c) {
			var e = function(h) {
				var i = new Date;
				i.setDate(i.getDate() + h);
				return i
			},
			f = function(h) {
				try {
					return d.datepicker.parseDate(d.datepicker._get(a, "dateFormat"), h, d.datepicker._getFormatConfig(a))
				} catch(i) {}
				var g = (h.toLowerCase().match(/^c/) ? d.datepicker._getDate(a) : null) || new Date,
				j = g.getFullYear(),
				l = g.getMonth();
				g = g.getDate();
				for (var u = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
				k = u.exec(h); k;) {
					switch (k[2] || "d") {
					case "d":
					case "D":
						g += parseInt(k[1], 10);
						break;
					case "w":
					case "W":
						g += parseInt(k[1], 10) * 7;
						break;
					case "m":
					case "M":
						l += parseInt(k[1], 10);
						g = Math.min(g, d.datepicker._getDaysInMonth(j, l));
						break;
					case "y":
					case "Y":
						j += parseInt(k[1], 10);
						g = Math.min(g, d.datepicker._getDaysInMonth(j, l));
						break
					}
					k = u.exec(h)
				}
				return new Date(j, l, g)
			};
			if (b = (b = b == null || b === "" ? c: typeof b == "string" ? f(b) : typeof b == "number" ? isNaN(b) ? c: e(b) : new Date(b.getTime())) && b.toString() == "Invalid Date" ? c: b) {
				b.setHours(0);
				b.setMinutes(0);
				b.setSeconds(0);
				b.setMilliseconds(0)
			}
			return this._daylightSavingAdjust(b)
		},
		_daylightSavingAdjust: function(a) {
			if (!a) {
				return null
			}
			a.setHours(a.getHours() > 12 ? a.getHours() + 2 : 0);
			return a
		},
		_setDate: function(a, b, c) {
			var e = !b,
			f = a.selectedMonth,
			h = a.selectedYear;
			b = this._restrictMinMax(a, this._determineDate(a, b, new Date));
			a.selectedDay = a.currentDay = b.getDate();
			a.drawMonth = a.selectedMonth = a.currentMonth = b.getMonth();
			a.drawYear = a.selectedYear = a.currentYear = b.getFullYear();
			if ((f != a.selectedMonth || h != a.selectedYear) && !c) {
				this._notifyChange(a)
			}
			this._adjustInstDate(a);
			if (a.input) {
				a.input.val(e ? "": this._formatDate(a))
			}
			if (c = this._get(a, "onSelect")) {
				e = this._formatDate(a);
				c.apply(a.input ? a.input[0] : null, [e, a])
			}
		},
		_getDate: function(a) {
			return ! a.currentYear || a.input && a.input.val() == "" ? null: this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay))
		},
		_generateHTML: function(a) {
			var b = new Date;
			b = this._daylightSavingAdjust(new Date(b.getFullYear(), b.getMonth(), b.getDate()));
			var c = this._get(a, "isRTL"),
			e = this._get(a, "showButtonPanel"),
			f = this._get(a, "hideIfNoPrevNext"),
			h = this._get(a, "navigationAsDateFormat"),
			i = this._getNumberOfMonths(a),
			g = this._get(a, "showCurrentAtPos"),
			j = this._get(a, "stepMonths"),
			l = i[0] != 1 || i[1] != 1,
			u = this._daylightSavingAdjust(!a.currentDay ? new Date(9999, 9, 9) : new Date(a.currentYear, a.currentMonth, a.currentDay)),
			k = this._getMinMaxDate(a, "min"),
			o = this._getMinMaxDate(a, "max");
			g = a.drawMonth - g;
			var m = a.drawYear;
			if (g < 0) {
				g += 12;
				m--
			}
			if (o) {
				var n = this._daylightSavingAdjust(new Date(o.getFullYear(), o.getMonth() - i[0] * i[1] + 1, o.getDate()));
				for (n = k && n < k ? k: n; this._daylightSavingAdjust(new Date(m, g, 1)) > n;) {
					g--;
					if (g < 0) {
						g = 11;
						m--
					}
				}
			}
			a.drawMonth = g;
			a.drawYear = m;
			n = this._get(a, "prevText");
			n = !h ? n: this.formatDate(n, this._daylightSavingAdjust(new Date(m, g - j, 1)), this._getFormatConfig(a));
			n = this._canAdjustMonth(a, -1, m, g) ? '<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_' + B + ".datepicker._adjustDate('#" + a.id + "', -" + j + ", 'M');\" title=\"" + n + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "e": "w") + '">' + n + "</span></a>": f ? "": '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + n + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "e": "w") + '">' + n + "</span></a>";
			var s = this._get(a, "nextText");
			s = !h ? s: this.formatDate(s, this._daylightSavingAdjust(new Date(m, g + j, 1)), this._getFormatConfig(a));
			f = this._canAdjustMonth(a, +1, m, g) ? '<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_' + B + ".datepicker._adjustDate('#" + a.id + "', +" + j + ", 'M');\" title=\"" + s + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "w": "e") + '">' + s + "</span></a>": f ? "": '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + s + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "w": "e") + '">' + s + "</span></a>";
			j = this._get(a, "currentText");
			s = this._get(a, "gotoCurrent") && a.currentDay ? u: b;
			j = !h ? j: this.formatDate(j, s, this._getFormatConfig(a));
			h = !a.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_' + B + '.datepicker._hideDatepicker();">' + this._get(a, "closeText") + "</button>": "";
			e = e ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (c ? h: "") + (this._isInRange(a, s) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_' + B + ".datepicker._gotoToday('#" + a.id + "');\">" + j + "</button>": "") + (c ? "": h) + "</div>": "";
			h = parseInt(this._get(a, "firstDay"), 10);
			h = isNaN(h) ? 0 : h;
			j = this._get(a, "showWeek");
			s = this._get(a, "dayNames");
			this._get(a, "dayNamesShort");
			var q = this._get(a, "dayNamesMin"),
			A = this._get(a, "monthNames"),
			v = this._get(a, "monthNamesShort"),
			p = this._get(a, "beforeShowDay"),
			D = this._get(a, "showOtherMonths"),
			K = this._get(a, "selectOtherMonths");
			this._get(a, "calculateWeek");
			for (var E = this._getDefaultDate(a), w = "", x = 0; x < i[0]; x++) {
				var O = "";
				this.maxRows = 4;
				for (var G = 0; G < i[1]; G++) {
					var P = this._daylightSavingAdjust(new Date(m, g, a.selectedDay)),
					t = " ui-corner-all",
					y = "";
					if (l) {
						y += '<div class="ui-datepicker-group';
						if (i[1] > 1) {
							switch (G) {
							case 0:
								y += " ui-datepicker-group-first";
								t = " ui-corner-" + (c ? "right": "left");
								break;
							case i[1] - 1 : y += " ui-datepicker-group-last";
								t = " ui-corner-" + (c ? "left": "right");
								break;
							default:
								y += " ui-datepicker-group-middle";
								t = "";
								break
							}
						}
						y += '">'
					}
					y += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + t + '">' + (/all|left/.test(t) && x == 0 ? c ? f: n: "") + (/all|right/.test(t) && x == 0 ? c ? n: f: "") + this._generateMonthYearHeader(a, g, m, k, o, x > 0 || G > 0, A, v) + '</div><table class="ui-datepicker-calendar"><thead><tr>';
					var z = j ? '<th class="ui-datepicker-week-col">' + this._get(a, "weekHeader") + "</th>": "";
					for (t = 0; t < 7; t++) {
						var r = (t + h) % 7;
						z += "<th" + ((t + h + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"': "") + '><span title="' + s[r] + '">' + q[r] + "</span></th>"
					}
					y += z + "</tr></thead><tbody>";
					z = this._getDaysInMonth(m, g);
					if (m == a.selectedYear && g == a.selectedMonth) {
						a.selectedDay = Math.min(a.selectedDay, z)
					}
					t = (this._getFirstDayOfMonth(m, g) - h + 7) % 7;
					z = Math.ceil((t + z) / 7);
					this.maxRows = z = l ? this.maxRows > z ? this.maxRows: z: z;
					r = this._daylightSavingAdjust(new Date(m, g, 1 - t));
					for (var Q = 0; Q < z; Q++) {
						y += "<tr>";
						var R = !j ? "": '<td class="ui-datepicker-week-col">' + this._get(a, "calculateWeek")(r) + "</td>";
						for (t = 0; t < 7; t++) {
							var I = p ? p.apply(a.input ? a.input[0] : null, [r]) : [true, ""],
							F = r.getMonth() != g,
							L = F && !K || !I[0] || k && r < k || o && r > o;
							R += '<td class="' + ((t + h + 6) % 7 >= 5 ? " ui-datepicker-week-end": "") + (F ? " ui-datepicker-other-month": "") + (r.getTime() == P.getTime() && g == a.selectedMonth && a._keyEvent || E.getTime() == r.getTime() && E.getTime() == P.getTime() ? " " + this._dayOverClass: "") + (L ? " " + this._unselectableClass + " ui-state-disabled": "") + (F && !D ? "": " " + I[1] + (r.getTime() == u.getTime() ? " " + this._currentClass: "") + (r.getTime() == b.getTime() ? " ui-datepicker-today": "")) + '"' + ((!F || D) && I[2] ? ' title="' + I[2] + '"': "") + (L ? "": ' onclick="DP_jQuery_' + B + ".datepicker._selectDay('#" + a.id + "'," + r.getMonth() + "," + r.getFullYear() + ', this);return false;"') + ">" + (F && !D ? "&#xa0;": L ? '<span class="ui-state-default">' + r.getDate() + "</span>": '<a class="ui-state-default' + (r.getTime() == b.getTime() ? " ui-state-highlight": "") + (r.getTime() == u.getTime() ? " ui-state-active": "") + (F ? " ui-priority-secondary": "") + '" href="#">' + r.getDate() + "</a>") + "</td>";
							r.setDate(r.getDate() + 1);
							r = this._daylightSavingAdjust(r)
						}
						y += R + "</tr>"
					}
					g++;
					if (g > 11) {
						g = 0;
						m++
					}
					y += "</tbody></table>" + (l ? "</div>" + (i[0] > 0 && G == i[1] - 1 ? '<div class="ui-datepicker-row-break"></div>': "") : "");
					O += y
				}
				w += O
			}
			w += e + (d.browser.msie && parseInt(d.browser.version, 10) < 7 && !a.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>': "");
			a._keyEvent = false;
			return w
		},
		_generateMonthYearHeader: function(a, b, c, e, f, h, i, g) {
			var j = this._get(a, "changeMonth"),
			l = this._get(a, "changeYear"),
			u = this._get(a, "showMonthAfterYear"),
			k = '<div class="ui-datepicker-title">',
			o = "";
			if (h || !j) {
				o += '<span class="ui-datepicker-month">' + i[b] + "</span>"
			} else {
				i = e && e.getFullYear() == c;
				var m = f && f.getFullYear() == c;
				o += '<select class="ui-datepicker-month" onchange="DP_jQuery_' + B + ".datepicker._selectMonthYear('#" + a.id + "', this, 'M');\" >";
				for (var n = 0; n < 12; n++) {
					if ((!i || n >= e.getMonth()) && (!m || n <= f.getMonth())) {
						o += '<option value="' + n + '"' + (n == b ? ' selected="selected"': "") + ">" + g[n] + "</option>"
					}
				}
				o += "</select>"
			}
			u || (k += o + (h || !(j && l) ? "&#xa0;": ""));
			if (!a.yearshtml) {
				a.yearshtml = "";
				if (h || !l) {
					k += '<span class="ui-datepicker-year">' + c + "</span>"
				} else {
					g = this._get(a, "yearRange").split(":");
					var s = (new Date).getFullYear();
					i = function(q) {
						q = q.match(/c[+-].*/) ? c + parseInt(q.substring(1), 10) : q.match(/[+-].*/) ? s + parseInt(q, 10) : parseInt(q, 10);
						return isNaN(q) ? s: q
					};
					b = i(g[0]);
					g = Math.max(b, i(g[1] || ""));
					b = e ? Math.max(b, e.getFullYear()) : b;
					g = f ? Math.min(g, f.getFullYear()) : g;
					for (a.yearshtml += '<select class="ui-datepicker-year" onchange="DP_jQuery_' + B + ".datepicker._selectMonthYear('#" + a.id + "', this, 'Y');\" >"; b <= g; b++) {
						a.yearshtml += '<option value="' + b + '"' + (b == c ? ' selected="selected"': "") + ">" + b + "</option>"
					}
					a.yearshtml += "</select>";
					k += a.yearshtml;
					a.yearshtml = null
				}
			}
			k += this._get(a, "yearSuffix");
			if (u) {
				k += (h || !(j && l) ? "&#xa0;": "") + o
			}
			k += "</div>";
			return k
		},
		_adjustInstDate: function(a, b, c) {
			var e = a.drawYear + (c == "Y" ? b: 0),
			f = a.drawMonth + (c == "M" ? b: 0);
			b = Math.min(a.selectedDay, this._getDaysInMonth(e, f)) + (c == "D" ? b: 0);
			e = this._restrictMinMax(a, this._daylightSavingAdjust(new Date(e, f, b)));
			a.selectedDay = e.getDate();
			a.drawMonth = a.selectedMonth = e.getMonth();
			a.drawYear = a.selectedYear = e.getFullYear();
			if (c == "M" || c == "Y") {
				this._notifyChange(a)
			}
		},
		_restrictMinMax: function(a, b) {
			var c = this._getMinMaxDate(a, "min");
			a = this._getMinMaxDate(a, "max");
			b = c && b < c ? c: b;
			return b = a && b > a ? a: b
		},
		_notifyChange: function(a) {
			var b = this._get(a, "onChangeMonthYear");
			if (b) {
				b.apply(a.input ? a.input[0] : null, [a.selectedYear, a.selectedMonth + 1, a])
			}
		},
		_getNumberOfMonths: function(a) {
			a = this._get(a, "numberOfMonths");
			return a == null ? [1, 1] : typeof a == "number" ? [1, a] : a
		},
		_getMinMaxDate: function(a, b) {
			return this._determineDate(a, this._get(a, b + "Date"), null)
		},
		_getDaysInMonth: function(a, b) {
			return 32 - this._daylightSavingAdjust(new Date(a, b, 32)).getDate()
		},
		_getFirstDayOfMonth: function(a, b) {
			return (new Date(a, b, 1)).getDay()
		},
		_canAdjustMonth: function(a, b, c, e) {
			var f = this._getNumberOfMonths(a);
			c = this._daylightSavingAdjust(new Date(c, e + (b < 0 ? b: f[0] * f[1]), 1));
			b < 0 && c.setDate(this._getDaysInMonth(c.getFullYear(), c.getMonth()));
			return this._isInRange(a, c)
		},
		_isInRange: function(a, b) {
			var c = this._getMinMaxDate(a, "min");
			a = this._getMinMaxDate(a, "max");
			return (!c || b.getTime() >= c.getTime()) && (!a || b.getTime() <= a.getTime())
		},
		_getFormatConfig: function(a) {
			var b = this._get(a, "shortYearCutoff");
			b = typeof b != "string" ? b: (new Date).getFullYear() % 100 + parseInt(b, 10);
			return {
				shortYearCutoff: b,
				dayNamesShort: this._get(a, "dayNamesShort"),
				dayNames: this._get(a, "dayNames"),
				monthNamesShort: this._get(a, "monthNamesShort"),
				monthNames: this._get(a, "monthNames")
			}
		},
		_formatDate: function(a, b, c, e) {
			if (!b) {
				a.currentDay = a.selectedDay;
				a.currentMonth = a.selectedMonth;
				a.currentYear = a.selectedYear
			}
			b = b ? typeof b == "object" ? b: this._daylightSavingAdjust(new Date(e, c, b)) : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay));
			return this.formatDate(this._get(a, "dateFormat"), b, this._getFormatConfig(a))
		}
	});
	d.fn.datepicker = function(a) {
		if (!this.length) {
			return this
		}
		if (!d.datepicker.initialized) {
			d(document).mousedown(d.datepicker._checkExternalClick).find("body").append(d.datepicker.dpDiv);
			d.datepicker.initialized = true
		}
		var b = Array.prototype.slice.call(arguments, 1);
		if (typeof a == "string" && (a == "isDisabled" || a == "getDate" || a == "widget")) {
			return d.datepicker["_" + a + "Datepicker"].apply(d.datepicker, [this[0]].concat(b))
		}
		if (a == "option" && arguments.length == 2 && typeof arguments[1] == "string") {
			return d.datepicker["_" + a + "Datepicker"].apply(d.datepicker, [this[0]].concat(b))
		}
		return this.each(function() {
			typeof a == "string" ? d.datepicker["_" + a + "Datepicker"].apply(d.datepicker, [this].concat(b)) : d.datepicker._attachDatepicker(this, a)
		})
	};
	d.datepicker = new M;
	d.datepicker.initialized = false;
	d.datepicker.uuid = (new Date).getTime();
	d.datepicker.version = "1.8.15";
	window["DP_jQuery_" + B] = d
})(jQuery); (function(a, c) {
	a.widget("ui.progressbar", {
		options: {
			value: 0,
			max: 100
		},
		min: 0,
		_create: function() {
			this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
				role: "progressbar",
				"aria-valuemin": this.min,
				"aria-valuemax": this.options.max,
				"aria-valuenow": this._value()
			});
			this.valueDiv = a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);
			this.oldValue = this._value();
			this._refreshValue()
		},
		destroy: function() {
			this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
			this.valueDiv.remove();
			a.Widget.prototype.destroy.apply(this, arguments)
		},
		value: function(b) {
			if (b === c) {
				return this._value()
			}
			this._setOption("value", b);
			return this
		},
		_setOption: function(b, d) {
			if (b === "value") {
				this.options.value = d;
				this._refreshValue();
				this._value() === this.options.max && this._trigger("complete")
			}
			a.Widget.prototype._setOption.apply(this, arguments)
		},
		_value: function() {
			var b = this.options.value;
			if (typeof b !== "number") {
				b = 0
			}
			return Math.min(this.options.max, Math.max(this.min, b))
		},
		_percentage: function() {
			return 100 * this._value() / this.options.max
		},
		_refreshValue: function() {
			var b = this.value(),
			d = this._percentage();
			if (this.oldValue !== b) {
				this.oldValue = b;
				this._trigger("change")
			}
			this.valueDiv.toggle(b > this.min).toggleClass("ui-corner-right", b === this.options.max).width(d.toFixed(0) + "%");
			this.element.attr("aria-valuenow", b)
		}
	});
	a.extend(a.ui.progressbar, {
		version: "1.8.15"
	})
})(jQuery);
jQuery.effects ||
function(r, i) {
	function e(j) {
		var f;
		if (j && j.constructor == Array && j.length == 3) {
			return j
		}
		if (f = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(j)) {
			return [parseInt(f[1], 10), parseInt(f[2], 10), parseInt(f[3], 10)]
		}
		if (f = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(j)) {
			return [parseFloat(f[1]) * 2.55, parseFloat(f[2]) * 2.55, parseFloat(f[3]) * 2.55]
		}
		if (f = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(j)) {
			return [parseInt(f[1], 16), parseInt(f[2], 16), parseInt(f[3], 16)]
		}
		if (f = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(j)) {
			return [parseInt(f[1] + f[1], 16), parseInt(f[2] + f[2], 16), parseInt(f[3] + f[3], 16)]
		}
		if (/rgba\(0, 0, 0, 0\)/.exec(j)) {
			return d.transparent
		}
		return d[r.trim(j).toLowerCase()]
	}
	function x(k, j) {
		var f;
		do {
			f = r.curCSS(k, j);
			if (f != "" && f != "transparent" || r.nodeName(k, "body")) {
				break
			}
			j = "backgroundColor"
		} while ( k = k . parentNode );
		return e(f)
	}
	function c() {
		var m = document.defaultView ? document.defaultView.getComputedStyle(this, null) : this.currentStyle,
		j = {},
		f,
		l;
		if (m && m.length && m[0] && m[m[0]]) {
			for (var k = m.length; k--;) {
				f = m[k];
				if (typeof m[f] == "string") {
					l = f.replace(/\-(\w)/g,
					function(o, n) {
						return n.toUpperCase()
					});
					j[l] = m[f]
				}
			}
		} else {
			for (f in m) {
				if (typeof m[f] === "string") {
					j[f] = m[f]
				}
			}
		}
		return j
	}
	function b(k) {
		var j, f;
		for (j in k) {
			f = k[j];
			if (f == null || r.isFunction(f) || j in w || /scrollbar/.test(j) || !/color/i.test(j) && isNaN(parseFloat(f))) {
				delete k[j]
			}
		}
		return k
	}
	function v(l, j) {
		var f = {
			_: 0
		},
		k;
		for (k in j) {
			if (l[k] != j[k]) {
				f[k] = j[k]
			}
		}
		return f
	}
	function h(l, j, f, k) {
		if (typeof l == "object") {
			k = j;
			f = null;
			j = l;
			l = j.effect
		}
		if (r.isFunction(j)) {
			k = j;
			f = null;
			j = {}
		}
		if (typeof j == "number" || r.fx.speeds[j]) {
			k = f;
			f = j;
			j = {}
		}
		if (r.isFunction(f)) {
			k = f;
			f = null
		}
		j = j || {};
		f = f || j.duration;
		f = r.fx.off ? 0 : typeof f == "number" ? f: f in r.fx.speeds ? r.fx.speeds[f] : r.fx.speeds._default;
		k = k || j.complete;
		return [l, j, f, k]
	}
	function g(f) {
		if (!f || typeof f === "number" || r.fx.speeds[f]) {
			return true
		}
		if (typeof f === "string" && !r.effects[f]) {
			return true
		}
		return false
	}
	r.effects = {};
	r.each(["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "borderColor", "color", "outlineColor"],
	function(j, f) {
		r.fx.step[f] = function(k) {
			if (!k.colorInit) {
				k.start = x(k.elem, f);
				k.end = e(k.end);
				k.colorInit = true
			}
			k.elem.style[f] = "rgb(" + Math.max(Math.min(parseInt(k.pos * (k.end[0] - k.start[0]) + k.start[0], 10), 255), 0) + "," + Math.max(Math.min(parseInt(k.pos * (k.end[1] - k.start[1]) + k.start[1], 10), 255), 0) + "," + Math.max(Math.min(parseInt(k.pos * (k.end[2] - k.start[2]) + k.start[2], 10), 255), 0) + ")"
		}
	});
	var d = {
		aqua: [0, 255, 255],
		azure: [240, 255, 255],
		beige: [245, 245, 220],
		black: [0, 0, 0],
		blue: [0, 0, 255],
		brown: [165, 42, 42],
		cyan: [0, 255, 255],
		darkblue: [0, 0, 139],
		darkcyan: [0, 139, 139],
		darkgrey: [169, 169, 169],
		darkgreen: [0, 100, 0],
		darkkhaki: [189, 183, 107],
		darkmagenta: [139, 0, 139],
		darkolivegreen: [85, 107, 47],
		darkorange: [255, 140, 0],
		darkorchid: [153, 50, 204],
		darkred: [139, 0, 0],
		darksalmon: [233, 150, 122],
		darkviolet: [148, 0, 211],
		fuchsia: [255, 0, 255],
		gold: [255, 215, 0],
		green: [0, 128, 0],
		indigo: [75, 0, 130],
		khaki: [240, 230, 140],
		lightblue: [173, 216, 230],
		lightcyan: [224, 255, 255],
		lightgreen: [144, 238, 144],
		lightgrey: [211, 211, 211],
		lightpink: [255, 182, 193],
		lightyellow: [255, 255, 224],
		lime: [0, 255, 0],
		magenta: [255, 0, 255],
		maroon: [128, 0, 0],
		navy: [0, 0, 128],
		olive: [128, 128, 0],
		orange: [255, 165, 0],
		pink: [255, 192, 203],
		purple: [128, 0, 128],
		violet: [128, 0, 128],
		red: [255, 0, 0],
		silver: [192, 192, 192],
		white: [255, 255, 255],
		yellow: [255, 255, 0],
		transparent: [255, 255, 255]
	},
	a = ["add", "remove", "toggle"],
	w = {
		border: 1,
		borderBottom: 1,
		borderColor: 1,
		borderLeft: 1,
		borderRight: 1,
		borderTop: 1,
		borderWidth: 1,
		margin: 1,
		padding: 1
	};
	r.effects.animateClass = function(l, j, f, k) {
		if (r.isFunction(f)) {
			k = f;
			f = null
		}
		return this.queue(function() {
			var q = r(this),
			p = q.attr("style") || " ",
			n = b(c.call(this)),
			o,
			m = q.attr("class");
			r.each(a,
			function(s, u) {
				l[u] && q[u + "Class"](l[u])
			});
			o = b(c.call(this));
			q.attr("class", m);
			q.animate(v(n, o), {
				queue: false,
				duration: j,
				easing: f,
				complete: function() {
					r.each(a,
					function(s, u) {
						l[u] && q[u + "Class"](l[u])
					});
					if (typeof q.attr("style") == "object") {
						q.attr("style").cssText = "";
						q.attr("style").cssText = p
					} else {
						q.attr("style", p)
					}
					k && k.apply(this, arguments);
					r.dequeue(this)
				}
			})
		})
	};
	r.fn.extend({
		_addClass: r.fn.addClass,
		addClass: function(l, j, f, k) {
			return j ? r.effects.animateClass.apply(this, [{
				add: l
			},
			j, f, k]) : this._addClass(l)
		},
		_removeClass: r.fn.removeClass,
		removeClass: function(l, j, f, k) {
			return j ? r.effects.animateClass.apply(this, [{
				remove: l
			},
			j, f, k]) : this._removeClass(l)
		},
		_toggleClass: r.fn.toggleClass,
		toggleClass: function(m, j, f, l, k) {
			return typeof j == "boolean" || j === i ? f ? r.effects.animateClass.apply(this, [j ? {
				add: m
			}: {
				remove: m
			},
			f, l, k]) : this._toggleClass(m, j) : r.effects.animateClass.apply(this, [{
				toggle: m
			},
			j, f, l])
		},
		switchClass: function(m, j, f, l, k) {
			return r.effects.animateClass.apply(this, [{
				add: j,
				remove: m
			},
			f, l, k])
		}
	});
	r.extend(r.effects, {
		version: "1.8.15",
		save: function(k, j) {
			for (var f = 0; f < j.length; f++) {
				j[f] !== null && k.data("ec.storage." + j[f], k[0].style[j[f]])
			}
		},
		restore: function(k, j) {
			for (var f = 0; f < j.length; f++) {
				j[f] !== null && k.css(j[f], k.data("ec.storage." + j[f]))
			}
		},
		setMode: function(j, f) {
			if (f == "toggle") {
				f = j.is(":hidden") ? "show": "hide"
			}
			return f
		},
		getBaseline: function(k, j) {
			var f;
			switch (k[0]) {
			case "top":
				f = 0;
				break;
			case "middle":
				f = 0.5;
				break;
			case "bottom":
				f = 1;
				break;
			default:
				f = k[0] / j.height
			}
			switch (k[1]) {
			case "left":
				k = 0;
				break;
			case "center":
				k = 0.5;
				break;
			case "right":
				k = 1;
				break;
			default:
				k = k[1] / j.width
			}
			return {
				x: k,
				y: f
			}
		},
		createWrapper: function(k) {
			if (k.parent().is(".ui-effects-wrapper")) {
				return k.parent()
			}
			var j = {
				width: k.outerWidth(true),
				height: k.outerHeight(true),
				"float": k.css("float")
			},
			f = r("<div></div>").addClass("ui-effects-wrapper").css({
				fontSize: "100%",
				background: "transparent",
				border: "none",
				margin: 0,
				padding: 0
			});
			k.wrap(f);
			f = k.parent();
			if (k.css("position") == "static") {
				f.css({
					position: "relative"
				});
				k.css({
					position: "relative"
				})
			} else {
				r.extend(j, {
					position: k.css("position"),
					zIndex: k.css("z-index")
				});
				r.each(["top", "left", "bottom", "right"],
				function(m, l) {
					j[l] = k.css(l);
					if (isNaN(parseInt(j[l], 10))) {
						j[l] = "auto"
					}
				});
				k.css({
					position: "relative",
					top: 0,
					left: 0,
					right: "auto",
					bottom: "auto"
				})
			}
			return f.css(j).show()
		},
		removeWrapper: function(f) {
			if (f.parent().is(".ui-effects-wrapper")) {
				return f.parent().replaceWith(f)
			}
			return f
		},
		setTransition: function(l, j, f, k) {
			k = k || {};
			r.each(j,
			function(n, m) {
				unit = l.cssUnit(m);
				if (unit[0] > 0) {
					k[m] = unit[0] * f + unit[1]
				}
			});
			return k
		}
	});
	r.fn.extend({
		effect: function(l) {
			var j = h.apply(this, arguments),
			f = {
				options: j[1],
				duration: j[2],
				callback: j[3]
			};
			j = f.options.mode;
			var k = r.effects[l];
			if (r.fx.off || !k) {
				return j ? this[j](f.duration, f.callback) : this.each(function() {
					f.callback && f.callback.call(this)
				})
			}
			return k.call(this, f)
		},
		_show: r.fn.show,
		show: function(j) {
			if (g(j)) {
				return this._show.apply(this, arguments)
			} else {
				var f = h.apply(this, arguments);
				f[1].mode = "show";
				return this.effect.apply(this, f)
			}
		},
		_hide: r.fn.hide,
		hide: function(j) {
			if (g(j)) {
				return this._hide.apply(this, arguments)
			} else {
				var f = h.apply(this, arguments);
				f[1].mode = "hide";
				return this.effect.apply(this, f)
			}
		},
		__toggle: r.fn.toggle,
		toggle: function(j) {
			if (g(j) || typeof j === "boolean" || r.isFunction(j)) {
				return this.__toggle.apply(this, arguments)
			} else {
				var f = h.apply(this, arguments);
				f[1].mode = "toggle";
				return this.effect.apply(this, f)
			}
		},
		cssUnit: function(k) {
			var j = this.css(k),
			f = [];
			r.each(["em", "px", "%", "pt"],
			function(m, l) {
				if (j.indexOf(l) > 0) {
					f = [parseFloat(j), l]
				}
			});
			return f
		}
	});
	r.easing.jswing = r.easing.swing;
	r.extend(r.easing, {
		def: "easeOutQuad",
		swing: function(m, j, f, l, k) {
			return r.easing[r.easing.def](m, j, f, l, k)
		},
		easeInQuad: function(m, j, f, l, k) {
			return l * (j /= k) * j + f
		},
		easeOutQuad: function(m, j, f, l, k) {
			return - l * (j /= k) * (j - 2) + f
		},
		easeInOutQuad: function(m, j, f, l, k) {
			if ((j /= k / 2) < 1) {
				return l / 2 * j * j + f
			}
			return - l / 2 * (--j * (j - 2) - 1) + f
		},
		easeInCubic: function(m, j, f, l, k) {
			return l * (j /= k) * j * j + f
		},
		easeOutCubic: function(m, j, f, l, k) {
			return l * ((j = j / k - 1) * j * j + 1) + f
		},
		easeInOutCubic: function(m, j, f, l, k) {
			if ((j /= k / 2) < 1) {
				return l / 2 * j * j * j + f
			}
			return l / 2 * ((j -= 2) * j * j + 2) + f
		},
		easeInQuart: function(m, j, f, l, k) {
			return l * (j /= k) * j * j * j + f
		},
		easeOutQuart: function(m, j, f, l, k) {
			return - l * ((j = j / k - 1) * j * j * j - 1) + f
		},
		easeInOutQuart: function(m, j, f, l, k) {
			if ((j /= k / 2) < 1) {
				return l / 2 * j * j * j * j + f
			}
			return - l / 2 * ((j -= 2) * j * j * j - 2) + f
		},
		easeInQuint: function(m, j, f, l, k) {
			return l * (j /= k) * j * j * j * j + f
		},
		easeOutQuint: function(m, j, f, l, k) {
			return l * ((j = j / k - 1) * j * j * j * j + 1) + f
		},
		easeInOutQuint: function(m, j, f, l, k) {
			if ((j /= k / 2) < 1) {
				return l / 2 * j * j * j * j * j + f
			}
			return l / 2 * ((j -= 2) * j * j * j * j + 2) + f
		},
		easeInSine: function(m, j, f, l, k) {
			return - l * Math.cos(j / k * (Math.PI / 2)) + l + f
		},
		easeOutSine: function(m, j, f, l, k) {
			return l * Math.sin(j / k * (Math.PI / 2)) + f
		},
		easeInOutSine: function(m, j, f, l, k) {
			return - l / 2 * (Math.cos(Math.PI * j / k) - 1) + f
		},
		easeInExpo: function(m, j, f, l, k) {
			return j == 0 ? f: l * Math.pow(2, 10 * (j / k - 1)) + f
		},
		easeOutExpo: function(m, j, f, l, k) {
			return j == k ? f + l: l * ( - Math.pow(2, -10 * j / k) + 1) + f
		},
		easeInOutExpo: function(m, j, f, l, k) {
			if (j == 0) {
				return f
			}
			if (j == k) {
				return f + l
			}
			if ((j /= k / 2) < 1) {
				return l / 2 * Math.pow(2, 10 * (j - 1)) + f
			}
			return l / 2 * ( - Math.pow(2, -10 * --j) + 2) + f
		},
		easeInCirc: function(m, j, f, l, k) {
			return - l * (Math.sqrt(1 - (j /= k) * j) - 1) + f
		},
		easeOutCirc: function(m, j, f, l, k) {
			return l * Math.sqrt(1 - (j = j / k - 1) * j) + f
		},
		easeInOutCirc: function(m, j, f, l, k) {
			if ((j /= k / 2) < 1) {
				return - l / 2 * (Math.sqrt(1 - j * j) - 1) + f
			}
			return l / 2 * (Math.sqrt(1 - (j -= 2) * j) + 1) + f
		},
		easeInElastic: function(o, j, f, n, m) {
			o = 1.70158;
			var l = 0,
			k = n;
			if (j == 0) {
				return f
			}
			if ((j /= m) == 1) {
				return f + n
			}
			l || (l = m * 0.3);
			if (k < Math.abs(n)) {
				k = n;
				o = l / 4
			} else {
				o = l / (2 * Math.PI) * Math.asin(n / k)
			}
			return - (k * Math.pow(2, 10 * (j -= 1)) * Math.sin((j * m - o) * 2 * Math.PI / l)) + f
		},
		easeOutElastic: function(o, j, f, n, m) {
			o = 1.70158;
			var l = 0,
			k = n;
			if (j == 0) {
				return f
			}
			if ((j /= m) == 1) {
				return f + n
			}
			l || (l = m * 0.3);
			if (k < Math.abs(n)) {
				k = n;
				o = l / 4
			} else {
				o = l / (2 * Math.PI) * Math.asin(n / k)
			}
			return k * Math.pow(2, -10 * j) * Math.sin((j * m - o) * 2 * Math.PI / l) + n + f
		},
		easeInOutElastic: function(o, j, f, n, m) {
			o = 1.70158;
			var l = 0,
			k = n;
			if (j == 0) {
				return f
			}
			if ((j /= m / 2) == 2) {
				return f + n
			}
			l || (l = m * 0.3 * 1.5);
			if (k < Math.abs(n)) {
				k = n;
				o = l / 4
			} else {
				o = l / (2 * Math.PI) * Math.asin(n / k)
			}
			if (j < 1) {
				return - 0.5 * k * Math.pow(2, 10 * (j -= 1)) * Math.sin((j * m - o) * 2 * Math.PI / l) + f
			}
			return k * Math.pow(2, -10 * (j -= 1)) * Math.sin((j * m - o) * 2 * Math.PI / l) * 0.5 + n + f
		},
		easeInBack: function(n, j, f, m, l, k) {
			if (k == i) {
				k = 1.70158
			}
			return m * (j /= l) * j * ((k + 1) * j - k) + f
		},
		easeOutBack: function(n, j, f, m, l, k) {
			if (k == i) {
				k = 1.70158
			}
			return m * ((j = j / l - 1) * j * ((k + 1) * j + k) + 1) + f
		},
		easeInOutBack: function(n, j, f, m, l, k) {
			if (k == i) {
				k = 1.70158
			}
			if ((j /= l / 2) < 1) {
				return m / 2 * j * j * (((k *= 1.525) + 1) * j - k) + f
			}
			return m / 2 * ((j -= 2) * j * (((k *= 1.525) + 1) * j + k) + 2) + f
		},
		easeInBounce: function(m, j, f, l, k) {
			return l - r.easing.easeOutBounce(m, k - j, 0, l, k) + f
		},
		easeOutBounce: function(m, j, f, l, k) {
			return (j /= k) < 1 / 2.75 ? l * 7.5625 * j * j + f: j < 2 / 2.75 ? l * (7.5625 * (j -= 1.5 / 2.75) * j + 0.75) + f: j < 2.5 / 2.75 ? l * (7.5625 * (j -= 2.25 / 2.75) * j + 0.9375) + f: l * (7.5625 * (j -= 2.625 / 2.75) * j + 0.984375) + f
		},
		easeInOutBounce: function(m, j, f, l, k) {
			if (j < k / 2) {
				return r.easing.easeInBounce(m, j * 2, 0, l, k) * 0.5 + f
			}
			return r.easing.easeOutBounce(m, j * 2 - k, 0, l, k) * 0.5 + l * 0.5 + f
		}
	})
} (jQuery); (function(a) {
	a.effects.blind = function(b) {
		return this.queue(function() {
			var c = a(this),
			l = ["position", "top", "bottom", "left", "right"],
			m = a.effects.setMode(c, b.options.mode || "hide"),
			o = b.options.direction || "vertical";
			a.effects.save(c, l);
			c.show();
			var n = a.effects.createWrapper(c).css({
				overflow: "hidden"
			}),
			k = o == "vertical" ? "height": "width";
			o = o == "vertical" ? n.height() : n.width();
			m == "show" && n.css(k, 0);
			var j = {};
			j[k] = m == "show" ? o: 0;
			n.animate(j, b.duration, b.options.easing,
			function() {
				m == "hide" && c.hide();
				a.effects.restore(c, l);
				a.effects.removeWrapper(c);
				b.callback && b.callback.apply(c[0], arguments);
				c.dequeue()
			})
		})
	}
})(jQuery); (function(a) {
	a.effects.bounce = function(c) {
		return this.queue(function() {
			var w = a(this),
			e = ["position", "top", "bottom", "left", "right"],
			q = a.effects.setMode(w, c.options.mode || "effect"),
			u = c.options.direction || "up",
			v = c.options.distance || 20,
			b = c.options.times || 5,
			p = c.duration || 250;
			/show|hide/.test(q) && e.push("opacity");
			a.effects.save(w, e);
			w.show();
			a.effects.createWrapper(w);
			var s = u == "up" || u == "down" ? "top": "left";
			u = u == "up" || u == "left" ? "pos": "neg";
			v = c.options.distance || (s == "top" ? w.outerHeight({
				margin: true
			}) / 3 : w.outerWidth({
				margin: true
			}) / 3);
			if (q == "show") {
				w.css("opacity", 0).css(s, u == "pos" ? -v: v)
			}
			if (q == "hide") {
				v /= b * 2
			}
			q != "hide" && b--;
			if (q == "show") {
				var r = {
					opacity: 1
				};
				r[s] = (u == "pos" ? "+=": "-=") + v;
				w.animate(r, p / 2, c.options.easing);
				v /= 2;
				b--
			}
			for (r = 0; r < b; r++) {
				var o = {},
				n = {};
				o[s] = (u == "pos" ? "-=": "+=") + v;
				n[s] = (u == "pos" ? "+=": "-=") + v;
				w.animate(o, p / 2, c.options.easing).animate(n, p / 2, c.options.easing);
				v = q == "hide" ? v * 2 : v / 2
			}
			if (q == "hide") {
				r = {
					opacity: 0
				};
				r[s] = (u == "pos" ? "-=": "+=") + v;
				w.animate(r, p / 2, c.options.easing,
				function() {
					w.hide();
					a.effects.restore(w, e);
					a.effects.removeWrapper(w);
					c.callback && c.callback.apply(this, arguments)
				})
			} else {
				o = {};
				n = {};
				o[s] = (u == "pos" ? "-=": "+=") + v;
				n[s] = (u == "pos" ? "+=": "-=") + v;
				w.animate(o, p / 2, c.options.easing).animate(n, p / 2, c.options.easing,
				function() {
					a.effects.restore(w, e);
					a.effects.removeWrapper(w);
					c.callback && c.callback.apply(this, arguments)
				})
			}
			w.queue("fx",
			function() {
				w.dequeue()
			});
			w.dequeue()
		})
	}
})(jQuery); (function(a) {
	a.effects.clip = function(b) {
		return this.queue(function() {
			var e = a(this),
			j = ["position", "top", "bottom", "left", "right", "height", "width"],
			m = a.effects.setMode(e, b.options.mode || "hide"),
			o = b.options.direction || "vertical";
			a.effects.save(e, j);
			e.show();
			var n = a.effects.createWrapper(e).css({
				overflow: "hidden"
			});
			n = e[0].tagName == "IMG" ? n: e;
			var l = {
				size: o == "vertical" ? "height": "width",
				position: o == "vertical" ? "top": "left"
			};
			o = o == "vertical" ? n.height() : n.width();
			if (m == "show") {
				n.css(l.size, 0);
				n.css(l.position, o / 2)
			}
			var k = {};
			k[l.size] = m == "show" ? o: 0;
			k[l.position] = m == "show" ? 0 : o / 2;
			n.animate(k, {
				queue: false,
				duration: b.duration,
				easing: b.options.easing,
				complete: function() {
					m == "hide" && e.hide();
					a.effects.restore(e, j);
					a.effects.removeWrapper(e);
					b.callback && b.callback.apply(e[0], arguments);
					e.dequeue()
				}
			})
		})
	}
})(jQuery); (function(a) {
	a.effects.drop = function(b) {
		return this.queue(function() {
			var d = a(this),
			k = ["position", "top", "bottom", "left", "right", "opacity"],
			n = a.effects.setMode(d, b.options.mode || "hide"),
			c = b.options.direction || "left";
			a.effects.save(d, k);
			d.show();
			a.effects.createWrapper(d);
			var m = c == "up" || c == "down" ? "top": "left";
			c = c == "up" || c == "left" ? "pos": "neg";
			var l = b.options.distance || (m == "top" ? d.outerHeight({
				margin: true
			}) / 2 : d.outerWidth({
				margin: true
			}) / 2);
			if (n == "show") {
				d.css("opacity", 0).css(m, c == "pos" ? -l: l)
			}
			var j = {
				opacity: n == "show" ? 1 : 0
			};
			j[m] = (n == "show" ? c == "pos" ? "+=": "-=": c == "pos" ? "-=": "+=") + l;
			d.animate(j, {
				queue: false,
				duration: b.duration,
				easing: b.options.easing,
				complete: function() {
					n == "hide" && d.hide();
					a.effects.restore(d, k);
					a.effects.removeWrapper(d);
					b.callback && b.callback.apply(this, arguments);
					d.dequeue()
				}
			})
		})
	}
})(jQuery); (function(a) {
	a.effects.explode = function(b) {
		return this.queue(function() {
			var q = b.options.pieces ? Math.round(Math.sqrt(b.options.pieces)) : 3,
			p = b.options.pieces ? Math.round(Math.sqrt(b.options.pieces)) : 3;
			b.options.mode = b.options.mode == "toggle" ? a(this).is(":visible") ? "hide": "show": b.options.mode;
			var j = a(this).show().css("visibility", "hidden"),
			m = j.offset();
			m.top -= parseInt(j.css("marginTop"), 10) || 0;
			m.left -= parseInt(j.css("marginLeft"), 10) || 0;
			for (var l = j.outerWidth(true), k = j.outerHeight(true), o = 0; o < q; o++) {
				for (var n = 0; n < p; n++) {
					j.clone().appendTo("body").wrap("<div></div>").css({
						position: "absolute",
						visibility: "visible",
						left: -n * (l / p),
						top: -o * (k / q)
					}).parent().addClass("ui-effects-explode").css({
						position: "absolute",
						overflow: "hidden",
						width: l / p,
						height: k / q,
						left: m.left + n * (l / p) + (b.options.mode == "show" ? (n - Math.floor(p / 2)) * (l / p) : 0),
						top: m.top + o * (k / q) + (b.options.mode == "show" ? (o - Math.floor(q / 2)) * (k / q) : 0),
						opacity: b.options.mode == "show" ? 0 : 1
					}).animate({
						left: m.left + n * (l / p) + (b.options.mode == "show" ? 0 : (n - Math.floor(p / 2)) * (l / p)),
						top: m.top + o * (k / q) + (b.options.mode == "show" ? 0 : (o - Math.floor(q / 2)) * (k / q)),
						opacity: b.options.mode == "show" ? 1 : 0
					},
					b.duration || 500)
				}
			}
			setTimeout(function() {
				b.options.mode == "show" ? j.css({
					visibility: "visible"
				}) : j.css({
					visibility: "visible"
				}).hide();
				b.callback && b.callback.apply(j[0]);
				j.dequeue();
				a("div.ui-effects-explode").remove()
			},
			b.duration || 500)
		})
	}
})(jQuery); (function(a) {
	a.effects.fade = function(b) {
		return this.queue(function() {
			var f = a(this),
			e = a.effects.setMode(f, b.options.mode || "hide");
			f.animate({
				opacity: e
			},
			{
				queue: false,
				duration: b.duration,
				easing: b.options.easing,
				complete: function() {
					b.callback && b.callback.apply(this, arguments);
					f.dequeue()
				}
			})
		})
	}
})(jQuery); (function(a) {
	a.effects.fold = function(b) {
		return this.queue(function() {
			var v = a(this),
			n = ["position", "top", "bottom", "left", "right"],
			u = a.effects.setMode(v, b.options.mode || "hide"),
			q = b.options.size || 15,
			p = !!b.options.horizFirst,
			m = b.duration ? b.duration / 2 : a.fx.speeds._default / 2;
			a.effects.save(v, n);
			v.show();
			var s = a.effects.createWrapper(v).css({
				overflow: "hidden"
			}),
			r = u == "show" != p,
			c = r ? ["width", "height"] : ["height", "width"];
			r = r ? [s.width(), s.height()] : [s.height(), s.width()];
			var o = /([0-9]+)%/.exec(q);
			if (o) {
				q = parseInt(o[1], 10) / 100 * r[u == "hide" ? 0 : 1]
			}
			if (u == "show") {
				s.css(p ? {
					height: 0,
					width: q
				}: {
					height: q,
					width: 0
				})
			}
			p = {};
			o = {};
			p[c[0]] = u == "show" ? r[0] : q;
			o[c[1]] = u == "show" ? r[1] : 0;
			s.animate(p, m, b.options.easing).animate(o, m, b.options.easing,
			function() {
				u == "hide" && v.hide();
				a.effects.restore(v, n);
				a.effects.removeWrapper(v);
				b.callback && b.callback.apply(v[0], arguments);
				v.dequeue()
			})
		})
	}
})(jQuery); (function(a) {
	a.effects.highlight = function(b) {
		return this.queue(function() {
			var c = a(this),
			h = ["backgroundImage", "backgroundColor", "opacity"],
			i = a.effects.setMode(c, b.options.mode || "show"),
			g = {
				backgroundColor: c.css("backgroundColor")
			};
			if (i == "hide") {
				g.opacity = 0
			}
			a.effects.save(c, h);
			c.show().css({
				backgroundImage: "none",
				backgroundColor: b.options.color || "#ffff99"
			}).animate(g, {
				queue: false,
				duration: b.duration,
				easing: b.options.easing,
				complete: function() {
					i == "hide" && c.hide();
					a.effects.restore(c, h);
					i == "show" && !a.support.opacity && this.style.removeAttribute("filter");
					b.callback && b.callback.apply(this, arguments);
					c.dequeue()
				}
			})
		})
	}
})(jQuery); (function(a) {
	a.effects.pulsate = function(b) {
		return this.queue(function() {
			var d = a(this),
			e = a.effects.setMode(d, b.options.mode || "show");
			times = (b.options.times || 5) * 2 - 1;
			duration = b.duration ? b.duration / 2 : a.fx.speeds._default / 2;
			isVisible = d.is(":visible");
			animateTo = 0;
			if (!isVisible) {
				d.css("opacity", 0).show();
				animateTo = 1
			}
			if (e == "hide" && isVisible || e == "show" && !isVisible) {
				times--
			}
			for (e = 0; e < times; e++) {
				d.animate({
					opacity: animateTo
				},
				duration, b.options.easing);
				animateTo = (animateTo + 1) % 2
			}
			d.animate({
				opacity: animateTo
			},
			duration, b.options.easing,
			function() {
				animateTo == 0 && d.hide();
				b.callback && b.callback.apply(this, arguments)
			});
			d.queue("fx",
			function() {
				d.dequeue()
			}).dequeue()
		})
	}
})(jQuery); (function(a) {
	a.effects.puff = function(c) {
		return this.queue(function() {
			var b = a(this),
			k = a.effects.setMode(b, c.options.mode || "hide"),
			j = parseInt(c.options.percent, 10) || 150,
			f = j / 100,
			d = {
				height: b.height(),
				width: b.width()
			};
			a.extend(c.options, {
				fade: true,
				mode: k,
				percent: k == "hide" ? j: 100,
				from: k == "hide" ? d: {
					height: d.height * f,
					width: d.width * f
				}
			});
			b.effect("scale", c.options, c.duration, c.callback);
			b.dequeue()
		})
	};
	a.effects.scale = function(c) {
		return this.queue(function() {
			var b = a(this),
			m = a.extend(true, {},
			c.options),
			k = a.effects.setMode(b, c.options.mode || "effect"),
			j = parseInt(c.options.percent, 10) || (parseInt(c.options.percent, 10) == 0 ? 0 : k == "hide" ? 0 : 100),
			d = c.options.direction || "both",
			l = c.options.origin;
			if (k != "effect") {
				m.origin = l || ["middle", "center"];
				m.restore = true
			}
			l = {
				height: b.height(),
				width: b.width()
			};
			b.from = c.options.from || (k == "show" ? {
				height: 0,
				width: 0
			}: l);
			j = {
				y: d != "horizontal" ? j / 100 : 1,
				x: d != "vertical" ? j / 100 : 1
			};
			b.to = {
				height: l.height * j.y,
				width: l.width * j.x
			};
			if (c.options.fade) {
				if (k == "show") {
					b.from.opacity = 0;
					b.to.opacity = 1
				}
				if (k == "hide") {
					b.from.opacity = 1;
					b.to.opacity = 0
				}
			}
			m.from = b.from;
			m.to = b.to;
			m.mode = k;
			b.effect("size", m, c.duration, c.callback);
			b.dequeue()
		})
	};
	a.effects.size = function(c) {
		return this.queue(function() {
			var B = a(this),
			z = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],
			x = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],
			w = ["width", "height", "overflow"],
			v = ["fontSize"],
			y = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
			s = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],
			b = a.effects.setMode(B, c.options.mode || "effect"),
			o = c.options.restore || false,
			q = c.options.scale || "both",
			r = c.options.origin,
			u = {
				height: B.height(),
				width: B.width()
			};
			B.from = c.options.from || u;
			B.to = c.options.to || u;
			if (r) {
				r = a.effects.getBaseline(r, u);
				B.from.top = (u.height - B.from.height) * r.y;
				B.from.left = (u.width - B.from.width) * r.x;
				B.to.top = (u.height - B.to.height) * r.y;
				B.to.left = (u.width - B.to.width) * r.x
			}
			var A = {
				from: {
					y: B.from.height / u.height,
					x: B.from.width / u.width
				},
				to: {
					y: B.to.height / u.height,
					x: B.to.width / u.width
				}
			};
			if (q == "box" || q == "both") {
				if (A.from.y != A.to.y) {
					z = z.concat(y);
					B.from = a.effects.setTransition(B, y, A.from.y, B.from);
					B.to = a.effects.setTransition(B, y, A.to.y, B.to)
				}
				if (A.from.x != A.to.x) {
					z = z.concat(s);
					B.from = a.effects.setTransition(B, s, A.from.x, B.from);
					B.to = a.effects.setTransition(B, s, A.to.x, B.to)
				}
			}
			if (q == "content" || q == "both") {
				if (A.from.y != A.to.y) {
					z = z.concat(v);
					B.from = a.effects.setTransition(B, v, A.from.y, B.from);
					B.to = a.effects.setTransition(B, v, A.to.y, B.to)
				}
			}
			a.effects.save(B, o ? z: x);
			B.show();
			a.effects.createWrapper(B);
			B.css("overflow", "hidden").css(B.from);
			if (q == "content" || q == "both") {
				y = y.concat(["marginTop", "marginBottom"]).concat(v);
				s = s.concat(["marginLeft", "marginRight"]);
				w = z.concat(y).concat(s);
				B.find("*[width]").each(function() {
					child = a(this);
					o && a.effects.save(child, w);
					var d = {
						height: child.height(),
						width: child.width()
					};
					child.from = {
						height: d.height * A.from.y,
						width: d.width * A.from.x
					};
					child.to = {
						height: d.height * A.to.y,
						width: d.width * A.to.x
					};
					if (A.from.y != A.to.y) {
						child.from = a.effects.setTransition(child, y, A.from.y, child.from);
						child.to = a.effects.setTransition(child, y, A.to.y, child.to)
					}
					if (A.from.x != A.to.x) {
						child.from = a.effects.setTransition(child, s, A.from.x, child.from);
						child.to = a.effects.setTransition(child, s, A.to.x, child.to)
					}
					child.css(child.from);
					child.animate(child.to, c.duration, c.options.easing,
					function() {
						o && a.effects.restore(child, w)
					})
				})
			}
			B.animate(B.to, {
				queue: false,
				duration: c.duration,
				easing: c.options.easing,
				complete: function() {
					B.to.opacity === 0 && B.css("opacity", B.from.opacity);
					b == "hide" && B.hide();
					a.effects.restore(B, o ? z: x);
					a.effects.removeWrapper(B);
					c.callback && c.callback.apply(this, arguments);
					B.dequeue()
				}
			})
		})
	}
})(jQuery); (function(a) {
	a.effects.shake = function(b) {
		return this.queue(function() {
			var v = a(this),
			n = ["position", "top", "bottom", "left", "right"];
			a.effects.setMode(v, b.options.mode || "effect");
			var u = b.options.direction || "left",
			s = b.options.distance || 20,
			d = b.options.times || 3,
			r = b.duration || b.options.duration || 140;
			a.effects.save(v, n);
			v.show();
			a.effects.createWrapper(v);
			var q = u == "up" || u == "down" ? "top": "left",
			p = u == "up" || u == "left" ? "pos": "neg";
			u = {};
			var o = {},
			m = {};
			u[q] = (p == "pos" ? "-=": "+=") + s;
			o[q] = (p == "pos" ? "+=": "-=") + s * 2;
			m[q] = (p == "pos" ? "-=": "+=") + s * 2;
			v.animate(u, r, b.options.easing);
			for (s = 1; s < d; s++) {
				v.animate(o, r, b.options.easing).animate(m, r, b.options.easing)
			}
			v.animate(o, r, b.options.easing).animate(u, r / 2, b.options.easing,
			function() {
				a.effects.restore(v, n);
				a.effects.removeWrapper(v);
				b.callback && b.callback.apply(this, arguments)
			});
			v.queue("fx",
			function() {
				v.dequeue()
			});
			v.dequeue()
		})
	}
})(jQuery); (function(a) {
	a.effects.slide = function(b) {
		return this.queue(function() {
			var d = a(this),
			k = ["position", "top", "bottom", "left", "right"],
			m = a.effects.setMode(d, b.options.mode || "show"),
			c = b.options.direction || "left";
			a.effects.save(d, k);
			d.show();
			a.effects.createWrapper(d).css({
				overflow: "hidden"
			});
			var l = c == "up" || c == "down" ? "top": "left";
			c = c == "up" || c == "left" ? "pos": "neg";
			var n = b.options.distance || (l == "top" ? d.outerHeight({
				margin: true
			}) : d.outerWidth({
				margin: true
			}));
			if (m == "show") {
				d.css(l, c == "pos" ? isNaN(n) ? "-" + n: -n: n)
			}
			var j = {};
			j[l] = (m == "show" ? c == "pos" ? "+=": "-=": c == "pos" ? "-=": "+=") + n;
			d.animate(j, {
				queue: false,
				duration: b.duration,
				easing: b.options.easing,
				complete: function() {
					m == "hide" && d.hide();
					a.effects.restore(d, k);
					a.effects.removeWrapper(d);
					b.callback && b.callback.apply(this, arguments);
					d.dequeue()
				}
			})
		})
	}
})(jQuery); (function(a) {
	a.effects.transfer = function(b) {
		return this.queue(function() {
			var e = a(this),
			i = a(b.options.to),
			h = i.offset();
			i = {
				top: h.top,
				left: h.left,
				height: i.innerHeight(),
				width: i.innerWidth()
			};
			h = e.offset();
			var g = a('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(b.options.className).css({
				top: h.top,
				left: h.left,
				height: e.innerHeight(),
				width: e.innerWidth(),
				position: "absolute"
			}).animate(i, b.duration, b.options.easing,
			function() {
				g.remove();
				b.callback && b.callback.apply(e[0], arguments);
				e.dequeue()
			})
		})
	}
})(jQuery); (function($, window, document) {
	$.fn.dataTableSettings = [];
	var _aoSettings = $.fn.dataTableSettings;
	$.fn.dataTableExt = {};
	var _oExt = $.fn.dataTableExt;
	_oExt.sVersion = "1.8.1";
	_oExt.sErrMode = "alert";
	_oExt.iApiIndex = 0;
	_oExt.oApi = {};
	_oExt.afnFiltering = [];
	_oExt.aoFeatures = [];
	_oExt.ofnSearch = {};
	_oExt.afnSortData = [];
	_oExt.oStdClasses = {
		sPagePrevEnabled: "paginate_enabled_previous",
		sPagePrevDisabled: "paginate_disabled_previous",
		sPageNextEnabled: "paginate_enabled_next",
		sPageNextDisabled: "paginate_disabled_next",
		sPageJUINext: "",
		sPageJUIPrev: "",
		sPageButton: "paginate_button",
		sPageButtonActive: "paginate_active",
		sPageButtonStaticDisabled: "paginate_button paginate_button_disabled",
		sPageFirst: "first",
		sPagePrevious: "previous",
		sPageNext: "next",
		sPageLast: "last",
		sStripOdd: "odd",
		sStripEven: "even",
		sRowEmpty: "dataTables_empty",
		sWrapper: "dataTables_wrapper",
		sFilter: "dataTables_filter",
		sInfo: "dataTables_info",
		sPaging: "dataTables_paginate paging_",
		sLength: "dataTables_length",
		sProcessing: "dataTables_processing",
		sSortAsc: "sorting_asc",
		sSortDesc: "sorting_desc",
		sSortable: "sorting",
		sSortableAsc: "sorting_asc_disabled",
		sSortableDesc: "sorting_desc_disabled",
		sSortableNone: "sorting_disabled",
		sSortColumn: "sorting_",
		sSortJUIAsc: "",
		sSortJUIDesc: "",
		sSortJUI: "",
		sSortJUIAscAllowed: "",
		sSortJUIDescAllowed: "",
		sSortJUIWrapper: "",
		sSortIcon: "",
		sScrollWrapper: "dataTables_scroll",
		sScrollHead: "dataTables_scrollHead",
		sScrollHeadInner: "dataTables_scrollHeadInner",
		sScrollBody: "dataTables_scrollBody",
		sScrollFoot: "dataTables_scrollFoot",
		sScrollFootInner: "dataTables_scrollFootInner",
		sFooterTH: ""
	};
	_oExt.oJUIClasses = {
		sPagePrevEnabled: "fg-button ui-button ui-state-default ui-corner-left",
		sPagePrevDisabled: "fg-button ui-button ui-state-default ui-corner-left ui-state-disabled",
		sPageNextEnabled: "fg-button ui-button ui-state-default ui-corner-right",
		sPageNextDisabled: "fg-button ui-button ui-state-default ui-corner-right ui-state-disabled",
		sPageJUINext: "ui-icon ui-icon-circle-arrow-e",
		sPageJUIPrev: "ui-icon ui-icon-circle-arrow-w",
		sPageButton: "fg-button ui-button ui-state-default",
		sPageButtonActive: "fg-button ui-button ui-state-default ui-state-disabled",
		sPageButtonStaticDisabled: "fg-button ui-button ui-state-default ui-state-disabled",
		sPageFirst: "first ui-corner-tl ui-corner-bl",
		sPagePrevious: "previous",
		sPageNext: "next",
		sPageLast: "last ui-corner-tr ui-corner-br",
		sStripOdd: "odd",
		sStripEven: "even",
		sRowEmpty: "dataTables_empty",
		sWrapper: "dataTables_wrapper",
		sFilter: "dataTables_filter",
		sInfo: "dataTables_info",
		sPaging: "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",
		sLength: "dataTables_length",
		sProcessing: "dataTables_processing",
		sSortAsc: "ui-state-default",
		sSortDesc: "ui-state-default",
		sSortable: "ui-state-default",
		sSortableAsc: "ui-state-default",
		sSortableDesc: "ui-state-default",
		sSortableNone: "ui-state-default",
		sSortColumn: "sorting_",
		sSortJUIAsc: "css_right ui-icon ui-icon-triangle-1-n",
		sSortJUIDesc: "css_right ui-icon ui-icon-triangle-1-s",
		sSortJUI: "css_right ui-icon ui-icon-carat-2-n-s",
		sSortJUIAscAllowed: "css_right ui-icon ui-icon-carat-1-n",
		sSortJUIDescAllowed: "css_right ui-icon ui-icon-carat-1-s",
		sSortJUIWrapper: "DataTables_sort_wrapper",
		sSortIcon: "DataTables_sort_icon",
		sScrollWrapper: "dataTables_scroll",
		sScrollHead: "dataTables_scrollHead ui-state-default",
		sScrollHeadInner: "dataTables_scrollHeadInner",
		sScrollBody: "dataTables_scrollBody",
		sScrollFoot: "dataTables_scrollFoot ui-state-default",
		sScrollFootInner: "dataTables_scrollFootInner",
		sFooterTH: "ui-state-default"
	};
	_oExt.oPagination = {
		two_button: {
			fnInit: function(oSettings, nPaging, fnCallbackDraw) {
				var nPrevious, nNext, nPreviousInner, nNextInner;
				if (!oSettings.bJUI) {
					nPrevious = document.createElement("div");
					nNext = document.createElement("div")
				} else {
					nPrevious = document.createElement("a");
					nNext = document.createElement("a");
					nNextInner = document.createElement("span");
					nNextInner.className = oSettings.oClasses.sPageJUINext;
					nNext.appendChild(nNextInner);
					nPreviousInner = document.createElement("span");
					nPreviousInner.className = oSettings.oClasses.sPageJUIPrev;
					nPrevious.appendChild(nPreviousInner)
				}
				nPrevious.className = oSettings.oClasses.sPagePrevDisabled;
				nNext.className = oSettings.oClasses.sPageNextDisabled;
				nPrevious.title = oSettings.oLanguage.oPaginate.sPrevious;
				nNext.title = oSettings.oLanguage.oPaginate.sNext;
				nPaging.appendChild(nPrevious);
				nPaging.appendChild(nNext);
				$(nPrevious).bind("click.DT",
				function() {
					if (oSettings.oApi._fnPageChange(oSettings, "previous")) {
						fnCallbackDraw(oSettings)
					}
				});
				$(nNext).bind("click.DT",
				function() {
					if (oSettings.oApi._fnPageChange(oSettings, "next")) {
						fnCallbackDraw(oSettings)
					}
				});
				$(nPrevious).bind("selectstart.DT",
				function() {
					return false
				});
				$(nNext).bind("selectstart.DT",
				function() {
					return false
				});
				if (oSettings.sTableId !== "" && typeof oSettings.aanFeatures.p == "undefined") {
					nPaging.setAttribute("id", oSettings.sTableId + "_paginate");
					nPrevious.setAttribute("id", oSettings.sTableId + "_previous");
					nNext.setAttribute("id", oSettings.sTableId + "_next")
				}
			},
			fnUpdate: function(oSettings, fnCallbackDraw) {
				if (!oSettings.aanFeatures.p) {
					return
				}
				var an = oSettings.aanFeatures.p;
				for (var i = 0,
				iLen = an.length; i < iLen; i++) {
					if (an[i].childNodes.length !== 0) {
						an[i].childNodes[0].className = (oSettings._iDisplayStart === 0) ? oSettings.oClasses.sPagePrevDisabled: oSettings.oClasses.sPagePrevEnabled;
						an[i].childNodes[1].className = (oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay()) ? oSettings.oClasses.sPageNextDisabled: oSettings.oClasses.sPageNextEnabled
					}
				}
			}
		},
		iFullNumbersShowPages: 5,
		full_numbers: {
			fnInit: function(oSettings, nPaging, fnCallbackDraw) {
				var nFirst = document.createElement("span");
				var nPrevious = document.createElement("span");
				var nList = document.createElement("span");
				var nNext = document.createElement("span");
				var nLast = document.createElement("span");
				nFirst.innerHTML = oSettings.oLanguage.oPaginate.sFirst;
				nPrevious.innerHTML = oSettings.oLanguage.oPaginate.sPrevious;
				nNext.innerHTML = oSettings.oLanguage.oPaginate.sNext;
				nLast.innerHTML = oSettings.oLanguage.oPaginate.sLast;
				var oClasses = oSettings.oClasses;
				nFirst.className = oClasses.sPageButton + " " + oClasses.sPageFirst;
				nPrevious.className = oClasses.sPageButton + " " + oClasses.sPagePrevious;
				nNext.className = oClasses.sPageButton + " " + oClasses.sPageNext;
				nLast.className = oClasses.sPageButton + " " + oClasses.sPageLast;
				nPaging.appendChild(nFirst);
				nPaging.appendChild(nPrevious);
				nPaging.appendChild(nList);
				nPaging.appendChild(nNext);
				nPaging.appendChild(nLast);
				$(nFirst).bind("click.DT",
				function() {
					if (oSettings.oApi._fnPageChange(oSettings, "first")) {
						fnCallbackDraw(oSettings)
					}
				});
				$(nPrevious).bind("click.DT",
				function() {
					if (oSettings.oApi._fnPageChange(oSettings, "previous")) {
						fnCallbackDraw(oSettings)
					}
				});
				$(nNext).bind("click.DT",
				function() {
					if (oSettings.oApi._fnPageChange(oSettings, "next")) {
						fnCallbackDraw(oSettings)
					}
				});
				$(nLast).bind("click.DT",
				function() {
					if (oSettings.oApi._fnPageChange(oSettings, "last")) {
						fnCallbackDraw(oSettings)
					}
				});
				$("span", nPaging).bind("mousedown.DT",
				function() {
					return false
				}).bind("selectstart.DT",
				function() {
					return false
				});
				if (oSettings.sTableId !== "" && typeof oSettings.aanFeatures.p == "undefined") {
					nPaging.setAttribute("id", oSettings.sTableId + "_paginate");
					nFirst.setAttribute("id", oSettings.sTableId + "_first");
					nPrevious.setAttribute("id", oSettings.sTableId + "_previous");
					nNext.setAttribute("id", oSettings.sTableId + "_next");
					nLast.setAttribute("id", oSettings.sTableId + "_last")
				}
			},
			fnUpdate: function(oSettings, fnCallbackDraw) {
				if (!oSettings.aanFeatures.p) {
					return
				}
				var iPageCount = _oExt.oPagination.iFullNumbersShowPages;
				var iPageCountHalf = Math.floor(iPageCount / 2);
				var iPages = Math.ceil((oSettings.fnRecordsDisplay()) / oSettings._iDisplayLength);
				var iCurrentPage = Math.ceil(oSettings._iDisplayStart / oSettings._iDisplayLength) + 1;
				var sList = "";
				var iStartButton, iEndButton, i, iLen;
				var oClasses = oSettings.oClasses;
				if (iPages < iPageCount) {
					iStartButton = 1;
					iEndButton = iPages
				} else {
					if (iCurrentPage <= iPageCountHalf) {
						iStartButton = 1;
						iEndButton = iPageCount
					} else {
						if (iCurrentPage >= (iPages - iPageCountHalf)) {
							iStartButton = iPages - iPageCount + 1;
							iEndButton = iPages
						} else {
							iStartButton = iCurrentPage - Math.ceil(iPageCount / 2) + 1;
							iEndButton = iStartButton + iPageCount - 1
						}
					}
				}
				for (i = iStartButton; i <= iEndButton; i++) {
					if (iCurrentPage != i) {
						sList += '<span class="' + oClasses.sPageButton + '">' + i + "</span>"
					} else {
						sList += '<span class="' + oClasses.sPageButtonActive + '">' + i + "</span>"
					}
				}
				var an = oSettings.aanFeatures.p;
				var anButtons, anStatic, nPaginateList;
				var fnClick = function(e) {
					var iTarget = (this.innerHTML * 1) - 1;
					oSettings._iDisplayStart = iTarget * oSettings._iDisplayLength;
					fnCallbackDraw(oSettings);
					e.preventDefault()
				};
				var fnFalse = function() {
					return false
				};
				for (i = 0, iLen = an.length; i < iLen; i++) {
					if (an[i].childNodes.length === 0) {
						continue
					}
					var qjPaginateList = $("span:eq(2)", an[i]);
					qjPaginateList.html(sList);
					$("span", qjPaginateList).bind("click.DT", fnClick).bind("mousedown.DT", fnFalse).bind("selectstart.DT", fnFalse);
					anButtons = an[i].getElementsByTagName("span");
					anStatic = [anButtons[0], anButtons[1], anButtons[anButtons.length - 2], anButtons[anButtons.length - 1]];
					$(anStatic).removeClass(oClasses.sPageButton + " " + oClasses.sPageButtonActive + " " + oClasses.sPageButtonStaticDisabled);
					if (iCurrentPage == 1) {
						anStatic[0].className += " " + oClasses.sPageButtonStaticDisabled;
						anStatic[1].className += " " + oClasses.sPageButtonStaticDisabled
					} else {
						anStatic[0].className += " " + oClasses.sPageButton;
						anStatic[1].className += " " + oClasses.sPageButton
					}
					if (iPages === 0 || iCurrentPage == iPages || oSettings._iDisplayLength == -1) {
						anStatic[2].className += " " + oClasses.sPageButtonStaticDisabled;
						anStatic[3].className += " " + oClasses.sPageButtonStaticDisabled
					} else {
						anStatic[2].className += " " + oClasses.sPageButton;
						anStatic[3].className += " " + oClasses.sPageButton
					}
				}
			}
		}
	};
	_oExt.oSort = {
		"string-asc": function(a, b) {
			if (typeof a != "string") {
				a = ""
			}
			if (typeof b != "string") {
				b = ""
			}
			var x = a.toLowerCase();
			var y = b.toLowerCase();
			return ((x < y) ? -1 : ((x > y) ? 1 : 0))
		},
		"string-desc": function(a, b) {
			if (typeof a != "string") {
				a = ""
			}
			if (typeof b != "string") {
				b = ""
			}
			var x = a.toLowerCase();
			var y = b.toLowerCase();
			return ((x < y) ? 1 : ((x > y) ? -1 : 0))
		},
		"html-asc": function(a, b) {
			var x = a.replace(/<.*?>/g, "").toLowerCase();
			var y = b.replace(/<.*?>/g, "").toLowerCase();
			return ((x < y) ? -1 : ((x > y) ? 1 : 0))
		},
		"html-desc": function(a, b) {
			var x = a.replace(/<.*?>/g, "").toLowerCase();
			var y = b.replace(/<.*?>/g, "").toLowerCase();
			return ((x < y) ? 1 : ((x > y) ? -1 : 0))
		},
		"date-asc": function(a, b) {
			var x = Date.parse(a);
			var y = Date.parse(b);
			if (isNaN(x) || x === "") {
				x = Date.parse("01/01/1970 00:00:00")
			}
			if (isNaN(y) || y === "") {
				y = Date.parse("01/01/1970 00:00:00")
			}
			return x - y
		},
		"date-desc": function(a, b) {
			var x = Date.parse(a);
			var y = Date.parse(b);
			if (isNaN(x) || x === "") {
				x = Date.parse("01/01/1970 00:00:00")
			}
			if (isNaN(y) || y === "") {
				y = Date.parse("01/01/1970 00:00:00")
			}
			return y - x
		},
		"numeric-asc": function(a, b) {
			var x = (a == "-" || a === "") ? 0 : a * 1;
			var y = (b == "-" || b === "") ? 0 : b * 1;
			return x - y
		},
		"numeric-desc": function(a, b) {
			var x = (a == "-" || a === "") ? 0 : a * 1;
			var y = (b == "-" || b === "") ? 0 : b * 1;
			return y - x
		}
	};
	_oExt.aTypes = [function(sData) {
		if (typeof sData == "number") {
			return "numeric"
		} else {
			if (typeof sData != "string") {
				return null
			}
		}
		var sValidFirstChars = "0123456789-";
		var sValidChars = "0123456789.";
		var Char;
		var bDecimal = false;
		Char = sData.charAt(0);
		if (sValidFirstChars.indexOf(Char) == -1) {
			return null
		}
		for (var i = 1; i < sData.length; i++) {
			Char = sData.charAt(i);
			if (sValidChars.indexOf(Char) == -1) {
				return null
			}
			if (Char == ".") {
				if (bDecimal) {
					return null
				}
				bDecimal = true
			}
		}
		return "numeric"
	},
	function(sData) {
		var iParse = Date.parse(sData);
		if ((iParse !== null && !isNaN(iParse)) || (typeof sData == "string" && sData.length === 0)) {
			return "date"
		}
		return null
	},
	function(sData) {
		if (typeof sData == "string" && sData.indexOf("<") != -1 && sData.indexOf(">") != -1) {
			return "html"
		}
		return null
	}];
	_oExt.fnVersionCheck = function(sVersion) {
		var fnZPad = function(Zpad, count) {
			while (Zpad.length < count) {
				Zpad += "0"
			}
			return Zpad
		};
		var aThis = _oExt.sVersion.split(".");
		var aThat = sVersion.split(".");
		var sThis = "",
		sThat = "";
		for (var i = 0,
		iLen = aThat.length; i < iLen; i++) {
			sThis += fnZPad(aThis[i], 3);
			sThat += fnZPad(aThat[i], 3)
		}
		return parseInt(sThis, 10) >= parseInt(sThat, 10)
	};
	_oExt._oExternConfig = {
		iNextUnique: 0
	};
	$.fn.dataTable = function(oInit) {
		function classSettings() {
			this.fnRecordsTotal = function() {
				if (this.oFeatures.bServerSide) {
					return parseInt(this._iRecordsTotal, 10)
				} else {
					return this.aiDisplayMaster.length
				}
			};
			this.fnRecordsDisplay = function() {
				if (this.oFeatures.bServerSide) {
					return parseInt(this._iRecordsDisplay, 10)
				} else {
					return this.aiDisplay.length
				}
			};
			this.fnDisplayEnd = function() {
				if (this.oFeatures.bServerSide) {
					if (this.oFeatures.bPaginate === false || this._iDisplayLength == -1) {
						return this._iDisplayStart + this.aiDisplay.length
					} else {
						return Math.min(this._iDisplayStart + this._iDisplayLength, this._iRecordsDisplay)
					}
				} else {
					return this._iDisplayEnd
				}
			};
			this.oInstance = null;
			this.sInstance = null;
			this.oFeatures = {
				bPaginate: true,
				bLengthChange: true,
				bFilter: true,
				bSort: true,
				bInfo: true,
				bAutoWidth: true,
				bProcessing: false,
				bSortClasses: true,
				bStateSave: false,
				bServerSide: false,
				bDeferRender: false
			};
			this.oScroll = {
				sX: "",
				sXInner: "",
				sY: "",
				bCollapse: false,
				bInfinite: false,
				iLoadGap: 100,
				iBarWidth: 0,
				bAutoCss: true
			};
			this.aanFeatures = [];
			this.oLanguage = {
				sProcessing: "Processing...",
				sLengthMenu: "Show _MENU_ entries",
				sZeroRecords: "No matching records found",
				sEmptyTable: "No data available in table",
				sLoadingRecords: "Loading...",
				sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
				sInfoEmpty: "Showing 0 to 0 of 0 entries",
				sInfoFiltered: "(filtered from _MAX_ total entries)",
				sInfoPostFix: "",
				sSearch: "Search:",
				sUrl: "",
				oPaginate: {
					sFirst: "First",
					sPrevious: "Previous",
					sNext: "Next",
					sLast: "Last"
				},
				fnInfoCallback: null
			};
			this.aoData = [];
			this.aiDisplay = [];
			this.aiDisplayMaster = [];
			this.aoColumns = [];
			this.aoHeader = [];
			this.aoFooter = [];
			this.iNextId = 0;
			this.asDataSearch = [];
			this.oPreviousSearch = {
				sSearch: "",
				bRegex: false,
				bSmart: true
			};
			this.aoPreSearchCols = [];
			this.aaSorting = [[0, "asc", 0]];
			this.aaSortingFixed = null;
			this.asStripClasses = [];
			this.asDestoryStrips = [];
			this.sDestroyWidth = 0;
			this.fnRowCallback = null;
			this.fnHeaderCallback = null;
			this.fnFooterCallback = null;
			this.aoDrawCallback = [];
			this.fnPreDrawCallback = null;
			this.fnInitComplete = null;
			this.sTableId = "";
			this.nTable = null;
			this.nTHead = null;
			this.nTFoot = null;
			this.nTBody = null;
			this.nTableWrapper = null;
			this.bDeferLoading = false;
			this.bInitialised = false;
			this.aoOpenRows = [];
			this.sDom = '<"top"lf<"clear">>rt<"block-actions"ip>';
			this.sPaginationType = "full_numbers";
			this.iCookieDuration = 60 * 60 * 2;
			this.sCookiePrefix = "SpryMedia_DataTables_";
			this.fnCookieCallback = null;
			this.aoStateSave = [];
			this.aoStateLoad = [];
			this.oLoadedState = null;
			this.sAjaxSource = null;
			this.sAjaxDataProp = "aaData";
			this.bAjaxDataGet = true;
			this.jqXHR = null;
			this.fnServerData = function(url, data, callback, settings) {
				settings.jqXHR = $.ajax({
					url: url,
					data: data,
					success: callback,
					dataType: "json",
					cache: false,
					error: function(xhr, error, thrown) {
						if (error == "parsererror") {
							alert("DataTables warning: JSON data from server could not be parsed. This is caused by a JSON formatting error.")
						}
					}
				})
			};
			this.fnFormatNumber = function(iIn) {
				if (iIn < 1000) {
					return iIn
				} else {
					var s = (iIn + ""),
					a = s.split(""),
					out = "",
					iLen = s.length;
					for (var i = 0; i < iLen; i++) {
						if (i % 3 === 0 && i !== 0) {
							out = "," + out
						}
						out = a[iLen - i - 1] + out
					}
				}
				return out
			};
			this.aLengthMenu = [10, 25, 50, 100];
			this.iDraw = 0;
			this.bDrawing = 0;
			this.iDrawError = -1;
			this._iDisplayLength = 10;
			this._iDisplayStart = 0;
			this._iDisplayEnd = 10;
			this._iRecordsTotal = 0;
			this._iRecordsDisplay = 0;
			this.bJUI = false;
			this.oClasses = _oExt.oStdClasses;
			this.bFiltered = false;
			this.bSorted = false;
			this.bSortCellsTop = false;
			this.oInit = null
		}
		this.oApi = {};
		this.fnDraw = function(bComplete) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			if (typeof bComplete != "undefined" && bComplete === false) {
				_fnCalculateEnd(oSettings);
				_fnDraw(oSettings)
			} else {
				_fnReDraw(oSettings)
			}
		};
		this.fnFilter = function(sInput, iColumn, bRegex, bSmart, bShowGlobal) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			if (!oSettings.oFeatures.bFilter) {
				return
			}
			if (typeof bRegex == "undefined") {
				bRegex = false
			}
			if (typeof bSmart == "undefined") {
				bSmart = true
			}
			if (typeof bShowGlobal == "undefined") {
				bShowGlobal = true
			}
			if (typeof iColumn == "undefined" || iColumn === null) {
				_fnFilterComplete(oSettings, {
					sSearch: sInput,
					bRegex: bRegex,
					bSmart: bSmart
				},
				1);
				if (bShowGlobal && typeof oSettings.aanFeatures.f != "undefined") {
					var n = oSettings.aanFeatures.f;
					for (var i = 0,
					iLen = n.length; i < iLen; i++) {
						$("input", n[i]).val(sInput)
					}
				}
			} else {
				oSettings.aoPreSearchCols[iColumn].sSearch = sInput;
				oSettings.aoPreSearchCols[iColumn].bRegex = bRegex;
				oSettings.aoPreSearchCols[iColumn].bSmart = bSmart;
				_fnFilterComplete(oSettings, oSettings.oPreviousSearch, 1)
			}
		};
		this.fnSettings = function(nNode) {
			return _fnSettingsFromNode(this[_oExt.iApiIndex])
		};
		this.fnVersionCheck = _oExt.fnVersionCheck;
		this.fnSort = function(aaSort) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			oSettings.aaSorting = aaSort;
			_fnSort(oSettings)
		};
		this.fnSortListener = function(nNode, iColumn, fnCallback) {
			_fnSortAttachListener(_fnSettingsFromNode(this[_oExt.iApiIndex]), nNode, iColumn, fnCallback)
		};
		this.fnAddData = function(mData, bRedraw) {
			if (mData.length === 0) {
				return []
			}
			var aiReturn = [];
			var iTest;
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			if (typeof mData[0] == "object") {
				for (var i = 0; i < mData.length; i++) {
					iTest = _fnAddData(oSettings, mData[i]);
					if (iTest == -1) {
						return aiReturn
					}
					aiReturn.push(iTest)
				}
			} else {
				iTest = _fnAddData(oSettings, mData);
				if (iTest == -1) {
					return aiReturn
				}
				aiReturn.push(iTest)
			}
			oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			if (typeof bRedraw == "undefined" || bRedraw) {
				_fnReDraw(oSettings)
			}
			return aiReturn
		};
		this.fnDeleteRow = function(mTarget, fnCallBack, bRedraw) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			var i, iAODataIndex;
			iAODataIndex = (typeof mTarget == "object") ? _fnNodeToDataIndex(oSettings, mTarget) : mTarget;
			var oData = oSettings.aoData.splice(iAODataIndex, 1);
			var iDisplayIndex = $.inArray(iAODataIndex, oSettings.aiDisplay);
			oSettings.asDataSearch.splice(iDisplayIndex, 1);
			_fnDeleteIndex(oSettings.aiDisplayMaster, iAODataIndex);
			_fnDeleteIndex(oSettings.aiDisplay, iAODataIndex);
			if (typeof fnCallBack == "function") {
				fnCallBack.call(this, oSettings, oData)
			}
			if (oSettings._iDisplayStart >= oSettings.aiDisplay.length) {
				oSettings._iDisplayStart -= oSettings._iDisplayLength;
				if (oSettings._iDisplayStart < 0) {
					oSettings._iDisplayStart = 0
				}
			}
			if (typeof bRedraw == "undefined" || bRedraw) {
				_fnCalculateEnd(oSettings);
				_fnDraw(oSettings)
			}
			return oData
		};
		this.fnClearTable = function(bRedraw) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			_fnClearTable(oSettings);
			if (typeof bRedraw == "undefined" || bRedraw) {
				_fnDraw(oSettings)
			}
		};
		this.fnOpen = function(nTr, mHtml, sClass) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			this.fnClose(nTr);
			var nNewRow = document.createElement("tr");
			var nNewCell = document.createElement("td");
			nNewRow.appendChild(nNewCell);
			nNewCell.className = sClass;
			nNewCell.colSpan = _fnVisbleColumns(oSettings);
			if (typeof mHtml.jquery != "undefined" || typeof mHtml == "object") {
				nNewCell.appendChild(mHtml)
			} else {
				nNewCell.innerHTML = mHtml
			}
			var nTrs = $("tr", oSettings.nTBody);
			if ($.inArray(nTr, nTrs) != -1) {
				$(nNewRow).insertAfter(nTr)
			}
			oSettings.aoOpenRows.push({
				nTr: nNewRow,
				nParent: nTr
			});
			return nNewRow
		};
		this.fnClose = function(nTr) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			for (var i = 0; i < oSettings.aoOpenRows.length; i++) {
				if (oSettings.aoOpenRows[i].nParent == nTr) {
					var nTrParent = oSettings.aoOpenRows[i].nTr.parentNode;
					if (nTrParent) {
						nTrParent.removeChild(oSettings.aoOpenRows[i].nTr)
					}
					oSettings.aoOpenRows.splice(i, 1);
					return 0
				}
			}
			return 1
		};
		this.fnGetData = function(mRow, iCol) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			if (typeof mRow != "undefined") {
				var iRow = (typeof mRow == "object") ? _fnNodeToDataIndex(oSettings, mRow) : mRow;
				if (typeof iCol != "undefined") {
					return _fnGetCellData(oSettings, iRow, iCol, "")
				}
				return (typeof oSettings.aoData[iRow] != "undefined") ? oSettings.aoData[iRow]._aData: null
			}
			return _fnGetDataMaster(oSettings)
		};
		this.fnGetNodes = function(iRow) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			if (typeof iRow != "undefined") {
				return (typeof oSettings.aoData[iRow] != "undefined") ? oSettings.aoData[iRow].nTr: null
			}
			return _fnGetTrNodes(oSettings)
		};
		this.fnGetPosition = function(nNode) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			var sNodeName = nNode.nodeName.toUpperCase();
			if (sNodeName == "TR") {
				return _fnNodeToDataIndex(oSettings, nNode)
			} else {
				if (sNodeName == "TD" || sNodeName == "TH") {
					var iDataIndex = _fnNodeToDataIndex(oSettings, nNode.parentNode);
					var anCells = _fnGetTdNodes(oSettings, iDataIndex);
					for (var i = 0; i < oSettings.aoColumns.length; i++) {
						if (anCells[i] == nNode) {
							return [iDataIndex, _fnColumnIndexToVisible(oSettings, i), i]
						}
					}
				}
			}
			return null
		};
		this.fnUpdate = function(mData, mRow, iColumn, bRedraw, bAction) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			var iVisibleColumn, i, iLen, sDisplay;
			var iRow = (typeof mRow == "object") ? _fnNodeToDataIndex(oSettings, mRow) : mRow;
			if ($.isArray(mData) && typeof mData == "object") {
				oSettings.aoData[iRow]._aData = mData.slice();
				for (i = 0; i < oSettings.aoColumns.length; i++) {
					this.fnUpdate(_fnGetCellData(oSettings, iRow, i), iRow, i, false, false)
				}
			} else {
				if (typeof mData == "object") {
					oSettings.aoData[iRow]._aData = $.extend(true, {},
					mData);
					for (i = 0; i < oSettings.aoColumns.length; i++) {
						this.fnUpdate(_fnGetCellData(oSettings, iRow, i), iRow, i, false, false)
					}
				} else {
					sDisplay = mData;
					_fnSetCellData(oSettings, iRow, iColumn, sDisplay);
					if (oSettings.aoColumns[iColumn].fnRender !== null) {
						sDisplay = oSettings.aoColumns[iColumn].fnRender({
							iDataRow: iRow,
							iDataColumn: iColumn,
							aData: oSettings.aoData[iRow]._aData,
							oSettings: oSettings
						});
						if (oSettings.aoColumns[iColumn].bUseRendered) {
							_fnSetCellData(oSettings, iRow, iColumn, sDisplay)
						}
					}
					if (oSettings.aoData[iRow].nTr !== null) {
						_fnGetTdNodes(oSettings, iRow)[iColumn].innerHTML = sDisplay
					}
				}
			}
			var iDisplayIndex = $.inArray(iRow, oSettings.aiDisplay);
			oSettings.asDataSearch[iDisplayIndex] = _fnBuildSearchRow(oSettings, _fnGetRowData(oSettings, iRow, "filter"));
			if (typeof bAction == "undefined" || bAction) {
				_fnAjustColumnSizing(oSettings)
			}
			if (typeof bRedraw == "undefined" || bRedraw) {
				_fnReDraw(oSettings)
			}
			return 0
		};
		this.fnSetColumnVis = function(iCol, bShow, bRedraw) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			var i, iLen;
			var iColumns = oSettings.aoColumns.length;
			var nTd, nCell, anTrs, jqChildren, bAppend, iBefore;
			if (oSettings.aoColumns[iCol].bVisible == bShow) {
				return
			}
			if (bShow) {
				var iInsert = 0;
				for (i = 0; i < iCol; i++) {
					if (oSettings.aoColumns[i].bVisible) {
						iInsert++
					}
				}
				bAppend = (iInsert >= _fnVisbleColumns(oSettings));
				if (!bAppend) {
					for (i = iCol; i < iColumns; i++) {
						if (oSettings.aoColumns[i].bVisible) {
							iBefore = i;
							break
						}
					}
				}
				for (i = 0, iLen = oSettings.aoData.length; i < iLen; i++) {
					if (oSettings.aoData[i].nTr !== null) {
						if (bAppend) {
							oSettings.aoData[i].nTr.appendChild(oSettings.aoData[i]._anHidden[iCol])
						} else {
							oSettings.aoData[i].nTr.insertBefore(oSettings.aoData[i]._anHidden[iCol], _fnGetTdNodes(oSettings, i)[iBefore])
						}
					}
				}
			} else {
				for (i = 0, iLen = oSettings.aoData.length; i < iLen; i++) {
					if (oSettings.aoData[i].nTr !== null) {
						nTd = _fnGetTdNodes(oSettings, i)[iCol];
						oSettings.aoData[i]._anHidden[iCol] = nTd;
						nTd.parentNode.removeChild(nTd)
					}
				}
			}
			oSettings.aoColumns[iCol].bVisible = bShow;
			_fnDrawHead(oSettings, oSettings.aoHeader);
			if (oSettings.nTFoot) {
				_fnDrawHead(oSettings, oSettings.aoFooter)
			}
			for (i = 0, iLen = oSettings.aoOpenRows.length; i < iLen; i++) {
				oSettings.aoOpenRows[i].nTr.colSpan = _fnVisbleColumns(oSettings)
			}
			if (typeof bRedraw == "undefined" || bRedraw) {
				_fnAjustColumnSizing(oSettings);
				_fnDraw(oSettings)
			}
			_fnSaveState(oSettings)
		};
		this.fnPageChange = function(sAction, bRedraw) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			_fnPageChange(oSettings, sAction);
			_fnCalculateEnd(oSettings);
			if (typeof bRedraw == "undefined" || bRedraw) {
				_fnDraw(oSettings)
			}
		};
		this.fnDestroy = function() {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			var nOrig = oSettings.nTableWrapper.parentNode;
			var nBody = oSettings.nTBody;
			var i, iLen;
			oSettings.bDestroying = true;
			for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
				if (oSettings.aoColumns[i].bVisible === false) {
					this.fnSetColumnVis(i, true)
				}
			}
			$(oSettings.nTableWrapper).find("*").andSelf().unbind(".DT");
			$("tbody>tr>td." + oSettings.oClasses.sRowEmpty, oSettings.nTable).parent().remove();
			if (oSettings.nTable != oSettings.nTHead.parentNode) {
				$(">thead", oSettings.nTable).remove();
				oSettings.nTable.appendChild(oSettings.nTHead)
			}
			if (oSettings.nTFoot && oSettings.nTable != oSettings.nTFoot.parentNode) {
				$(">tfoot", oSettings.nTable).remove();
				oSettings.nTable.appendChild(oSettings.nTFoot)
			}
			oSettings.nTable.parentNode.removeChild(oSettings.nTable);
			$(oSettings.nTableWrapper).remove();
			oSettings.aaSorting = [];
			oSettings.aaSortingFixed = [];
			_fnSortingClasses(oSettings);
			$(_fnGetTrNodes(oSettings)).removeClass(oSettings.asStripClasses.join(" "));
			if (!oSettings.bJUI) {
				$("th", oSettings.nTHead).removeClass([_oExt.oStdClasses.sSortable, _oExt.oStdClasses.sSortableAsc, _oExt.oStdClasses.sSortableDesc, _oExt.oStdClasses.sSortableNone].join(" "))
			} else {
				$("th", oSettings.nTHead).removeClass([_oExt.oStdClasses.sSortable, _oExt.oJUIClasses.sSortableAsc, _oExt.oJUIClasses.sSortableDesc, _oExt.oJUIClasses.sSortableNone].join(" "));
				$("th span." + _oExt.oJUIClasses.sSortIcon, oSettings.nTHead).remove();
				$("th", oSettings.nTHead).each(function() {
					var jqWrapper = $("div." + _oExt.oJUIClasses.sSortJUIWrapper, this);
					var kids = jqWrapper.contents();
					$(this).append(kids);
					jqWrapper.remove()
				})
			}
			if (oSettings.nTableReinsertBefore) {
				nOrig.insertBefore(oSettings.nTable, oSettings.nTableReinsertBefore)
			} else {
				nOrig.appendChild(oSettings.nTable)
			}
			for (i = 0, iLen = oSettings.aoData.length; i < iLen; i++) {
				if (oSettings.aoData[i].nTr !== null) {
					nBody.appendChild(oSettings.aoData[i].nTr)
				}
			}
			if (oSettings.oFeatures.bAutoWidth === true) {
				oSettings.nTable.style.width = _fnStringToCss(oSettings.sDestroyWidth)
			}
			$(">tr:even", nBody).addClass(oSettings.asDestoryStrips[0]);
			$(">tr:odd", nBody).addClass(oSettings.asDestoryStrips[1]);
			for (i = 0, iLen = _aoSettings.length; i < iLen; i++) {
				if (_aoSettings[i] == oSettings) {
					_aoSettings.splice(i, 1)
				}
			}
			oSettings = null
		};
		this.fnAdjustColumnSizing = function(bRedraw) {
			var oSettings = _fnSettingsFromNode(this[_oExt.iApiIndex]);
			_fnAjustColumnSizing(oSettings);
			if (typeof bRedraw == "undefined" || bRedraw) {
				this.fnDraw(false)
			} else {
				if (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") {
					this.oApi._fnScrollDraw(oSettings)
				}
			}
		};
		function _fnExternApiFunc(sFunc) {
			return function() {
				var aArgs = [_fnSettingsFromNode(this[_oExt.iApiIndex])].concat(Array.prototype.slice.call(arguments));
				return _oExt.oApi[sFunc].apply(this, aArgs)
			}
		}
		for (var sFunc in _oExt.oApi) {
			if (sFunc) {
				this[sFunc] = _fnExternApiFunc(sFunc)
			}
		}
		function _fnInitalise(oSettings) {
			var i, iLen, iAjaxStart = oSettings.iInitDisplayStart;
			if (oSettings.bInitialised === false) {
				setTimeout(function() {
					_fnInitalise(oSettings)
				},
				200);
				return
			}
			_fnAddOptionsHtml(oSettings);
			_fnBuildHead(oSettings);
			_fnDrawHead(oSettings, oSettings.aoHeader);
			if (oSettings.nTFoot) {
				_fnDrawHead(oSettings, oSettings.aoFooter)
			}
			_fnProcessingDisplay(oSettings, true);
			if (oSettings.oFeatures.bAutoWidth) {
				_fnCalculateColumnWidths(oSettings)
			}
			for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
				if (oSettings.aoColumns[i].sWidth !== null) {
					oSettings.aoColumns[i].nTh.style.width = _fnStringToCss(oSettings.aoColumns[i].sWidth)
				}
			}
			if (oSettings.oFeatures.bSort) {
				_fnSort(oSettings)
			} else {
				if (oSettings.oFeatures.bFilter) {
					_fnFilterComplete(oSettings, oSettings.oPreviousSearch)
				} else {
					oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
					_fnCalculateEnd(oSettings);
					_fnDraw(oSettings)
				}
			}
			if (oSettings.sAjaxSource !== null && !oSettings.oFeatures.bServerSide) {
				oSettings.fnServerData.call(oSettings.oInstance, oSettings.sAjaxSource, [],
				function(json) {
					var aData = json;
					if (oSettings.sAjaxDataProp !== "") {
						var fnDataSrc = _fnGetObjectDataFn(oSettings.sAjaxDataProp);
						aData = fnDataSrc(json)
					}
					for (i = 0; i < aData.length; i++) {
						_fnAddData(oSettings, aData[i])
					}
					oSettings.iInitDisplayStart = iAjaxStart;
					if (oSettings.oFeatures.bSort) {
						_fnSort(oSettings)
					} else {
						oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
						_fnCalculateEnd(oSettings);
						_fnDraw(oSettings)
					}
					_fnProcessingDisplay(oSettings, false);
					_fnInitComplete(oSettings, json)
				},
				oSettings);
				return
			}
			if (!oSettings.oFeatures.bServerSide) {
				_fnProcessingDisplay(oSettings, false);
				_fnInitComplete(oSettings)
			}
		}
		function _fnInitComplete(oSettings, json) {
			oSettings._bInitComplete = true;
			if (typeof oSettings.fnInitComplete == "function") {
				if (typeof json != "undefined") {
					oSettings.fnInitComplete.call(oSettings.oInstance, oSettings, json)
				} else {
					oSettings.fnInitComplete.call(oSettings.oInstance, oSettings)
				}
			}
		}
		function _fnLanguageProcess(oSettings, oLanguage, bInit) {
			_fnMap(oSettings.oLanguage, oLanguage, "sProcessing");
			_fnMap(oSettings.oLanguage, oLanguage, "sLengthMenu");
			_fnMap(oSettings.oLanguage, oLanguage, "sEmptyTable");
			_fnMap(oSettings.oLanguage, oLanguage, "sLoadingRecords");
			_fnMap(oSettings.oLanguage, oLanguage, "sZeroRecords");
			_fnMap(oSettings.oLanguage, oLanguage, "sInfo");
			_fnMap(oSettings.oLanguage, oLanguage, "sInfoEmpty");
			_fnMap(oSettings.oLanguage, oLanguage, "sInfoFiltered");
			_fnMap(oSettings.oLanguage, oLanguage, "sInfoPostFix");
			_fnMap(oSettings.oLanguage, oLanguage, "sSearch");
			if (typeof oLanguage.oPaginate != "undefined") {
				_fnMap(oSettings.oLanguage.oPaginate, oLanguage.oPaginate, "sFirst");
				_fnMap(oSettings.oLanguage.oPaginate, oLanguage.oPaginate, "sPrevious");
				_fnMap(oSettings.oLanguage.oPaginate, oLanguage.oPaginate, "sNext");
				_fnMap(oSettings.oLanguage.oPaginate, oLanguage.oPaginate, "sLast")
			}
			if (typeof oLanguage.sEmptyTable == "undefined" && typeof oLanguage.sZeroRecords != "undefined") {
				_fnMap(oSettings.oLanguage, oLanguage, "sZeroRecords", "sEmptyTable")
			}
			if (typeof oLanguage.sLoadingRecords == "undefined" && typeof oLanguage.sZeroRecords != "undefined") {
				_fnMap(oSettings.oLanguage, oLanguage, "sZeroRecords", "sLoadingRecords")
			}
			if (bInit) {
				_fnInitalise(oSettings)
			}
		}
		function _fnAddColumn(oSettings, nTh) {
			var iCol = oSettings.aoColumns.length;
			var oCol = {
				sType: null,
				_bAutoType: true,
				bVisible: true,
				bSearchable: true,
				bSortable: true,
				asSorting: ["asc", "desc"],
				sSortingClass: oSettings.oClasses.sSortable,
				sSortingClassJUI: oSettings.oClasses.sSortJUI,
				sTitle: nTh ? nTh.innerHTML: "",
				sName: "",
				sWidth: null,
				sWidthOrig: null,
				sClass: null,
				fnRender: null,
				bUseRendered: true,
				iDataSort: iCol,
				mDataProp: iCol,
				fnGetData: null,
				fnSetData: null,
				sSortDataType: "std",
				sDefaultContent: null,
				sContentPadding: "",
				nTh: nTh ? nTh: document.createElement("th"),
				nTf: null
			};
			oSettings.aoColumns.push(oCol);
			if (typeof oSettings.aoPreSearchCols[iCol] == "undefined" || oSettings.aoPreSearchCols[iCol] === null) {
				oSettings.aoPreSearchCols[iCol] = {
					sSearch: "",
					bRegex: false,
					bSmart: true
				}
			} else {
				if (typeof oSettings.aoPreSearchCols[iCol].bRegex == "undefined") {
					oSettings.aoPreSearchCols[iCol].bRegex = true
				}
				if (typeof oSettings.aoPreSearchCols[iCol].bSmart == "undefined") {
					oSettings.aoPreSearchCols[iCol].bSmart = true
				}
			}
			_fnColumnOptions(oSettings, iCol, null)
		}
		function _fnColumnOptions(oSettings, iCol, oOptions) {
			var oCol = oSettings.aoColumns[iCol];
			if (typeof oOptions != "undefined" && oOptions !== null) {
				if (typeof oOptions.sType != "undefined") {
					oCol.sType = oOptions.sType;
					oCol._bAutoType = false
				}
				_fnMap(oCol, oOptions, "bVisible");
				_fnMap(oCol, oOptions, "bSearchable");
				_fnMap(oCol, oOptions, "bSortable");
				_fnMap(oCol, oOptions, "sTitle");
				_fnMap(oCol, oOptions, "sName");
				_fnMap(oCol, oOptions, "sWidth");
				_fnMap(oCol, oOptions, "sWidth", "sWidthOrig");
				_fnMap(oCol, oOptions, "sClass");
				_fnMap(oCol, oOptions, "fnRender");
				_fnMap(oCol, oOptions, "bUseRendered");
				_fnMap(oCol, oOptions, "iDataSort");
				_fnMap(oCol, oOptions, "mDataProp");
				_fnMap(oCol, oOptions, "asSorting");
				_fnMap(oCol, oOptions, "sSortDataType");
				_fnMap(oCol, oOptions, "sDefaultContent");
				_fnMap(oCol, oOptions, "sContentPadding")
			}
			oCol.fnGetData = _fnGetObjectDataFn(oCol.mDataProp);
			oCol.fnSetData = _fnSetObjectDataFn(oCol.mDataProp);
			if (!oSettings.oFeatures.bSort) {
				oCol.bSortable = false
			}
			if (!oCol.bSortable || ($.inArray("asc", oCol.asSorting) == -1 && $.inArray("desc", oCol.asSorting) == -1)) {
				oCol.sSortingClass = oSettings.oClasses.sSortableNone;
				oCol.sSortingClassJUI = ""
			} else {
				if (oCol.bSortable || ($.inArray("asc", oCol.asSorting) == -1 && $.inArray("desc", oCol.asSorting) == -1)) {
					oCol.sSortingClass = oSettings.oClasses.sSortable;
					oCol.sSortingClassJUI = oSettings.oClasses.sSortJUI
				} else {
					if ($.inArray("asc", oCol.asSorting) != -1 && $.inArray("desc", oCol.asSorting) == -1) {
						oCol.sSortingClass = oSettings.oClasses.sSortableAsc;
						oCol.sSortingClassJUI = oSettings.oClasses.sSortJUIAscAllowed
					} else {
						if ($.inArray("asc", oCol.asSorting) == -1 && $.inArray("desc", oCol.asSorting) != -1) {
							oCol.sSortingClass = oSettings.oClasses.sSortableDesc;
							oCol.sSortingClassJUI = oSettings.oClasses.sSortJUIDescAllowed
						}
					}
				}
			}
		}
		function _fnAddData(oSettings, aDataSupplied) {
			var oCol;
			var aDataIn = (typeof aDataSupplied.length == "number") ? aDataSupplied.slice() : $.extend(true, {},
			aDataSupplied);
			var iRow = oSettings.aoData.length;
			var oData = {
				nTr: null,
				_iId: oSettings.iNextId++,
				_aData: aDataIn,
				_anHidden: [],
				_sRowStripe: ""
			};
			oSettings.aoData.push(oData);
			var nTd, sThisType;
			for (var i = 0,
			iLen = oSettings.aoColumns.length; i < iLen; i++) {
				oCol = oSettings.aoColumns[i];
				if (typeof oCol.fnRender == "function" && oCol.bUseRendered && oCol.mDataProp !== null) {
					_fnSetCellData(oSettings, iRow, i, oCol.fnRender({
						iDataRow: iRow,
						iDataColumn: i,
						aData: oData._aData,
						oSettings: oSettings
					}))
				}
				if (oCol._bAutoType && oCol.sType != "string") {
					var sVarType = _fnGetCellData(oSettings, iRow, i, "type");
					if (sVarType !== null && sVarType !== "") {
						sThisType = _fnDetectType(sVarType);
						if (oCol.sType === null) {
							oCol.sType = sThisType
						} else {
							if (oCol.sType != sThisType) {
								oCol.sType = "string"
							}
						}
					}
				}
			}
			oSettings.aiDisplayMaster.push(iRow);
			if (!oSettings.oFeatures.bDeferRender) {
				_fnCreateTr(oSettings, iRow)
			}
			return iRow
		}
		function _fnCreateTr(oSettings, iRow) {
			var oData = oSettings.aoData[iRow];
			var nTd;
			if (oData.nTr === null) {
				oData.nTr = document.createElement("tr");
				if (typeof oData._aData.DT_RowId != "undefined") {
					oData.nTr.setAttribute("id", oData._aData.DT_RowId)
				}
				if (typeof oData._aData.DT_RowClass != "undefined") {
					$(oData.nTr).addClass(oData._aData.DT_RowClass)
				}
				for (var i = 0,
				iLen = oSettings.aoColumns.length; i < iLen; i++) {
					var oCol = oSettings.aoColumns[i];
					nTd = document.createElement("td");
					if (typeof oCol.fnRender == "function" && (!oCol.bUseRendered || oCol.mDataProp === null)) {
						nTd.innerHTML = oCol.fnRender({
							iDataRow: iRow,
							iDataColumn: i,
							aData: oData._aData,
							oSettings: oSettings
						})
					} else {
						nTd.innerHTML = _fnGetCellData(oSettings, iRow, i, "display")
					}
					if (oCol.sClass !== null) {
						nTd.className = oCol.sClass
					}
					if (oCol.bVisible) {
						oData.nTr.appendChild(nTd);
						oData._anHidden[i] = null
					} else {
						oData._anHidden[i] = nTd
					}
				}
			}
		}
		function _fnGatherData(oSettings) {
			var iLoop, i, iLen, j, jLen, jInner, nTds, nTrs, nTd, aLocalData, iThisIndex, iRow, iRows, iColumn, iColumns, sNodeName;
			if (oSettings.bDeferLoading || oSettings.sAjaxSource === null) {
				nTrs = oSettings.nTBody.childNodes;
				for (i = 0, iLen = nTrs.length; i < iLen; i++) {
					if (nTrs[i].nodeName.toUpperCase() == "TR") {
						iThisIndex = oSettings.aoData.length;
						oSettings.aoData.push({
							nTr: nTrs[i],
							_iId: oSettings.iNextId++,
							_aData: [],
							_anHidden: [],
							_sRowStripe: ""
						});
						oSettings.aiDisplayMaster.push(iThisIndex);
						nTds = nTrs[i].childNodes;
						jInner = 0;
						for (j = 0, jLen = nTds.length; j < jLen; j++) {
							sNodeName = nTds[j].nodeName.toUpperCase();
							if (sNodeName == "TD" || sNodeName == "TH") {
								_fnSetCellData(oSettings, iThisIndex, jInner, $.trim(nTds[j].innerHTML));
								jInner++
							}
						}
					}
				}
			}
			nTrs = _fnGetTrNodes(oSettings);
			nTds = [];
			for (i = 0, iLen = nTrs.length; i < iLen; i++) {
				for (j = 0, jLen = nTrs[i].childNodes.length; j < jLen; j++) {
					nTd = nTrs[i].childNodes[j];
					sNodeName = nTd.nodeName.toUpperCase();
					if (sNodeName == "TD" || sNodeName == "TH") {
						nTds.push(nTd)
					}
				}
			}
			if (nTds.length != nTrs.length * oSettings.aoColumns.length) {
				_fnLog(oSettings, 1, "Unexpected number of TD elements. Expected " + (nTrs.length * oSettings.aoColumns.length) + " and got " + nTds.length + ". DataTables does not support rowspan / colspan in the table body, and there must be one cell for each row/column combination.")
			}
			for (iColumn = 0, iColumns = oSettings.aoColumns.length; iColumn < iColumns; iColumn++) {
				if (oSettings.aoColumns[iColumn].sTitle === null) {
					oSettings.aoColumns[iColumn].sTitle = oSettings.aoColumns[iColumn].nTh.innerHTML
				}
				var bAutoType = oSettings.aoColumns[iColumn]._bAutoType,
				bRender = typeof oSettings.aoColumns[iColumn].fnRender == "function",
				bClass = oSettings.aoColumns[iColumn].sClass !== null,
				bVisible = oSettings.aoColumns[iColumn].bVisible,
				nCell,
				sThisType,
				sRendered,
				sValType;
				if (bAutoType || bRender || bClass || !bVisible) {
					for (iRow = 0, iRows = oSettings.aoData.length; iRow < iRows; iRow++) {
						nCell = nTds[(iRow * iColumns) + iColumn];
						if (bAutoType && oSettings.aoColumns[iColumn].sType != "string") {
							sValType = _fnGetCellData(oSettings, iRow, iColumn, "type");
							if (sValType !== "") {
								sThisType = _fnDetectType(sValType);
								if (oSettings.aoColumns[iColumn].sType === null) {
									oSettings.aoColumns[iColumn].sType = sThisType
								} else {
									if (oSettings.aoColumns[iColumn].sType != sThisType) {
										oSettings.aoColumns[iColumn].sType = "string"
									}
								}
							}
						}
						if (bRender) {
							sRendered = oSettings.aoColumns[iColumn].fnRender({
								iDataRow: iRow,
								iDataColumn: iColumn,
								aData: oSettings.aoData[iRow]._aData,
								oSettings: oSettings
							});
							nCell.innerHTML = sRendered;
							if (oSettings.aoColumns[iColumn].bUseRendered) {
								_fnSetCellData(oSettings, iRow, iColumn, sRendered)
							}
						}
						if (bClass) {
							nCell.className += " " + oSettings.aoColumns[iColumn].sClass
						}
						if (!bVisible) {
							oSettings.aoData[iRow]._anHidden[iColumn] = nCell;
							nCell.parentNode.removeChild(nCell)
						} else {
							oSettings.aoData[iRow]._anHidden[iColumn] = null
						}
					}
				}
			}
		}
		function _fnBuildHead(oSettings) {
			var i, nTh, iLen, j, jLen;
			var anTr = oSettings.nTHead.getElementsByTagName("tr");
			var iThs = oSettings.nTHead.getElementsByTagName("th").length;
			var iCorrector = 0;
			var jqChildren;
			if (iThs !== 0) {
				for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
					nTh = oSettings.aoColumns[i].nTh;
					if (oSettings.aoColumns[i].sClass !== null) {
						$(nTh).addClass(oSettings.aoColumns[i].sClass)
					}
					if (oSettings.aoColumns[i].sTitle != nTh.innerHTML) {
						nTh.innerHTML = oSettings.aoColumns[i].sTitle
					}
				}
			} else {
				var nTr = document.createElement("tr");
				for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
					nTh = oSettings.aoColumns[i].nTh;
					nTh.innerHTML = oSettings.aoColumns[i].sTitle;
					if (oSettings.aoColumns[i].sClass !== null) {
						$(nTh).addClass(oSettings.aoColumns[i].sClass)
					}
					nTr.appendChild(nTh)
				}
				$(oSettings.nTHead).html("")[0].appendChild(nTr);
				_fnDetectHeader(oSettings.aoHeader, oSettings.nTHead)
			}
			if (oSettings.bJUI) {
				for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
					nTh = oSettings.aoColumns[i].nTh;
					var nDiv = document.createElement("div");
					nDiv.className = oSettings.oClasses.sSortJUIWrapper;
					$(nTh).contents().appendTo(nDiv);
					var nSpan = document.createElement("span");
					nSpan.className = oSettings.oClasses.sSortIcon;
					nDiv.appendChild(nSpan);
					nTh.appendChild(nDiv)
				}
			}
			var fnNoSelect = function(e) {
				this.onselectstart = function() {
					return false
				};
				return false
			};
			if (oSettings.oFeatures.bSort) {
				for (i = 0; i < oSettings.aoColumns.length; i++) {
					if (oSettings.aoColumns[i].bSortable !== false) {
						_fnSortAttachListener(oSettings, oSettings.aoColumns[i].nTh, i);
						$(oSettings.aoColumns[i].nTh).bind("mousedown.DT", fnNoSelect)
					} else {
						$(oSettings.aoColumns[i].nTh).addClass(oSettings.oClasses.sSortableNone)
					}
				}
			}
			if (oSettings.oClasses.sFooterTH !== "") {
				$(">tr>th", oSettings.nTFoot).addClass(oSettings.oClasses.sFooterTH)
			}
			if (oSettings.nTFoot !== null) {
				var anCells = _fnGetUniqueThs(oSettings, null, oSettings.aoFooter);
				for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
					if (typeof anCells[i] != "undefined") {
						oSettings.aoColumns[i].nTf = anCells[i]
					}
				}
			}
		}
		function _fnDrawHead(oSettings, aoSource, bIncludeHidden) {
			var i, iLen, j, jLen, k, kLen;
			var aoLocal = [];
			var aApplied = [];
			var iColumns = oSettings.aoColumns.length;
			var iRowspan, iColspan;
			if (typeof bIncludeHidden == "undefined") {
				bIncludeHidden = false
			}
			for (i = 0, iLen = aoSource.length; i < iLen; i++) {
				aoLocal[i] = aoSource[i].slice();
				aoLocal[i].nTr = aoSource[i].nTr;
				for (j = iColumns - 1; j >= 0; j--) {
					if (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {
						aoLocal[i].splice(j, 1)
					}
				}
				aApplied.push([])
			}
			for (i = 0, iLen = aoLocal.length; i < iLen; i++) {
				if (aoLocal[i].nTr) {
					for (k = 0, kLen = aoLocal[i].nTr.childNodes.length; k < kLen; k++) {
						aoLocal[i].nTr.removeChild(aoLocal[i].nTr.childNodes[0])
					}
				}
				for (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {
					iRowspan = 1;
					iColspan = 1;
					if (typeof aApplied[i][j] == "undefined") {
						aoLocal[i].nTr.appendChild(aoLocal[i][j].cell);
						aApplied[i][j] = 1;
						while (typeof aoLocal[i + iRowspan] != "undefined" && aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {
							aApplied[i + iRowspan][j] = 1;
							iRowspan++
						}
						while (typeof aoLocal[i][j + iColspan] != "undefined" && aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {
							for (k = 0; k < iRowspan; k++) {
								aApplied[i + k][j + iColspan] = 1
							}
							iColspan++
						}
						aoLocal[i][j].cell.setAttribute("rowspan", iRowspan);
						aoLocal[i][j].cell.setAttribute("colspan", iColspan)
					}
				}
			}
		}
		function _fnDraw(oSettings) {
			var i, iLen;
			var anRows = [];
			var iRowCount = 0;
			var bRowError = false;
			var iStrips = oSettings.asStripClasses.length;
			var iOpenRows = oSettings.aoOpenRows.length;
			if (oSettings.fnPreDrawCallback !== null && oSettings.fnPreDrawCallback.call(oSettings.oInstance, oSettings) === false) {
				return
			}
			oSettings.bDrawing = true;
			if (typeof oSettings.iInitDisplayStart != "undefined" && oSettings.iInitDisplayStart != -1) {
				if (oSettings.oFeatures.bServerSide) {
					oSettings._iDisplayStart = oSettings.iInitDisplayStart
				} else {
					oSettings._iDisplayStart = (oSettings.iInitDisplayStart >= oSettings.fnRecordsDisplay()) ? 0 : oSettings.iInitDisplayStart
				}
				oSettings.iInitDisplayStart = -1;
				_fnCalculateEnd(oSettings)
			}
			if (oSettings.bDeferLoading) {
				oSettings.bDeferLoading = false;
				oSettings.iDraw++
			} else {
				if (!oSettings.oFeatures.bServerSide) {
					oSettings.iDraw++
				} else {
					if (!oSettings.bDestroying && !_fnAjaxUpdate(oSettings)) {
						return
					}
				}
			}
			if (oSettings.aiDisplay.length !== 0) {
				var iStart = oSettings._iDisplayStart;
				var iEnd = oSettings._iDisplayEnd;
				if (oSettings.oFeatures.bServerSide) {
					iStart = 0;
					iEnd = oSettings.aoData.length
				}
				for (var j = iStart; j < iEnd; j++) {
					var aoData = oSettings.aoData[oSettings.aiDisplay[j]];
					if (aoData.nTr === null) {
						_fnCreateTr(oSettings, oSettings.aiDisplay[j])
					}
					var nRow = aoData.nTr;
					if (iStrips !== 0) {
						var sStrip = oSettings.asStripClasses[iRowCount % iStrips];
						if (aoData._sRowStripe != sStrip) {
							$(nRow).removeClass(aoData._sRowStripe).addClass(sStrip);
							aoData._sRowStripe = sStrip
						}
					}
					if (typeof oSettings.fnRowCallback == "function") {
						nRow = oSettings.fnRowCallback.call(oSettings.oInstance, nRow, oSettings.aoData[oSettings.aiDisplay[j]]._aData, iRowCount, j);
						if (!nRow && !bRowError) {
							_fnLog(oSettings, 0, "A node was not returned by fnRowCallback");
							bRowError = true
						}
					}
					anRows.push(nRow);
					iRowCount++;
					if (iOpenRows !== 0) {
						for (var k = 0; k < iOpenRows; k++) {
							if (nRow == oSettings.aoOpenRows[k].nParent) {
								anRows.push(oSettings.aoOpenRows[k].nTr)
							}
						}
					}
				}
			} else {
				anRows[0] = document.createElement("tr");
				if (typeof oSettings.asStripClasses[0] != "undefined") {
					anRows[0].className = oSettings.asStripClasses[0]
				}
				var sZero = oSettings.oLanguage.sZeroRecords.replace("_MAX_", oSettings.fnFormatNumber(oSettings.fnRecordsTotal()));
				if (oSettings.iDraw == 1 && oSettings.sAjaxSource !== null && !oSettings.oFeatures.bServerSide) {
					sZero = oSettings.oLanguage.sLoadingRecords
				} else {
					if (typeof oSettings.oLanguage.sEmptyTable != "undefined" && oSettings.fnRecordsTotal() === 0) {
						sZero = oSettings.oLanguage.sEmptyTable
					}
				}
				var nTd = document.createElement("td");
				nTd.setAttribute("valign", "top");
				nTd.colSpan = _fnVisbleColumns(oSettings);
				nTd.className = oSettings.oClasses.sRowEmpty;
				nTd.innerHTML = sZero;
				anRows[iRowCount].appendChild(nTd)
			}
			if (typeof oSettings.fnHeaderCallback == "function") {
				oSettings.fnHeaderCallback.call(oSettings.oInstance, $(">tr", oSettings.nTHead)[0], _fnGetDataMaster(oSettings), oSettings._iDisplayStart, oSettings.fnDisplayEnd(), oSettings.aiDisplay)
			}
			if (typeof oSettings.fnFooterCallback == "function") {
				oSettings.fnFooterCallback.call(oSettings.oInstance, $(">tr", oSettings.nTFoot)[0], _fnGetDataMaster(oSettings), oSettings._iDisplayStart, oSettings.fnDisplayEnd(), oSettings.aiDisplay)
			}
			var nAddFrag = document.createDocumentFragment(),
			nRemoveFrag = document.createDocumentFragment(),
			nBodyPar,
			nTrs;
			if (oSettings.nTBody) {
				nBodyPar = oSettings.nTBody.parentNode;
				nRemoveFrag.appendChild(oSettings.nTBody);
				if (!oSettings.oScroll.bInfinite || !oSettings._bInitComplete || oSettings.bSorted || oSettings.bFiltered) {
					nTrs = oSettings.nTBody.childNodes;
					for (i = nTrs.length - 1; i >= 0; i--) {
						nTrs[i].parentNode.removeChild(nTrs[i])
					}
				}
				for (i = 0, iLen = anRows.length; i < iLen; i++) {
					nAddFrag.appendChild(anRows[i])
				}
				oSettings.nTBody.appendChild(nAddFrag);
				if (nBodyPar !== null) {
					nBodyPar.appendChild(oSettings.nTBody)
				}
			}
			for (i = oSettings.aoDrawCallback.length - 1; i >= 0; i--) {
				oSettings.aoDrawCallback[i].fn.call(oSettings.oInstance, oSettings)
			}
			oSettings.bSorted = false;
			oSettings.bFiltered = false;
			oSettings.bDrawing = false;
			if (oSettings.oFeatures.bServerSide) {
				_fnProcessingDisplay(oSettings, false);
				if (typeof oSettings._bInitComplete == "undefined") {
					_fnInitComplete(oSettings)
				}
			}
		}
		function _fnReDraw(oSettings) {
			if (oSettings.oFeatures.bSort) {
				_fnSort(oSettings, oSettings.oPreviousSearch)
			} else {
				if (oSettings.oFeatures.bFilter) {
					_fnFilterComplete(oSettings, oSettings.oPreviousSearch)
				} else {
					_fnCalculateEnd(oSettings);
					_fnDraw(oSettings)
				}
			}
		}
		function _fnAjaxUpdate(oSettings) {
			if (oSettings.bAjaxDataGet) {
				_fnProcessingDisplay(oSettings, true);
				var iColumns = oSettings.aoColumns.length;
				var aoData = [],
				mDataProp;
				var i;
				oSettings.iDraw++;
				aoData.push({
					name: "sEcho",
					value: oSettings.iDraw
				});
				aoData.push({
					name: "iColumns",
					value: iColumns
				});
				aoData.push({
					name: "sColumns",
					value: _fnColumnOrdering(oSettings)
				});
				aoData.push({
					name: "iDisplayStart",
					value: oSettings._iDisplayStart
				});
				aoData.push({
					name: "iDisplayLength",
					value: oSettings.oFeatures.bPaginate !== false ? oSettings._iDisplayLength: -1
				});
				for (i = 0; i < iColumns; i++) {
					mDataProp = oSettings.aoColumns[i].mDataProp;
					aoData.push({
						name: "mDataProp_" + i,
						value: typeof(mDataProp) == "function" ? "function": mDataProp
					})
				}
				if (oSettings.oFeatures.bFilter !== false) {
					aoData.push({
						name: "sSearch",
						value: oSettings.oPreviousSearch.sSearch
					});
					aoData.push({
						name: "bRegex",
						value: oSettings.oPreviousSearch.bRegex
					});
					for (i = 0; i < iColumns; i++) {
						aoData.push({
							name: "sSearch_" + i,
							value: oSettings.aoPreSearchCols[i].sSearch
						});
						aoData.push({
							name: "bRegex_" + i,
							value: oSettings.aoPreSearchCols[i].bRegex
						});
						aoData.push({
							name: "bSearchable_" + i,
							value: oSettings.aoColumns[i].bSearchable
						})
					}
				}
				if (oSettings.oFeatures.bSort !== false) {
					var iFixed = oSettings.aaSortingFixed !== null ? oSettings.aaSortingFixed.length: 0;
					var iUser = oSettings.aaSorting.length;
					aoData.push({
						name: "iSortingCols",
						value: iFixed + iUser
					});
					for (i = 0; i < iFixed; i++) {
						aoData.push({
							name: "iSortCol_" + i,
							value: oSettings.aaSortingFixed[i][0]
						});
						aoData.push({
							name: "sSortDir_" + i,
							value: oSettings.aaSortingFixed[i][1]
						})
					}
					for (i = 0; i < iUser; i++) {
						aoData.push({
							name: "iSortCol_" + (i + iFixed),
							value: oSettings.aaSorting[i][0]
						});
						aoData.push({
							name: "sSortDir_" + (i + iFixed),
							value: oSettings.aaSorting[i][1]
						})
					}
					for (i = 0; i < iColumns; i++) {
						aoData.push({
							name: "bSortable_" + i,
							value: oSettings.aoColumns[i].bSortable
						})
					}
				}
				oSettings.fnServerData.call(oSettings.oInstance, oSettings.sAjaxSource, aoData,
				function(json) {
					_fnAjaxUpdateDraw(oSettings, json)
				},
				oSettings);
				return false
			} else {
				return true
			}
		}
		function _fnAjaxUpdateDraw(oSettings, json) {
			if (typeof json.sEcho != "undefined") {
				if (json.sEcho * 1 < oSettings.iDraw) {
					return
				} else {
					oSettings.iDraw = json.sEcho * 1
				}
			}
			if (!oSettings.oScroll.bInfinite || (oSettings.oScroll.bInfinite && (oSettings.bSorted || oSettings.bFiltered))) {
				_fnClearTable(oSettings)
			}
			oSettings._iRecordsTotal = json.iTotalRecords;
			oSettings._iRecordsDisplay = json.iTotalDisplayRecords;
			var sOrdering = _fnColumnOrdering(oSettings);
			var bReOrder = (typeof json.sColumns != "undefined" && sOrdering !== "" && json.sColumns != sOrdering);
			if (bReOrder) {
				var aiIndex = _fnReOrderIndex(oSettings, json.sColumns)
			}
			var fnDataSrc = _fnGetObjectDataFn(oSettings.sAjaxDataProp);
			var aData = fnDataSrc(json);
			for (var i = 0,
			iLen = aData.length; i < iLen; i++) {
				if (bReOrder) {
					var aDataSorted = [];
					for (var j = 0,
					jLen = oSettings.aoColumns.length; j < jLen; j++) {
						aDataSorted.push(aData[i][aiIndex[j]])
					}
					_fnAddData(oSettings, aDataSorted)
				} else {
					_fnAddData(oSettings, aData[i])
				}
			}
			oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			oSettings.bAjaxDataGet = false;
			_fnDraw(oSettings);
			oSettings.bAjaxDataGet = true;
			_fnProcessingDisplay(oSettings, false)
		}
		function _fnAddOptionsHtml(oSettings) {
			var nHolding = document.createElement("div");
			oSettings.nTable.parentNode.insertBefore(nHolding, oSettings.nTable);
			oSettings.nTableWrapper = document.createElement("div");
			oSettings.nTableWrapper.className = oSettings.oClasses.sWrapper;
			if (oSettings.sTableId !== "") {
				oSettings.nTableWrapper.setAttribute("id", oSettings.sTableId + "_wrapper")
			}
			oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;
			var nInsertNode = oSettings.nTableWrapper;
			var aDom = oSettings.sDom.split("");
			var nTmp, iPushFeature, cOption, nNewNode, cNext, sAttr, j;
			for (var i = 0; i < aDom.length; i++) {
				iPushFeature = 0;
				cOption = aDom[i];
				if (cOption == "<") {
					nNewNode = document.createElement("div");
					cNext = aDom[i + 1];
					if (cNext == "'" || cNext == '"') {
						sAttr = "";
						j = 2;
						while (aDom[i + j] != cNext) {
							sAttr += aDom[i + j];
							j++
						}
						if (sAttr == "H") {
							sAttr = "fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"
						} else {
							if (sAttr == "F") {
								sAttr = "fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"
							}
						}
						if (sAttr.indexOf(".") != -1) {
							var aSplit = sAttr.split(".");
							nNewNode.setAttribute("id", aSplit[0].substr(1, aSplit[0].length - 1));
							nNewNode.className = aSplit[1]
						} else {
							if (sAttr.charAt(0) == "#") {
								nNewNode.setAttribute("id", sAttr.substr(1, sAttr.length - 1))
							} else {
								nNewNode.className = sAttr
							}
						}
						i += j
					}
					nInsertNode.appendChild(nNewNode);
					nInsertNode = nNewNode
				} else {
					if (cOption == ">") {
						nInsertNode = nInsertNode.parentNode
					} else {
						if (cOption == "l" && oSettings.oFeatures.bPaginate && oSettings.oFeatures.bLengthChange) {
							nTmp = _fnFeatureHtmlLength(oSettings);
							iPushFeature = 1
						} else {
							if (cOption == "f" && oSettings.oFeatures.bFilter) {
								nTmp = _fnFeatureHtmlFilter(oSettings);
								iPushFeature = 1
							} else {
								if (cOption == "r" && oSettings.oFeatures.bProcessing) {
									nTmp = _fnFeatureHtmlProcessing(oSettings);
									iPushFeature = 1
								} else {
									if (cOption == "t") {
										nTmp = _fnFeatureHtmlTable(oSettings);
										iPushFeature = 1
									} else {
										if (cOption == "i" && oSettings.oFeatures.bInfo) {
											nTmp = _fnFeatureHtmlInfo(oSettings);
											iPushFeature = 1
										} else {
											if (cOption == "p" && oSettings.oFeatures.bPaginate) {
												nTmp = _fnFeatureHtmlPaginate(oSettings);
												iPushFeature = 1
											} else {
												if (_oExt.aoFeatures.length !== 0) {
													var aoFeatures = _oExt.aoFeatures;
													for (var k = 0,
													kLen = aoFeatures.length; k < kLen; k++) {
														if (cOption == aoFeatures[k].cFeature) {
															nTmp = aoFeatures[k].fnInit(oSettings);
															if (nTmp) {
																iPushFeature = 1
															}
															break
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if (iPushFeature == 1 && nTmp !== null) {
					if (typeof oSettings.aanFeatures[cOption] != "object") {
						oSettings.aanFeatures[cOption] = []
					}
					oSettings.aanFeatures[cOption].push(nTmp);
					nInsertNode.appendChild(nTmp)
				}
			}
			nHolding.parentNode.replaceChild(oSettings.nTableWrapper, nHolding)
		}
		function _fnFeatureHtmlTable(oSettings) {
			if (oSettings.oScroll.sX === "" && oSettings.oScroll.sY === "") {
				return oSettings.nTable
			}
			var nScroller = document.createElement("div"),
			nScrollHead = document.createElement("div"),
			nScrollHeadInner = document.createElement("div"),
			nScrollBody = document.createElement("div"),
			nScrollFoot = document.createElement("div"),
			nScrollFootInner = document.createElement("div"),
			nScrollHeadTable = oSettings.nTable.cloneNode(false),
			nScrollFootTable = oSettings.nTable.cloneNode(false),
			nThead = oSettings.nTable.getElementsByTagName("thead")[0],
			nTfoot = oSettings.nTable.getElementsByTagName("tfoot").length === 0 ? null: oSettings.nTable.getElementsByTagName("tfoot")[0],
			oClasses = (typeof oInit.bJQueryUI != "undefined" && oInit.bJQueryUI) ? _oExt.oJUIClasses: _oExt.oStdClasses;
			nScrollHead.appendChild(nScrollHeadInner);
			nScrollFoot.appendChild(nScrollFootInner);
			nScrollBody.appendChild(oSettings.nTable);
			nScroller.appendChild(nScrollHead);
			nScroller.appendChild(nScrollBody);
			nScrollHeadInner.appendChild(nScrollHeadTable);
			nScrollHeadTable.appendChild(nThead);
			if (nTfoot !== null) {
				nScroller.appendChild(nScrollFoot);
				nScrollFootInner.appendChild(nScrollFootTable);
				nScrollFootTable.appendChild(nTfoot)
			}
			nScroller.className = oClasses.sScrollWrapper;
			nScrollHead.className = oClasses.sScrollHead;
			nScrollHeadInner.className = oClasses.sScrollHeadInner;
			nScrollBody.className = oClasses.sScrollBody;
			nScrollFoot.className = oClasses.sScrollFoot;
			nScrollFootInner.className = oClasses.sScrollFootInner;
			if (oSettings.oScroll.bAutoCss) {
				nScrollHead.style.overflow = "hidden";
				nScrollHead.style.position = "relative";
				nScrollFoot.style.overflow = "hidden";
				nScrollBody.style.overflow = "auto"
			}
			nScrollHead.style.border = "0";
			nScrollHead.style.width = "100%";
			nScrollFoot.style.border = "0";
			nScrollHeadInner.style.width = "150%";
			nScrollHeadTable.removeAttribute("id");
			nScrollHeadTable.style.marginLeft = "0";
			oSettings.nTable.style.marginLeft = "0";
			if (nTfoot !== null) {
				nScrollFootTable.removeAttribute("id");
				nScrollFootTable.style.marginLeft = "0"
			}
			var nCaptions = $(">caption", oSettings.nTable);
			for (var i = 0,
			iLen = nCaptions.length; i < iLen; i++) {
				nScrollHeadTable.appendChild(nCaptions[i])
			}
			if (oSettings.oScroll.sX !== "") {
				nScrollHead.style.width = _fnStringToCss(oSettings.oScroll.sX);
				nScrollBody.style.width = _fnStringToCss(oSettings.oScroll.sX);
				if (nTfoot !== null) {
					nScrollFoot.style.width = _fnStringToCss(oSettings.oScroll.sX)
				}
				$(nScrollBody).scroll(function(e) {
					nScrollHead.scrollLeft = this.scrollLeft;
					if (nTfoot !== null) {
						nScrollFoot.scrollLeft = this.scrollLeft
					}
				})
			}
			if (oSettings.oScroll.sY !== "") {
				nScrollBody.style.height = _fnStringToCss(oSettings.oScroll.sY)
			}
			oSettings.aoDrawCallback.push({
				fn: _fnScrollDraw,
				sName: "scrolling"
			});
			if (oSettings.oScroll.bInfinite) {
				$(nScrollBody).scroll(function() {
					if (!oSettings.bDrawing) {
						if ($(this).scrollTop() + $(this).height() > $(oSettings.nTable).height() - oSettings.oScroll.iLoadGap) {
							if (oSettings.fnDisplayEnd() < oSettings.fnRecordsDisplay()) {
								_fnPageChange(oSettings, "next");
								_fnCalculateEnd(oSettings);
								_fnDraw(oSettings)
							}
						}
					}
				})
			}
			oSettings.nScrollHead = nScrollHead;
			oSettings.nScrollFoot = nScrollFoot;
			return nScroller
		}
		function _fnScrollDraw(o) {
			var nScrollHeadInner = o.nScrollHead.getElementsByTagName("div")[0],
			nScrollHeadTable = nScrollHeadInner.getElementsByTagName("table")[0],
			nScrollBody = o.nTable.parentNode,
			i,
			iLen,
			j,
			jLen,
			anHeadToSize,
			anHeadSizers,
			anFootSizers,
			anFootToSize,
			oStyle,
			iVis,
			iWidth,
			aApplied = [],
			iSanityWidth;
			var nTheadSize = o.nTable.getElementsByTagName("thead");
			if (nTheadSize.length > 0) {
				o.nTable.removeChild(nTheadSize[0])
			}
			if (o.nTFoot !== null) {
				var nTfootSize = o.nTable.getElementsByTagName("tfoot");
				if (nTfootSize.length > 0) {
					o.nTable.removeChild(nTfootSize[0])
				}
			}
			nTheadSize = o.nTHead.cloneNode(true);
			o.nTable.insertBefore(nTheadSize, o.nTable.childNodes[0]);
			if (o.nTFoot !== null) {
				nTfootSize = o.nTFoot.cloneNode(true);
				o.nTable.insertBefore(nTfootSize, o.nTable.childNodes[1])
			}
			if (o.oScroll.sX === "") {
				nScrollBody.style.width = "100%";
				nScrollHeadInner.parentNode.style.width = "100%"
			}
			var nThs = _fnGetUniqueThs(o, nTheadSize);
			for (i = 0, iLen = nThs.length; i < iLen; i++) {
				iVis = _fnVisibleToColumnIndex(o, i);
				nThs[i].style.width = o.aoColumns[iVis].sWidth
			}
			if (o.nTFoot !== null) {
				_fnApplyToChildren(function(n) {
					n.style.width = ""
				},
				nTfootSize.getElementsByTagName("tr"))
			}
			iSanityWidth = $(o.nTable).outerWidth();
			if (o.oScroll.sX === "") {
				o.nTable.style.width = "100%";
				if ($.browser.msie && $.browser.version <= 7) {
					o.nTable.style.width = _fnStringToCss($(o.nTable).outerWidth() - o.oScroll.iBarWidth)
				}
			} else {
				if (o.oScroll.sXInner !== "") {
					o.nTable.style.width = _fnStringToCss(o.oScroll.sXInner)
				} else {
					if (iSanityWidth == $(nScrollBody).width() && $(nScrollBody).height() < $(o.nTable).height()) {
						o.nTable.style.width = _fnStringToCss(iSanityWidth - o.oScroll.iBarWidth);
						if ($(o.nTable).outerWidth() > iSanityWidth - o.oScroll.iBarWidth) {
							o.nTable.style.width = _fnStringToCss(iSanityWidth)
						}
					} else {
						o.nTable.style.width = _fnStringToCss(iSanityWidth)
					}
				}
			}
			iSanityWidth = $(o.nTable).outerWidth();
			if (o.oScroll.sX === "") {
				nScrollBody.style.width = _fnStringToCss(iSanityWidth + o.oScroll.iBarWidth);
				nScrollHeadInner.parentNode.style.width = _fnStringToCss(iSanityWidth + o.oScroll.iBarWidth)
			}
			anHeadToSize = o.nTHead.getElementsByTagName("tr");
			anHeadSizers = nTheadSize.getElementsByTagName("tr");
			_fnApplyToChildren(function(nSizer, nToSize) {
				oStyle = nSizer.style;
				oStyle.paddingTop = "0";
				oStyle.paddingBottom = "0";
				oStyle.borderTopWidth = "0";
				oStyle.borderBottomWidth = "0";
				oStyle.height = 0;
				iWidth = $(nSizer).width();
				nToSize.style.width = _fnStringToCss(iWidth);
				aApplied.push(iWidth)
			},
			anHeadSizers, anHeadToSize);
			$(anHeadSizers).height(0);
			if (o.nTFoot !== null) {
				anFootSizers = nTfootSize.getElementsByTagName("tr");
				anFootToSize = o.nTFoot.getElementsByTagName("tr");
				_fnApplyToChildren(function(nSizer, nToSize) {
					oStyle = nSizer.style;
					oStyle.paddingTop = "0";
					oStyle.paddingBottom = "0";
					oStyle.borderTopWidth = "0";
					oStyle.borderBottomWidth = "0";
					oStyle.height = 0;
					iWidth = $(nSizer).width();
					nToSize.style.width = _fnStringToCss(iWidth);
					aApplied.push(iWidth)
				},
				anFootSizers, anFootToSize);
				$(anFootSizers).height(0)
			}
			_fnApplyToChildren(function(nSizer) {
				nSizer.innerHTML = "";
				nSizer.style.width = _fnStringToCss(aApplied.shift())
			},
			anHeadSizers);
			if (o.nTFoot !== null) {
				_fnApplyToChildren(function(nSizer) {
					nSizer.innerHTML = "";
					nSizer.style.width = _fnStringToCss(aApplied.shift())
				},
				anFootSizers)
			}
			if ($(o.nTable).outerWidth() < iSanityWidth) {
				if (o.oScroll.sX === "") {
					_fnLog(o, 1, "The table cannot fit into the current element which will cause column misalignment. It is suggested that you enable x-scrolling or increase the width the table has in which to be drawn")
				} else {
					if (o.oScroll.sXInner !== "") {
						_fnLog(o, 1, "The table cannot fit into the current element which will cause column misalignment. It is suggested that you increase the sScrollXInner property to allow it to draw in a larger area, or simply remove that parameter to allow automatic calculation")
					}
				}
			}
			if (o.oScroll.sY === "") {
				if ($.browser.msie && $.browser.version <= 7) {
					nScrollBody.style.height = _fnStringToCss(o.nTable.offsetHeight + o.oScroll.iBarWidth)
				}
			}
			if (o.oScroll.sY !== "" && o.oScroll.bCollapse) {
				nScrollBody.style.height = _fnStringToCss(o.oScroll.sY);
				var iExtra = (o.oScroll.sX !== "" && o.nTable.offsetWidth > nScrollBody.offsetWidth) ? o.oScroll.iBarWidth: 0;
				if (o.nTable.offsetHeight < nScrollBody.offsetHeight) {
					nScrollBody.style.height = _fnStringToCss($(o.nTable).height() + iExtra)
				}
			}
			var iOuterWidth = $(o.nTable).outerWidth();
			nScrollHeadTable.style.width = _fnStringToCss(iOuterWidth);
			nScrollHeadInner.style.width = _fnStringToCss(iOuterWidth + o.oScroll.iBarWidth);
			if (o.nTFoot !== null) {
				var nScrollFootInner = o.nScrollFoot.getElementsByTagName("div")[0],
				nScrollFootTable = nScrollFootInner.getElementsByTagName("table")[0];
				nScrollFootInner.style.width = _fnStringToCss(o.nTable.offsetWidth + o.oScroll.iBarWidth);
				nScrollFootTable.style.width = _fnStringToCss(o.nTable.offsetWidth)
			}
			if (o.bSorted || o.bFiltered) {
				nScrollBody.scrollTop = 0
			}
		}
		function _fnAjustColumnSizing(oSettings) {
			if (oSettings.oFeatures.bAutoWidth === false) {
				return false
			}
			_fnCalculateColumnWidths(oSettings);
			for (var i = 0,
			iLen = oSettings.aoColumns.length; i < iLen; i++) {
				oSettings.aoColumns[i].nTh.style.width = oSettings.aoColumns[i].sWidth
			}
		}
		function _fnFeatureHtmlFilter(oSettings) {
			var sSearchStr = oSettings.oLanguage.sSearch;
			sSearchStr = (sSearchStr.indexOf("_INPUT_") !== -1) ? sSearchStr.replace("_INPUT_", '<input type="text" />') : sSearchStr === "" ? '<input type="text" />': sSearchStr + ' <input type="text" />';
			var nFilter = document.createElement("div");
			nFilter.className = oSettings.oClasses.sFilter;
			nFilter.innerHTML = "<label>" + sSearchStr + "</label>";
			if (oSettings.sTableId !== "" && typeof oSettings.aanFeatures.f == "undefined") {
				nFilter.setAttribute("id", oSettings.sTableId + "_filter")
			}
			var jqFilter = $("input", nFilter);
			jqFilter.val(oSettings.oPreviousSearch.sSearch.replace('"', "&quot;"));
			jqFilter.bind("keyup.DT",
			function(e) {
				var n = oSettings.aanFeatures.f;
				for (var i = 0,
				iLen = n.length; i < iLen; i++) {
					if (n[i] != this.parentNode) {
						$("input", n[i]).val(this.value)
					}
				}
				if (this.value != oSettings.oPreviousSearch.sSearch) {
					_fnFilterComplete(oSettings, {
						sSearch: this.value,
						bRegex: oSettings.oPreviousSearch.bRegex,
						bSmart: oSettings.oPreviousSearch.bSmart
					})
				}
			});
			jqFilter.bind("keypress.DT",
			function(e) {
				if (e.keyCode == 13) {
					return false
				}
			});
			return nFilter
		}
		function _fnFilterComplete(oSettings, oInput, iForce) {
			_fnFilter(oSettings, oInput.sSearch, iForce, oInput.bRegex, oInput.bSmart);
			for (var i = 0; i < oSettings.aoPreSearchCols.length; i++) {
				_fnFilterColumn(oSettings, oSettings.aoPreSearchCols[i].sSearch, i, oSettings.aoPreSearchCols[i].bRegex, oSettings.aoPreSearchCols[i].bSmart)
			}
			if (_oExt.afnFiltering.length !== 0) {
				_fnFilterCustom(oSettings)
			}
			oSettings.bFiltered = true;
			oSettings._iDisplayStart = 0;
			_fnCalculateEnd(oSettings);
			_fnDraw(oSettings);
			_fnBuildSearchArray(oSettings, 0)
		}
		function _fnFilterCustom(oSettings) {
			var afnFilters = _oExt.afnFiltering;
			for (var i = 0,
			iLen = afnFilters.length; i < iLen; i++) {
				var iCorrector = 0;
				for (var j = 0,
				jLen = oSettings.aiDisplay.length; j < jLen; j++) {
					var iDisIndex = oSettings.aiDisplay[j - iCorrector];
					if (!afnFilters[i](oSettings, _fnGetRowData(oSettings, iDisIndex, "filter"), iDisIndex)) {
						oSettings.aiDisplay.splice(j - iCorrector, 1);
						iCorrector++
					}
				}
			}
		}
		function _fnFilterColumn(oSettings, sInput, iColumn, bRegex, bSmart) {
			if (sInput === "") {
				return
			}
			var iIndexCorrector = 0;
			var rpSearch = _fnFilterCreateSearch(sInput, bRegex, bSmart);
			for (var i = oSettings.aiDisplay.length - 1; i >= 0; i--) {
				var sData = _fnDataToSearch(_fnGetCellData(oSettings, oSettings.aiDisplay[i], iColumn, "filter"), oSettings.aoColumns[iColumn].sType);
				if (!rpSearch.test(sData)) {
					oSettings.aiDisplay.splice(i, 1);
					iIndexCorrector++
				}
			}
		}
		function _fnFilter(oSettings, sInput, iForce, bRegex, bSmart) {
			var i;
			var rpSearch = _fnFilterCreateSearch(sInput, bRegex, bSmart);
			if (typeof iForce == "undefined" || iForce === null) {
				iForce = 0
			}
			if (_oExt.afnFiltering.length !== 0) {
				iForce = 1
			}
			if (sInput.length <= 0) {
				oSettings.aiDisplay.splice(0, oSettings.aiDisplay.length);
				oSettings.aiDisplay = oSettings.aiDisplayMaster.slice()
			} else {
				if (oSettings.aiDisplay.length == oSettings.aiDisplayMaster.length || oSettings.oPreviousSearch.sSearch.length > sInput.length || iForce == 1 || sInput.indexOf(oSettings.oPreviousSearch.sSearch) !== 0) {
					oSettings.aiDisplay.splice(0, oSettings.aiDisplay.length);
					_fnBuildSearchArray(oSettings, 1);
					for (i = 0; i < oSettings.aiDisplayMaster.length; i++) {
						if (rpSearch.test(oSettings.asDataSearch[i])) {
							oSettings.aiDisplay.push(oSettings.aiDisplayMaster[i])
						}
					}
				} else {
					var iIndexCorrector = 0;
					for (i = 0; i < oSettings.asDataSearch.length; i++) {
						if (!rpSearch.test(oSettings.asDataSearch[i])) {
							oSettings.aiDisplay.splice(i - iIndexCorrector, 1);
							iIndexCorrector++
						}
					}
				}
			}
			oSettings.oPreviousSearch.sSearch = sInput;
			oSettings.oPreviousSearch.bRegex = bRegex;
			oSettings.oPreviousSearch.bSmart = bSmart
		}
		function _fnBuildSearchArray(oSettings, iMaster) {
			oSettings.asDataSearch.splice(0, oSettings.asDataSearch.length);
			var aArray = (typeof iMaster != "undefined" && iMaster == 1) ? oSettings.aiDisplayMaster: oSettings.aiDisplay;
			for (var i = 0,
			iLen = aArray.length; i < iLen; i++) {
				oSettings.asDataSearch[i] = _fnBuildSearchRow(oSettings, _fnGetRowData(oSettings, aArray[i], "filter"))
			}
		}
		function _fnBuildSearchRow(oSettings, aData) {
			var sSearch = "";
			if (typeof oSettings.__nTmpFilter == "undefined") {
				oSettings.__nTmpFilter = document.createElement("div")
			}
			var nTmp = oSettings.__nTmpFilter;
			for (var j = 0,
			jLen = oSettings.aoColumns.length; j < jLen; j++) {
				if (oSettings.aoColumns[j].bSearchable) {
					var sData = aData[j];
					sSearch += _fnDataToSearch(sData, oSettings.aoColumns[j].sType) + "  "
				}
			}
			if (sSearch.indexOf("&") !== -1) {
				nTmp.innerHTML = sSearch;
				sSearch = nTmp.textContent ? nTmp.textContent: nTmp.innerText;
				sSearch = sSearch.replace(/\n/g, " ").replace(/\r/g, "")
			}
			return sSearch
		}
		function _fnFilterCreateSearch(sSearch, bRegex, bSmart) {
			var asSearch, sRegExpString;
			if (bSmart) {
				asSearch = bRegex ? sSearch.split(" ") : _fnEscapeRegex(sSearch).split(" ");
				sRegExpString = "^(?=.*?" + asSearch.join(")(?=.*?") + ").*$";
				return new RegExp(sRegExpString, "i")
			} else {
				sSearch = bRegex ? sSearch: _fnEscapeRegex(sSearch);
				return new RegExp(sSearch, "i")
			}
		}
		function _fnDataToSearch(sData, sType) {
			if (typeof _oExt.ofnSearch[sType] == "function") {
				return _oExt.ofnSearch[sType](sData)
			} else {
				if (sType == "html") {
					return sData.replace(/\n/g, " ").replace(/<.*?>/g, "")
				} else {
					if (typeof sData == "string") {
						return sData.replace(/\n/g, " ")
					} else {
						if (sData === null) {
							return ""
						}
					}
				}
			}
			return sData
		}
		function _fnSort(oSettings, bApplyClasses) {
			var iDataSort, iDataType, i, iLen, j, jLen, aaSort = [],
			aiOrig = [],
			oSort = _oExt.oSort,
			aoData = oSettings.aoData,
			aoColumns = oSettings.aoColumns;
			if (!oSettings.oFeatures.bServerSide && (oSettings.aaSorting.length !== 0 || oSettings.aaSortingFixed !== null)) {
				if (oSettings.aaSortingFixed !== null) {
					aaSort = oSettings.aaSortingFixed.concat(oSettings.aaSorting)
				} else {
					aaSort = oSettings.aaSorting.slice()
				}
				for (i = 0; i < aaSort.length; i++) {
					var iColumn = aaSort[i][0];
					var iVisColumn = _fnColumnIndexToVisible(oSettings, iColumn);
					var sDataType = oSettings.aoColumns[iColumn].sSortDataType;
					if (typeof _oExt.afnSortData[sDataType] != "undefined") {
						var aData = _oExt.afnSortData[sDataType](oSettings, iColumn, iVisColumn);
						for (j = 0, jLen = aoData.length; j < jLen; j++) {
							_fnSetCellData(oSettings, j, iColumn, aData[j])
						}
					}
				}
				for (i = 0, iLen = oSettings.aiDisplayMaster.length; i < iLen; i++) {
					aiOrig[oSettings.aiDisplayMaster[i]] = i
				}
				var iSortLen = aaSort.length;
				oSettings.aiDisplayMaster.sort(function(a, b) {
					var iTest, iDataSort, sDataType;
					for (i = 0; i < iSortLen; i++) {
						iDataSort = aoColumns[aaSort[i][0]].iDataSort;
						sDataType = aoColumns[iDataSort].sType;
						iTest = oSort[(sDataType ? sDataType: "string") + "-" + aaSort[i][1]](_fnGetCellData(oSettings, a, iDataSort, "sort"), _fnGetCellData(oSettings, b, iDataSort, "sort"));
						if (iTest !== 0) {
							return iTest
						}
					}
					return oSort["numeric-asc"](aiOrig[a], aiOrig[b])
				})
			}
			if ((typeof bApplyClasses == "undefined" || bApplyClasses) && !oSettings.oFeatures.bDeferRender) {
				_fnSortingClasses(oSettings)
			}
			oSettings.bSorted = true;
			if (oSettings.oFeatures.bFilter) {
				_fnFilterComplete(oSettings, oSettings.oPreviousSearch, 1)
			} else {
				oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
				oSettings._iDisplayStart = 0;
				_fnCalculateEnd(oSettings);
				_fnDraw(oSettings)
			}
		}
		function _fnSortAttachListener(oSettings, nNode, iDataIndex, fnCallback) {
			$(nNode).bind("click.DT",
			function(e) {
				if (oSettings.aoColumns[iDataIndex].bSortable === false) {
					return
				}
				var fnInnerSorting = function() {
					var iColumn, iNextSort;
					if (e.shiftKey) {
						var bFound = false;
						for (var i = 0; i < oSettings.aaSorting.length; i++) {
							if (oSettings.aaSorting[i][0] == iDataIndex) {
								bFound = true;
								iColumn = oSettings.aaSorting[i][0];
								iNextSort = oSettings.aaSorting[i][2] + 1;
								if (typeof oSettings.aoColumns[iColumn].asSorting[iNextSort] == "undefined") {
									oSettings.aaSorting.splice(i, 1)
								} else {
									oSettings.aaSorting[i][1] = oSettings.aoColumns[iColumn].asSorting[iNextSort];
									oSettings.aaSorting[i][2] = iNextSort
								}
								break
							}
						}
						if (bFound === false) {
							oSettings.aaSorting.push([iDataIndex, oSettings.aoColumns[iDataIndex].asSorting[0], 0])
						}
					} else {
						if (oSettings.aaSorting.length == 1 && oSettings.aaSorting[0][0] == iDataIndex) {
							iColumn = oSettings.aaSorting[0][0];
							iNextSort = oSettings.aaSorting[0][2] + 1;
							if (typeof oSettings.aoColumns[iColumn].asSorting[iNextSort] == "undefined") {
								iNextSort = 0
							}
							oSettings.aaSorting[0][1] = oSettings.aoColumns[iColumn].asSorting[iNextSort];
							oSettings.aaSorting[0][2] = iNextSort
						} else {
							oSettings.aaSorting.splice(0, oSettings.aaSorting.length);
							oSettings.aaSorting.push([iDataIndex, oSettings.aoColumns[iDataIndex].asSorting[0], 0])
						}
					}
					_fnSort(oSettings)
				};
				if (!oSettings.oFeatures.bProcessing) {
					fnInnerSorting()
				} else {
					_fnProcessingDisplay(oSettings, true);
					setTimeout(function() {
						fnInnerSorting();
						if (!oSettings.oFeatures.bServerSide) {
							_fnProcessingDisplay(oSettings, false)
						}
					},
					0)
				}
				if (typeof fnCallback == "function") {
					fnCallback(oSettings)
				}
			})
		}
		function _fnSortingClasses(oSettings) {
			var i, iLen, j, jLen, iFound;
			var aaSort, sClass;
			var iColumns = oSettings.aoColumns.length;
			var oClasses = oSettings.oClasses;
			for (i = 0; i < iColumns; i++) {
				if (oSettings.aoColumns[i].bSortable) {
					$(oSettings.aoColumns[i].nTh).removeClass(oClasses.sSortAsc + " " + oClasses.sSortDesc + " " + oSettings.aoColumns[i].sSortingClass)
				}
			}
			if (oSettings.aaSortingFixed !== null) {
				aaSort = oSettings.aaSortingFixed.concat(oSettings.aaSorting)
			} else {
				aaSort = oSettings.aaSorting.slice()
			}
			for (i = 0; i < oSettings.aoColumns.length; i++) {
				if (oSettings.aoColumns[i].bSortable) {
					sClass = oSettings.aoColumns[i].sSortingClass;
					iFound = -1;
					for (j = 0; j < aaSort.length; j++) {
						if (aaSort[j][0] == i) {
							sClass = (aaSort[j][1] == "asc") ? oClasses.sSortAsc: oClasses.sSortDesc;
							iFound = j;
							break
						}
					}
					$(oSettings.aoColumns[i].nTh).addClass(sClass);
					if (oSettings.bJUI) {
						var jqSpan = $("span", oSettings.aoColumns[i].nTh);
						jqSpan.removeClass(oClasses.sSortJUIAsc + " " + oClasses.sSortJUIDesc + " " + oClasses.sSortJUI + " " + oClasses.sSortJUIAscAllowed + " " + oClasses.sSortJUIDescAllowed);
						var sSpanClass;
						if (iFound == -1) {
							sSpanClass = oSettings.aoColumns[i].sSortingClassJUI
						} else {
							if (aaSort[iFound][1] == "asc") {
								sSpanClass = oClasses.sSortJUIAsc
							} else {
								sSpanClass = oClasses.sSortJUIDesc
							}
						}
						jqSpan.addClass(sSpanClass)
					}
				} else {
					$(oSettings.aoColumns[i].nTh).addClass(oSettings.aoColumns[i].sSortingClass)
				}
			}
			sClass = oClasses.sSortColumn;
			if (oSettings.oFeatures.bSort && oSettings.oFeatures.bSortClasses) {
				var nTds = _fnGetTdNodes(oSettings);
				if (oSettings.oFeatures.bDeferRender) {
					$(nTds).removeClass(sClass + "1 " + sClass + "2 " + sClass + "3")
				} else {
					if (nTds.length >= iColumns) {
						for (i = 0; i < iColumns; i++) {
							if (nTds[i].className.indexOf(sClass + "1") != -1) {
								for (j = 0, jLen = (nTds.length / iColumns); j < jLen; j++) {
									nTds[(iColumns * j) + i].className = $.trim(nTds[(iColumns * j) + i].className.replace(sClass + "1", ""))
								}
							} else {
								if (nTds[i].className.indexOf(sClass + "2") != -1) {
									for (j = 0, jLen = (nTds.length / iColumns); j < jLen; j++) {
										nTds[(iColumns * j) + i].className = $.trim(nTds[(iColumns * j) + i].className.replace(sClass + "2", ""))
									}
								} else {
									if (nTds[i].className.indexOf(sClass + "3") != -1) {
										for (j = 0, jLen = (nTds.length / iColumns); j < jLen; j++) {
											nTds[(iColumns * j) + i].className = $.trim(nTds[(iColumns * j) + i].className.replace(" " + sClass + "3", ""))
										}
									}
								}
							}
						}
					}
				}
				var iClass = 1,
				iTargetCol;
				for (i = 0; i < aaSort.length; i++) {
					iTargetCol = parseInt(aaSort[i][0], 10);
					for (j = 0, jLen = (nTds.length / iColumns); j < jLen; j++) {
						nTds[(iColumns * j) + iTargetCol].className += " " + sClass + iClass
					}
					if (iClass < 3) {
						iClass++
					}
				}
			}
		}
		function _fnFeatureHtmlPaginate(oSettings) {
			if (oSettings.oScroll.bInfinite) {
				return null
			}
			var nPaginate = document.createElement("div");
			nPaginate.className = oSettings.oClasses.sPaging + oSettings.sPaginationType;
			_oExt.oPagination[oSettings.sPaginationType].fnInit(oSettings, nPaginate,
			function(oSettings) {
				_fnCalculateEnd(oSettings);
				_fnDraw(oSettings)
			});
			if (typeof oSettings.aanFeatures.p == "undefined") {
				oSettings.aoDrawCallback.push({
					fn: function(oSettings) {
						_oExt.oPagination[oSettings.sPaginationType].fnUpdate(oSettings,
						function(oSettings) {
							_fnCalculateEnd(oSettings);
							_fnDraw(oSettings)
						})
					},
					sName: "pagination"
				})
			}
			return nPaginate
		}
		function _fnPageChange(oSettings, sAction) {
			var iOldStart = oSettings._iDisplayStart;
			if (sAction == "first") {
				oSettings._iDisplayStart = 0
			} else {
				if (sAction == "previous") {
					oSettings._iDisplayStart = oSettings._iDisplayLength >= 0 ? oSettings._iDisplayStart - oSettings._iDisplayLength: 0;
					if (oSettings._iDisplayStart < 0) {
						oSettings._iDisplayStart = 0
					}
				} else {
					if (sAction == "next") {
						if (oSettings._iDisplayLength >= 0) {
							if (oSettings._iDisplayStart + oSettings._iDisplayLength < oSettings.fnRecordsDisplay()) {
								oSettings._iDisplayStart += oSettings._iDisplayLength
							}
						} else {
							oSettings._iDisplayStart = 0
						}
					} else {
						if (sAction == "last") {
							if (oSettings._iDisplayLength >= 0) {
								var iPages = parseInt((oSettings.fnRecordsDisplay() - 1) / oSettings._iDisplayLength, 10) + 1;
								oSettings._iDisplayStart = (iPages - 1) * oSettings._iDisplayLength
							} else {
								oSettings._iDisplayStart = 0
							}
						} else {
							_fnLog(oSettings, 0, "Unknown paging action: " + sAction)
						}
					}
				}
			}
			return iOldStart != oSettings._iDisplayStart
		}
		function _fnFeatureHtmlInfo(oSettings) {
			var nInfo = document.createElement("div");
			nInfo.className = oSettings.oClasses.sInfo;
			if (typeof oSettings.aanFeatures.i == "undefined") {
				oSettings.aoDrawCallback.push({
					fn: _fnUpdateInfo,
					sName: "information"
				});
				if (oSettings.sTableId !== "") {
					nInfo.setAttribute("id", oSettings.sTableId + "_info")
				}
			}
			return nInfo
		}
		function _fnUpdateInfo(oSettings) {
			if (!oSettings.oFeatures.bInfo || oSettings.aanFeatures.i.length === 0) {
				return
			}
			var iStart = oSettings._iDisplayStart + 1,
			iEnd = oSettings.fnDisplayEnd(),
			iMax = oSettings.fnRecordsTotal(),
			iTotal = oSettings.fnRecordsDisplay(),
			sStart = oSettings.fnFormatNumber(iStart),
			sEnd = oSettings.fnFormatNumber(iEnd),
			sMax = oSettings.fnFormatNumber(iMax),
			sTotal = oSettings.fnFormatNumber(iTotal),
			sOut;
			if (oSettings.oScroll.bInfinite) {
				sStart = oSettings.fnFormatNumber(1)
			}
			if (oSettings.fnRecordsDisplay() === 0 && oSettings.fnRecordsDisplay() == oSettings.fnRecordsTotal()) {
				sOut = oSettings.oLanguage.sInfoEmpty + oSettings.oLanguage.sInfoPostFix
			} else {
				if (oSettings.fnRecordsDisplay() === 0) {
					sOut = oSettings.oLanguage.sInfoEmpty + " " + oSettings.oLanguage.sInfoFiltered.replace("_MAX_", sMax) + oSettings.oLanguage.sInfoPostFix
				} else {
					if (oSettings.fnRecordsDisplay() == oSettings.fnRecordsTotal()) {
						sOut = oSettings.oLanguage.sInfo.replace("_START_", sStart).replace("_END_", sEnd).replace("_TOTAL_", sTotal) + oSettings.oLanguage.sInfoPostFix
					} else {
						sOut = oSettings.oLanguage.sInfo.replace("_START_", sStart).replace("_END_", sEnd).replace("_TOTAL_", sTotal) + " " + oSettings.oLanguage.sInfoFiltered.replace("_MAX_", oSettings.fnFormatNumber(oSettings.fnRecordsTotal())) + oSettings.oLanguage.sInfoPostFix
					}
				}
			}
			if (oSettings.oLanguage.fnInfoCallback !== null) {
				sOut = oSettings.oLanguage.fnInfoCallback(oSettings, iStart, iEnd, iMax, iTotal, sOut)
			}
			var n = oSettings.aanFeatures.i;
			for (var i = 0,
			iLen = n.length; i < iLen; i++) {
				$(n[i]).html(sOut)
			}
		}
		function _fnFeatureHtmlLength(oSettings) {
			if (oSettings.oScroll.bInfinite) {
				return null
			}
			var sName = (oSettings.sTableId === "") ? "": 'name="' + oSettings.sTableId + '_length"';
			var sStdMenu = '<select size="1" ' + sName + ">";
			var i, iLen;
			if (oSettings.aLengthMenu.length == 2 && typeof oSettings.aLengthMenu[0] == "object" && typeof oSettings.aLengthMenu[1] == "object") {
				for (i = 0, iLen = oSettings.aLengthMenu[0].length; i < iLen; i++) {
					sStdMenu += '<option value="' + oSettings.aLengthMenu[0][i] + '">' + oSettings.aLengthMenu[1][i] + "</option>"
				}
			} else {
				for (i = 0, iLen = oSettings.aLengthMenu.length; i < iLen; i++) {
					sStdMenu += '<option value="' + oSettings.aLengthMenu[i] + '">' + oSettings.aLengthMenu[i] + "</option>"
				}
			}
			sStdMenu += "</select>";
			var nLength = document.createElement("div");
			if (oSettings.sTableId !== "" && typeof oSettings.aanFeatures.l == "undefined") {
				nLength.setAttribute("id", oSettings.sTableId + "_length")
			}
			nLength.className = oSettings.oClasses.sLength;
			nLength.innerHTML = "<label>" + oSettings.oLanguage.sLengthMenu.replace("_MENU_", sStdMenu) + "</label>";
			$('select option[value="' + oSettings._iDisplayLength + '"]', nLength).attr("selected", true);
			$("select", nLength).bind("change.DT",
			function(e) {
				var iVal = $(this).val();
				var n = oSettings.aanFeatures.l;
				for (i = 0, iLen = n.length; i < iLen; i++) {
					if (n[i] != this.parentNode) {
						$("select", n[i]).val(iVal)
					}
				}
				oSettings._iDisplayLength = parseInt(iVal, 10);
				_fnCalculateEnd(oSettings);
				if (oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay()) {
					oSettings._iDisplayStart = oSettings.fnDisplayEnd() - oSettings._iDisplayLength;
					if (oSettings._iDisplayStart < 0) {
						oSettings._iDisplayStart = 0
					}
				}
				if (oSettings._iDisplayLength == -1) {
					oSettings._iDisplayStart = 0
				}
				_fnDraw(oSettings)
			});
			return nLength
		}
		function _fnFeatureHtmlProcessing(oSettings) {
			var nProcessing = document.createElement("div");
			if (oSettings.sTableId !== "" && typeof oSettings.aanFeatures.r == "undefined") {
				nProcessing.setAttribute("id", oSettings.sTableId + "_processing")
			}
			nProcessing.innerHTML = oSettings.oLanguage.sProcessing;
			nProcessing.className = oSettings.oClasses.sProcessing;
			oSettings.nTable.parentNode.insertBefore(nProcessing, oSettings.nTable);
			return nProcessing
		}
		function _fnProcessingDisplay(oSettings, bShow) {
			if (oSettings.oFeatures.bProcessing) {
				var an = oSettings.aanFeatures.r;
				for (var i = 0,
				iLen = an.length; i < iLen; i++) {
					an[i].style.visibility = bShow ? "visible": "hidden"
				}
			}
		}
		function _fnVisibleToColumnIndex(oSettings, iMatch) {
			var iColumn = -1;
			for (var i = 0; i < oSettings.aoColumns.length; i++) {
				if (oSettings.aoColumns[i].bVisible === true) {
					iColumn++
				}
				if (iColumn == iMatch) {
					return i
				}
			}
			return null
		}
		function _fnColumnIndexToVisible(oSettings, iMatch) {
			var iVisible = -1;
			for (var i = 0; i < oSettings.aoColumns.length; i++) {
				if (oSettings.aoColumns[i].bVisible === true) {
					iVisible++
				}
				if (i == iMatch) {
					return oSettings.aoColumns[i].bVisible === true ? iVisible: null
				}
			}
			return null
		}
		function _fnNodeToDataIndex(s, n) {
			var i, iLen;
			for (i = s._iDisplayStart, iLen = s._iDisplayEnd; i < iLen; i++) {
				if (s.aoData[s.aiDisplay[i]].nTr == n) {
					return s.aiDisplay[i]
				}
			}
			for (i = 0, iLen = s.aoData.length; i < iLen; i++) {
				if (s.aoData[i].nTr == n) {
					return i
				}
			}
			return null
		}
		function _fnVisbleColumns(oS) {
			var iVis = 0;
			for (var i = 0; i < oS.aoColumns.length; i++) {
				if (oS.aoColumns[i].bVisible === true) {
					iVis++
				}
			}
			return iVis
		}
		function _fnCalculateEnd(oSettings) {
			if (oSettings.oFeatures.bPaginate === false) {
				oSettings._iDisplayEnd = oSettings.aiDisplay.length
			} else {
				if (oSettings._iDisplayStart + oSettings._iDisplayLength > oSettings.aiDisplay.length || oSettings._iDisplayLength == -1) {
					oSettings._iDisplayEnd = oSettings.aiDisplay.length
				} else {
					oSettings._iDisplayEnd = oSettings._iDisplayStart + oSettings._iDisplayLength
				}
			}
		}
		function _fnConvertToWidth(sWidth, nParent) {
			if (!sWidth || sWidth === null || sWidth === "") {
				return 0
			}
			if (typeof nParent == "undefined") {
				nParent = document.getElementsByTagName("body")[0]
			}
			var iWidth;
			var nTmp = document.createElement("div");
			nTmp.style.width = _fnStringToCss(sWidth);
			nParent.appendChild(nTmp);
			iWidth = nTmp.offsetWidth;
			nParent.removeChild(nTmp);
			return (iWidth)
		}
		function _fnCalculateColumnWidths(oSettings) {
			var iTableWidth = oSettings.nTable.offsetWidth;
			var iUserInputs = 0;
			var iTmpWidth;
			var iVisibleColumns = 0;
			var iColums = oSettings.aoColumns.length;
			var i, iIndex, iCorrector, iWidth;
			var oHeaders = $("th", oSettings.nTHead);
			for (i = 0; i < iColums; i++) {
				if (oSettings.aoColumns[i].bVisible) {
					iVisibleColumns++;
					if (oSettings.aoColumns[i].sWidth !== null) {
						iTmpWidth = _fnConvertToWidth(oSettings.aoColumns[i].sWidthOrig, oSettings.nTable.parentNode);
						if (iTmpWidth !== null) {
							oSettings.aoColumns[i].sWidth = _fnStringToCss(iTmpWidth)
						}
						iUserInputs++
					}
				}
			}
			if (iColums == oHeaders.length && iUserInputs === 0 && iVisibleColumns == iColums && oSettings.oScroll.sX === "" && oSettings.oScroll.sY === "") {
				for (i = 0; i < oSettings.aoColumns.length; i++) {
					iTmpWidth = $(oHeaders[i]).width();
					if (iTmpWidth !== null) {
						oSettings.aoColumns[i].sWidth = _fnStringToCss(iTmpWidth)
					}
				}
			} else {
				var nCalcTmp = oSettings.nTable.cloneNode(false),
				nTheadClone = oSettings.nTHead.cloneNode(true),
				nBody = document.createElement("tbody"),
				nTr = document.createElement("tr"),
				nDivSizing;
				nCalcTmp.removeAttribute("id");
				nCalcTmp.appendChild(nTheadClone);
				if (oSettings.nTFoot !== null) {
					nCalcTmp.appendChild(oSettings.nTFoot.cloneNode(true));
					_fnApplyToChildren(function(n) {
						n.style.width = ""
					},
					nCalcTmp.getElementsByTagName("tr"))
				}
				nCalcTmp.appendChild(nBody);
				nBody.appendChild(nTr);
				var jqColSizing = $("thead th", nCalcTmp);
				if (jqColSizing.length === 0) {
					jqColSizing = $("tbody tr:eq(0)>td", nCalcTmp)
				}
				var nThs = _fnGetUniqueThs(oSettings, nTheadClone);
				iCorrector = 0;
				for (i = 0; i < iColums; i++) {
					var oColumn = oSettings.aoColumns[i];
					if (oColumn.bVisible && oColumn.sWidthOrig !== null && oColumn.sWidthOrig !== "") {
						nThs[i - iCorrector].style.width = _fnStringToCss(oColumn.sWidthOrig)
					} else {
						if (oColumn.bVisible) {
							nThs[i - iCorrector].style.width = ""
						} else {
							iCorrector++
						}
					}
				}
				for (i = 0; i < iColums; i++) {
					if (oSettings.aoColumns[i].bVisible) {
						var nTd = _fnGetWidestNode(oSettings, i);
						if (nTd !== null) {
							nTd = nTd.cloneNode(true);
							if (oSettings.aoColumns[i].sContentPadding !== "") {
								nTd.innerHTML += oSettings.aoColumns[i].sContentPadding
							}
							nTr.appendChild(nTd)
						}
					}
				}
				var nWrapper = oSettings.nTable.parentNode;
				nWrapper.appendChild(nCalcTmp);
				if (oSettings.oScroll.sX !== "" && oSettings.oScroll.sXInner !== "") {
					nCalcTmp.style.width = _fnStringToCss(oSettings.oScroll.sXInner)
				} else {
					if (oSettings.oScroll.sX !== "") {
						nCalcTmp.style.width = "";
						if ($(nCalcTmp).width() < nWrapper.offsetWidth) {
							nCalcTmp.style.width = _fnStringToCss(nWrapper.offsetWidth)
						}
					} else {
						if (oSettings.oScroll.sY !== "") {
							nCalcTmp.style.width = _fnStringToCss(nWrapper.offsetWidth)
						}
					}
				}
				nCalcTmp.style.visibility = "hidden";
				_fnScrollingWidthAdjust(oSettings, nCalcTmp);
				var oNodes = $("tbody tr:eq(0)", nCalcTmp).children();
				if (oNodes.length === 0) {
					oNodes = _fnGetUniqueThs(oSettings, $("thead", nCalcTmp)[0])
				}
				if (oSettings.oScroll.sX !== "") {
					var iTotal = 0;
					iCorrector = 0;
					for (i = 0; i < oSettings.aoColumns.length; i++) {
						if (oSettings.aoColumns[i].bVisible) {
							if (oSettings.aoColumns[i].sWidthOrig === null) {
								iTotal += $(oNodes[iCorrector]).outerWidth()
							} else {
								iTotal += parseInt(oSettings.aoColumns[i].sWidth.replace("px", ""), 10) + ($(oNodes[iCorrector]).outerWidth() - $(oNodes[iCorrector]).width())
							}
							iCorrector++
						}
					}
					nCalcTmp.style.width = _fnStringToCss(iTotal);
					oSettings.nTable.style.width = _fnStringToCss(iTotal)
				}
				iCorrector = 0;
				for (i = 0; i < oSettings.aoColumns.length; i++) {
					if (oSettings.aoColumns[i].bVisible) {
						iWidth = $(oNodes[iCorrector]).width();
						if (iWidth !== null && iWidth > 0) {
							oSettings.aoColumns[i].sWidth = _fnStringToCss(iWidth)
						}
						iCorrector++
					}
				}
				oSettings.nTable.style.width = _fnStringToCss($(nCalcTmp).outerWidth());
				nCalcTmp.parentNode.removeChild(nCalcTmp)
			}
		}
		function _fnScrollingWidthAdjust(oSettings, n) {
			if (oSettings.oScroll.sX === "" && oSettings.oScroll.sY !== "") {
				var iOrigWidth = $(n).width();
				n.style.width = _fnStringToCss($(n).outerWidth() - oSettings.oScroll.iBarWidth)
			} else {
				if (oSettings.oScroll.sX !== "") {
					n.style.width = _fnStringToCss($(n).outerWidth())
				}
			}
		}
		function _fnGetWidestNode(oSettings, iCol) {
			var iMaxIndex = _fnGetMaxLenString(oSettings, iCol);
			if (iMaxIndex < 0) {
				return null
			}
			if (oSettings.aoData[iMaxIndex].nTr === null) {
				var n = document.createElement("td");
				n.innerHTML = _fnGetCellData(oSettings, iMaxIndex, iCol, "");
				return n
			}
			return _fnGetTdNodes(oSettings, iMaxIndex)[iCol]
		}
		function _fnGetMaxLenString(oSettings, iCol) {
			var iMax = -1;
			var iMaxIndex = -1;
			for (var i = 0; i < oSettings.aoData.length; i++) {
				var s = _fnGetCellData(oSettings, i, iCol, "display") + "";
				s = s.replace(/<.*?>/g, "");
				if (s.length > iMax) {
					iMax = s.length;
					iMaxIndex = i
				}
			}
			return iMaxIndex
		}
		function _fnStringToCss(s) {
			if (s === null) {
				return "0px"
			}
			if (typeof s == "number") {
				if (s < 0) {
					return "0px"
				}
				return s + "px"
			}
			var c = s.charCodeAt(s.length - 1);
			if (c < 48 || c > 57) {
				return s
			}
			return s + "px"
		}
		function _fnArrayCmp(aArray1, aArray2) {
			if (aArray1.length != aArray2.length) {
				return 1
			}
			for (var i = 0; i < aArray1.length; i++) {
				if (aArray1[i] != aArray2[i]) {
					return 2
				}
			}
			return 0
		}
		function _fnDetectType(sData) {
			var aTypes = _oExt.aTypes;
			var iLen = aTypes.length;
			for (var i = 0; i < iLen; i++) {
				var sType = aTypes[i](sData);
				if (sType !== null) {
					return sType
				}
			}
			return "string"
		}
		function _fnSettingsFromNode(nTable) {
			for (var i = 0; i < _aoSettings.length; i++) {
				if (_aoSettings[i].nTable == nTable) {
					return _aoSettings[i]
				}
			}
			return null
		}
		function _fnGetDataMaster(oSettings) {
			var aData = [];
			var iLen = oSettings.aoData.length;
			for (var i = 0; i < iLen; i++) {
				aData.push(oSettings.aoData[i]._aData)
			}
			return aData
		}
		function _fnGetTrNodes(oSettings) {
			var aNodes = [];
			for (var i = 0,
			iLen = oSettings.aoData.length; i < iLen; i++) {
				if (oSettings.aoData[i].nTr !== null) {
					aNodes.push(oSettings.aoData[i].nTr)
				}
			}
			return aNodes
		}
		function _fnGetTdNodes(oSettings, iIndividualRow) {
			var anReturn = [];
			var iCorrector;
			var anTds;
			var iRow, iRows = oSettings.aoData.length,
			iColumn, iColumns, oData, sNodeName, iStart = 0,
			iEnd = iRows;
			if (typeof iIndividualRow != "undefined") {
				iStart = iIndividualRow;
				iEnd = iIndividualRow + 1
			}
			for (iRow = iStart; iRow < iEnd; iRow++) {
				oData = oSettings.aoData[iRow];
				if (oData.nTr !== null) {
					anTds = [];
					for (iColumn = 0, iColumns = oData.nTr.childNodes.length; iColumn < iColumns; iColumn++) {
						sNodeName = oData.nTr.childNodes[iColumn].nodeName.toLowerCase();
						if (sNodeName == "td" || sNodeName == "th") {
							anTds.push(oData.nTr.childNodes[iColumn])
						}
					}
					iCorrector = 0;
					for (iColumn = 0, iColumns = oSettings.aoColumns.length; iColumn < iColumns; iColumn++) {
						if (oSettings.aoColumns[iColumn].bVisible) {
							anReturn.push(anTds[iColumn - iCorrector])
						} else {
							anReturn.push(oData._anHidden[iColumn]);
							iCorrector++
						}
					}
				}
			}
			return anReturn
		}
		function _fnEscapeRegex(sVal) {
			var acEscape = ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^"];
			var reReplace = new RegExp("(\\" + acEscape.join("|\\") + ")", "g");
			return sVal.replace(reReplace, "\\$1")
		}
		function _fnDeleteIndex(a, iTarget) {
			var iTargetIndex = -1;
			for (var i = 0,
			iLen = a.length; i < iLen; i++) {
				if (a[i] == iTarget) {
					iTargetIndex = i
				} else {
					if (a[i] > iTarget) {
						a[i]--
					}
				}
			}
			if (iTargetIndex != -1) {
				a.splice(iTargetIndex, 1)
			}
		}
		function _fnReOrderIndex(oSettings, sColumns) {
			var aColumns = sColumns.split(",");
			var aiReturn = [];
			for (var i = 0,
			iLen = oSettings.aoColumns.length; i < iLen; i++) {
				for (var j = 0; j < iLen; j++) {
					if (oSettings.aoColumns[i].sName == aColumns[j]) {
						aiReturn.push(j);
						break
					}
				}
			}
			return aiReturn
		}
		function _fnColumnOrdering(oSettings) {
			var sNames = "";
			for (var i = 0,
			iLen = oSettings.aoColumns.length; i < iLen; i++) {
				sNames += oSettings.aoColumns[i].sName + ","
			}
			if (sNames.length == iLen) {
				return ""
			}
			return sNames.slice(0, -1)
		}
		function _fnLog(oSettings, iLevel, sMesg) {
			var sAlert = oSettings.sTableId === "" ? "DataTables warning: " + sMesg: "DataTables warning (table id = '" + oSettings.sTableId + "'): " + sMesg;
			if (iLevel === 0) {
				if (_oExt.sErrMode == "alert") {
					alert(sAlert)
				} else {
					throw sAlert
				}
				return
			} else {
				if (typeof console != "undefined" && typeof console.log != "undefined") {
					console.log(sAlert)
				}
			}
		}
		function _fnClearTable(oSettings) {
			oSettings.aoData.splice(0, oSettings.aoData.length);
			oSettings.aiDisplayMaster.splice(0, oSettings.aiDisplayMaster.length);
			oSettings.aiDisplay.splice(0, oSettings.aiDisplay.length);
			_fnCalculateEnd(oSettings)
		}
		function _fnSaveState(oSettings) {
			if (!oSettings.oFeatures.bStateSave || typeof oSettings.bDestroying != "undefined") {
				return
			}
			var i, iLen, sTmp;
			var sValue = "{";
			sValue += '"iCreate":' + new Date().getTime() + ",";
			sValue += '"iStart":' + (oSettings.oScroll.bInfinite ? 0 : oSettings._iDisplayStart) + ",";
			sValue += '"iEnd":' + (oSettings.oScroll.bInfinite ? oSettings._iDisplayLength: oSettings._iDisplayEnd) + ",";
			sValue += '"iLength":' + oSettings._iDisplayLength + ",";
			sValue += '"sFilter":"' + encodeURIComponent(oSettings.oPreviousSearch.sSearch) + '",';
			sValue += '"sFilterEsc":' + !oSettings.oPreviousSearch.bRegex + ",";
			sValue += '"aaSorting":[ ';
			for (i = 0; i < oSettings.aaSorting.length; i++) {
				sValue += "[" + oSettings.aaSorting[i][0] + ',"' + oSettings.aaSorting[i][1] + '"],'
			}
			sValue = sValue.substring(0, sValue.length - 1);
			sValue += "],";
			sValue += '"aaSearchCols":[ ';
			for (i = 0; i < oSettings.aoPreSearchCols.length; i++) {
				sValue += '["' + encodeURIComponent(oSettings.aoPreSearchCols[i].sSearch) + '",' + !oSettings.aoPreSearchCols[i].bRegex + "],"
			}
			sValue = sValue.substring(0, sValue.length - 1);
			sValue += "],";
			sValue += '"abVisCols":[ ';
			for (i = 0; i < oSettings.aoColumns.length; i++) {
				sValue += oSettings.aoColumns[i].bVisible + ","
			}
			sValue = sValue.substring(0, sValue.length - 1);
			sValue += "]";
			for (i = 0, iLen = oSettings.aoStateSave.length; i < iLen; i++) {
				sTmp = oSettings.aoStateSave[i].fn(oSettings, sValue);
				if (sTmp !== "") {
					sValue = sTmp
				}
			}
			sValue += "}";
			_fnCreateCookie(oSettings.sCookiePrefix + oSettings.sInstance, sValue, oSettings.iCookieDuration, oSettings.sCookiePrefix, oSettings.fnCookieCallback)
		}
		function _fnLoadState(oSettings, oInit) {
			if (!oSettings.oFeatures.bStateSave) {
				return
			}
			var oData, i, iLen;
			var sData = _fnReadCookie(oSettings.sCookiePrefix + oSettings.sInstance);
			if (sData !== null && sData !== "") {
				try {
					oData = (typeof $.parseJSON == "function") ? $.parseJSON(sData.replace(/'/g, '"')) : eval("(" + sData + ")")
				} catch(e) {
					return
				}
				for (i = 0, iLen = oSettings.aoStateLoad.length; i < iLen; i++) {
					if (!oSettings.aoStateLoad[i].fn(oSettings, oData)) {
						return
					}
				}
				oSettings.oLoadedState = $.extend(true, {},
				oData);
				oSettings._iDisplayStart = oData.iStart;
				oSettings.iInitDisplayStart = oData.iStart;
				oSettings._iDisplayEnd = oData.iEnd;
				oSettings._iDisplayLength = oData.iLength;
				oSettings.oPreviousSearch.sSearch = decodeURIComponent(oData.sFilter);
				oSettings.aaSorting = oData.aaSorting.slice();
				oSettings.saved_aaSorting = oData.aaSorting.slice();
				if (typeof oData.sFilterEsc != "undefined") {
					oSettings.oPreviousSearch.bRegex = !oData.sFilterEsc
				}
				if (typeof oData.aaSearchCols != "undefined") {
					for (i = 0; i < oData.aaSearchCols.length; i++) {
						oSettings.aoPreSearchCols[i] = {
							sSearch: decodeURIComponent(oData.aaSearchCols[i][0]),
							bRegex: !oData.aaSearchCols[i][1]
						}
					}
				}
				if (typeof oData.abVisCols != "undefined") {
					oInit.saved_aoColumns = [];
					for (i = 0; i < oData.abVisCols.length; i++) {
						oInit.saved_aoColumns[i] = {};
						oInit.saved_aoColumns[i].bVisible = oData.abVisCols[i]
					}
				}
			}
		}
		function _fnCreateCookie(sName, sValue, iSecs, sBaseName, fnCallback) {
			var date = new Date();
			date.setTime(date.getTime() + (iSecs * 1000));
			var aParts = window.location.pathname.split("/");
			var sNameFile = sName + "_" + aParts.pop().replace(/[\/:]/g, "").toLowerCase();
			var sFullCookie, oData;
			if (fnCallback !== null) {
				oData = (typeof $.parseJSON == "function") ? $.parseJSON(sValue) : eval("(" + sValue + ")");
				sFullCookie = fnCallback(sNameFile, oData, date.toGMTString(), aParts.join("/") + "/")
			} else {
				sFullCookie = sNameFile + "=" + encodeURIComponent(sValue) + "; expires=" + date.toGMTString() + "; path=" + aParts.join("/") + "/"
			}
			var sOldName = "",
			iOldTime = 9999999999999;
			var iLength = _fnReadCookie(sNameFile) !== null ? document.cookie.length: sFullCookie.length + document.cookie.length;
			if (iLength + 10 > 4096) {
				var aCookies = document.cookie.split(";");
				for (var i = 0,
				iLen = aCookies.length; i < iLen; i++) {
					if (aCookies[i].indexOf(sBaseName) != -1) {
						var aSplitCookie = aCookies[i].split("=");
						try {
							oData = eval("(" + decodeURIComponent(aSplitCookie[1]) + ")")
						} catch(e) {
							continue
						}
						if (typeof oData.iCreate != "undefined" && oData.iCreate < iOldTime) {
							sOldName = aSplitCookie[0];
							iOldTime = oData.iCreate
						}
					}
				}
				if (sOldName !== "") {
					document.cookie = sOldName + "=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=" + aParts.join("/") + "/"
				}
			}
			document.cookie = sFullCookie
		}
		function _fnReadCookie(sName) {
			var aParts = window.location.pathname.split("/"),
			sNameEQ = sName + "_" + aParts[aParts.length - 1].replace(/[\/:]/g, "").toLowerCase() + "=",
			sCookieContents = document.cookie.split(";");
			for (var i = 0; i < sCookieContents.length; i++) {
				var c = sCookieContents[i];
				while (c.charAt(0) == " ") {
					c = c.substring(1, c.length)
				}
				if (c.indexOf(sNameEQ) === 0) {
					return decodeURIComponent(c.substring(sNameEQ.length, c.length))
				}
			}
			return null
		}
		function _fnDetectHeader(aLayout, nThead) {
			var nTrs = nThead.getElementsByTagName("tr");
			var nCell;
			var i, j, k, l, iLen, jLen, iColShifted;
			var fnShiftCol = function(a, i, j) {
				while (typeof a[i][j] != "undefined") {
					j++
				}
				return j
			};
			aLayout.splice(0, aLayout.length);
			for (i = 0, iLen = nTrs.length; i < iLen; i++) {
				aLayout.push([])
			}
			for (i = 0, iLen = nTrs.length; i < iLen; i++) {
				var iColumn = 0;
				for (j = 0, jLen = nTrs[i].childNodes.length; j < jLen; j++) {
					nCell = nTrs[i].childNodes[j];
					if (nCell.nodeName.toUpperCase() == "TD" || nCell.nodeName.toUpperCase() == "TH") {
						var iColspan = nCell.getAttribute("colspan") * 1;
						var iRowspan = nCell.getAttribute("rowspan") * 1;
						iColspan = (!iColspan || iColspan === 0 || iColspan === 1) ? 1 : iColspan;
						iRowspan = (!iRowspan || iRowspan === 0 || iRowspan === 1) ? 1 : iRowspan;
						iColShifted = fnShiftCol(aLayout, i, iColumn);
						for (l = 0; l < iColspan; l++) {
							for (k = 0; k < iRowspan; k++) {
								aLayout[i + k][iColShifted + l] = {
									cell: nCell,
									unique: iColspan == 1 ? true: false
								};
								aLayout[i + k].nTr = nTrs[i]
							}
						}
					}
				}
			}
		}
		function _fnGetUniqueThs(oSettings, nHeader, aLayout) {
			var aReturn = [];
			if (typeof aLayout == "undefined") {
				aLayout = oSettings.aoHeader;
				if (typeof nHeader != "undefined") {
					aLayout = [];
					_fnDetectHeader(aLayout, nHeader)
				}
			}
			for (var i = 0,
			iLen = aLayout.length; i < iLen; i++) {
				for (var j = 0,
				jLen = aLayout[i].length; j < jLen; j++) {
					if (aLayout[i][j].unique && (typeof aReturn[j] == "undefined" || !oSettings.bSortCellsTop)) {
						aReturn[j] = aLayout[i][j].cell
					}
				}
			}
			return aReturn
		}
		function _fnScrollBarWidth() {
			var inner = document.createElement("p");
			var style = inner.style;
			style.width = "100%";
			style.height = "200px";
			var outer = document.createElement("div");
			style = outer.style;
			style.position = "absolute";
			style.top = "0px";
			style.left = "0px";
			style.visibility = "hidden";
			style.width = "200px";
			style.height = "150px";
			style.overflow = "hidden";
			outer.appendChild(inner);
			document.body.appendChild(outer);
			var w1 = inner.offsetWidth;
			outer.style.overflow = "scroll";
			var w2 = inner.offsetWidth;
			if (w1 == w2) {
				w2 = outer.clientWidth
			}
			document.body.removeChild(outer);
			return (w1 - w2)
		}
		function _fnApplyToChildren(fn, an1, an2) {
			for (var i = 0,
			iLen = an1.length; i < iLen; i++) {
				for (var j = 0,
				jLen = an1[i].childNodes.length; j < jLen; j++) {
					if (an1[i].childNodes[j].nodeType == 1) {
						if (typeof an2 != "undefined") {
							fn(an1[i].childNodes[j], an2[i].childNodes[j])
						} else {
							fn(an1[i].childNodes[j])
						}
					}
				}
			}
		}
		function _fnMap(oRet, oSrc, sName, sMappedName) {
			if (typeof sMappedName == "undefined") {
				sMappedName = sName
			}
			if (typeof oSrc[sName] != "undefined") {
				oRet[sMappedName] = oSrc[sName]
			}
		}
		function _fnGetRowData(oSettings, iRow, sSpecific) {
			var out = [];
			for (var i = 0,
			iLen = oSettings.aoColumns.length; i < iLen; i++) {
				out.push(_fnGetCellData(oSettings, iRow, i, sSpecific))
			}
			return out
		}
		function _fnGetCellData(oSettings, iRow, iCol, sSpecific) {
			var sData;
			var oCol = oSettings.aoColumns[iCol];
			var oData = oSettings.aoData[iRow]._aData;
			if ((sData = oCol.fnGetData(oData)) === undefined) {
				if (oSettings.iDrawError != oSettings.iDraw && oCol.sDefaultContent === null) {
					_fnLog(oSettings, 0, "Requested unknown parameter '" + oCol.mDataProp + "' from the data source for row " + iRow);
					oSettings.iDrawError = oSettings.iDraw
				}
				return oCol.sDefaultContent
			}
			if (sData === null && oCol.sDefaultContent !== null) {
				sData = oCol.sDefaultContent
			}
			if (sSpecific == "display" && sData === null) {
				return ""
			}
			return sData
		}
		function _fnSetCellData(oSettings, iRow, iCol, val) {
			var oCol = oSettings.aoColumns[iCol];
			var oData = oSettings.aoData[iRow]._aData;
			oCol.fnSetData(oData, val)
		}
		function _fnGetObjectDataFn(mSource) {
			if (mSource === null) {
				return function(data) {
					return null
				}
			} else {
				if (typeof mSource == "function") {
					return function(data) {
						return mSource(data)
					}
				} else {
					if (typeof mSource == "string" && mSource.indexOf(".") != -1) {
						var a = mSource.split(".");
						if (a.length == 2) {
							return function(data) {
								return data[a[0]][a[1]]
							}
						} else {
							if (a.length == 3) {
								return function(data) {
									return data[a[0]][a[1]][a[2]]
								}
							} else {
								return function(data) {
									for (var i = 0,
									iLen = a.length; i < iLen; i++) {
										data = data[a[i]]
									}
									return data
								}
							}
						}
					} else {
						return function(data) {
							return data[mSource]
						}
					}
				}
			}
		}
		function _fnSetObjectDataFn(mSource) {
			if (mSource === null) {
				return function(data, val) {}
			} else {
				if (typeof mSource == "function") {
					return function(data, val) {
						return mSource(data, val)
					}
				} else {
					if (typeof mSource == "string" && mSource.indexOf(".") != -1) {
						var a = mSource.split(".");
						if (a.length == 2) {
							return function(data, val) {
								data[a[0]][a[1]] = val
							}
						} else {
							if (a.length == 3) {
								return function(data, val) {
									data[a[0]][a[1]][a[2]] = val
								}
							} else {
								return function(data, val) {
									for (var i = 0,
									iLen = a.length - 1; i < iLen; i++) {
										data = data[a[i]]
									}
									data[a[a.length - 1]] = val
								}
							}
						}
					} else {
						return function(data, val) {
							data[mSource] = val
						}
					}
				}
			}
		}
		this.oApi._fnExternApiFunc = _fnExternApiFunc;
		this.oApi._fnInitalise = _fnInitalise;
		this.oApi._fnInitComplete = _fnInitComplete;
		this.oApi._fnLanguageProcess = _fnLanguageProcess;
		this.oApi._fnAddColumn = _fnAddColumn;
		this.oApi._fnColumnOptions = _fnColumnOptions;
		this.oApi._fnAddData = _fnAddData;
		this.oApi._fnCreateTr = _fnCreateTr;
		this.oApi._fnGatherData = _fnGatherData;
		this.oApi._fnBuildHead = _fnBuildHead;
		this.oApi._fnDrawHead = _fnDrawHead;
		this.oApi._fnDraw = _fnDraw;
		this.oApi._fnReDraw = _fnReDraw;
		this.oApi._fnAjaxUpdate = _fnAjaxUpdate;
		this.oApi._fnAjaxUpdateDraw = _fnAjaxUpdateDraw;
		this.oApi._fnAddOptionsHtml = _fnAddOptionsHtml;
		this.oApi._fnFeatureHtmlTable = _fnFeatureHtmlTable;
		this.oApi._fnScrollDraw = _fnScrollDraw;
		this.oApi._fnAjustColumnSizing = _fnAjustColumnSizing;
		this.oApi._fnFeatureHtmlFilter = _fnFeatureHtmlFilter;
		this.oApi._fnFilterComplete = _fnFilterComplete;
		this.oApi._fnFilterCustom = _fnFilterCustom;
		this.oApi._fnFilterColumn = _fnFilterColumn;
		this.oApi._fnFilter = _fnFilter;
		this.oApi._fnBuildSearchArray = _fnBuildSearchArray;
		this.oApi._fnBuildSearchRow = _fnBuildSearchRow;
		this.oApi._fnFilterCreateSearch = _fnFilterCreateSearch;
		this.oApi._fnDataToSearch = _fnDataToSearch;
		this.oApi._fnSort = _fnSort;
		this.oApi._fnSortAttachListener = _fnSortAttachListener;
		this.oApi._fnSortingClasses = _fnSortingClasses;
		this.oApi._fnFeatureHtmlPaginate = _fnFeatureHtmlPaginate;
		this.oApi._fnPageChange = _fnPageChange;
		this.oApi._fnFeatureHtmlInfo = _fnFeatureHtmlInfo;
		this.oApi._fnUpdateInfo = _fnUpdateInfo;
		this.oApi._fnFeatureHtmlLength = _fnFeatureHtmlLength;
		this.oApi._fnFeatureHtmlProcessing = _fnFeatureHtmlProcessing;
		this.oApi._fnProcessingDisplay = _fnProcessingDisplay;
		this.oApi._fnVisibleToColumnIndex = _fnVisibleToColumnIndex;
		this.oApi._fnColumnIndexToVisible = _fnColumnIndexToVisible;
		this.oApi._fnNodeToDataIndex = _fnNodeToDataIndex;
		this.oApi._fnVisbleColumns = _fnVisbleColumns;
		this.oApi._fnCalculateEnd = _fnCalculateEnd;
		this.oApi._fnConvertToWidth = _fnConvertToWidth;
		this.oApi._fnCalculateColumnWidths = _fnCalculateColumnWidths;
		this.oApi._fnScrollingWidthAdjust = _fnScrollingWidthAdjust;
		this.oApi._fnGetWidestNode = _fnGetWidestNode;
		this.oApi._fnGetMaxLenString = _fnGetMaxLenString;
		this.oApi._fnStringToCss = _fnStringToCss;
		this.oApi._fnArrayCmp = _fnArrayCmp;
		this.oApi._fnDetectType = _fnDetectType;
		this.oApi._fnSettingsFromNode = _fnSettingsFromNode;
		this.oApi._fnGetDataMaster = _fnGetDataMaster;
		this.oApi._fnGetTrNodes = _fnGetTrNodes;
		this.oApi._fnGetTdNodes = _fnGetTdNodes;
		this.oApi._fnEscapeRegex = _fnEscapeRegex;
		this.oApi._fnDeleteIndex = _fnDeleteIndex;
		this.oApi._fnReOrderIndex = _fnReOrderIndex;
		this.oApi._fnColumnOrdering = _fnColumnOrdering;
		this.oApi._fnLog = _fnLog;
		this.oApi._fnClearTable = _fnClearTable;
		this.oApi._fnSaveState = _fnSaveState;
		this.oApi._fnLoadState = _fnLoadState;
		this.oApi._fnCreateCookie = _fnCreateCookie;
		this.oApi._fnReadCookie = _fnReadCookie;
		this.oApi._fnDetectHeader = _fnDetectHeader;
		this.oApi._fnGetUniqueThs = _fnGetUniqueThs;
		this.oApi._fnScrollBarWidth = _fnScrollBarWidth;
		this.oApi._fnApplyToChildren = _fnApplyToChildren;
		this.oApi._fnMap = _fnMap;
		this.oApi._fnGetRowData = _fnGetRowData;
		this.oApi._fnGetCellData = _fnGetCellData;
		this.oApi._fnSetCellData = _fnSetCellData;
		this.oApi._fnGetObjectDataFn = _fnGetObjectDataFn;
		this.oApi._fnSetObjectDataFn = _fnSetObjectDataFn;
		var _that = this;
		return this.each(function() {
			var i = 0,
			iLen, j, jLen, k, kLen;
			for (i = 0, iLen = _aoSettings.length; i < iLen; i++) {
				if (_aoSettings[i].nTable == this) {
					if (typeof oInit == "undefined" || (typeof oInit.bRetrieve != "undefined" && oInit.bRetrieve === true)) {
						return _aoSettings[i].oInstance
					} else {
						if (typeof oInit.bDestroy != "undefined" && oInit.bDestroy === true) {
							_aoSettings[i].oInstance.fnDestroy();
							break
						} else {
							_fnLog(_aoSettings[i], 0, "Cannot reinitialise DataTable.\n\nTo retrieve the DataTables object for this table, please pass either no arguments to the dataTable() function, or set bRetrieve to true. Alternatively, to destory the old table and create a new one, set bDestroy to true (note that a lot of changes to the configuration can be made through the API which is usually much faster).");
							return
						}
					}
				}
				if (_aoSettings[i].sTableId !== "" && _aoSettings[i].sTableId == this.getAttribute("id")) {
					_aoSettings.splice(i, 1);
					break
				}
			}
			var oSettings = new classSettings();
			_aoSettings.push(oSettings);
			var bInitHandedOff = false;
			var bUsePassedData = false;
			var sId = this.getAttribute("id");
			if (sId !== null) {
				oSettings.sTableId = sId;
				oSettings.sInstance = sId
			} else {
				oSettings.sInstance = _oExt._oExternConfig.iNextUnique++
			}
			if (this.nodeName.toLowerCase() != "table") {
				_fnLog(oSettings, 0, "Attempted to initialise DataTables on a node which is not a table: " + this.nodeName);
				return
			}
			oSettings.nTable = this;
			oSettings.oInstance = _that.length == 1 ? _that: $(this).dataTable();
			oSettings.oApi = _that.oApi;
			oSettings.sDestroyWidth = $(this).width();
			if (typeof oInit != "undefined" && oInit !== null) {
				oSettings.oInit = oInit;
				_fnMap(oSettings.oFeatures, oInit, "bPaginate");
				_fnMap(oSettings.oFeatures, oInit, "bLengthChange");
				_fnMap(oSettings.oFeatures, oInit, "bFilter");
				_fnMap(oSettings.oFeatures, oInit, "bSort");
				_fnMap(oSettings.oFeatures, oInit, "bInfo");
				_fnMap(oSettings.oFeatures, oInit, "bProcessing");
				_fnMap(oSettings.oFeatures, oInit, "bAutoWidth");
				_fnMap(oSettings.oFeatures, oInit, "bSortClasses");
				_fnMap(oSettings.oFeatures, oInit, "bServerSide");
				_fnMap(oSettings.oFeatures, oInit, "bDeferRender");
				_fnMap(oSettings.oScroll, oInit, "sScrollX", "sX");
				_fnMap(oSettings.oScroll, oInit, "sScrollXInner", "sXInner");
				_fnMap(oSettings.oScroll, oInit, "sScrollY", "sY");
				_fnMap(oSettings.oScroll, oInit, "bScrollCollapse", "bCollapse");
				_fnMap(oSettings.oScroll, oInit, "bScrollInfinite", "bInfinite");
				_fnMap(oSettings.oScroll, oInit, "iScrollLoadGap", "iLoadGap");
				_fnMap(oSettings.oScroll, oInit, "bScrollAutoCss", "bAutoCss");
				_fnMap(oSettings, oInit, "asStripClasses");
				_fnMap(oSettings, oInit, "fnPreDrawCallback");
				_fnMap(oSettings, oInit, "fnRowCallback");
				_fnMap(oSettings, oInit, "fnHeaderCallback");
				_fnMap(oSettings, oInit, "fnFooterCallback");
				_fnMap(oSettings, oInit, "fnCookieCallback");
				_fnMap(oSettings, oInit, "fnInitComplete");
				_fnMap(oSettings, oInit, "fnServerData");
				_fnMap(oSettings, oInit, "fnFormatNumber");
				_fnMap(oSettings, oInit, "aaSorting");
				_fnMap(oSettings, oInit, "aaSortingFixed");
				_fnMap(oSettings, oInit, "aLengthMenu");
				_fnMap(oSettings, oInit, "sPaginationType");
				_fnMap(oSettings, oInit, "sAjaxSource");
				_fnMap(oSettings, oInit, "sAjaxDataProp");
				_fnMap(oSettings, oInit, "iCookieDuration");
				_fnMap(oSettings, oInit, "sCookiePrefix");
				_fnMap(oSettings, oInit, "sDom");
				_fnMap(oSettings, oInit, "bSortCellsTop");
				_fnMap(oSettings, oInit, "oSearch", "oPreviousSearch");
				_fnMap(oSettings, oInit, "aoSearchCols", "aoPreSearchCols");
				_fnMap(oSettings, oInit, "iDisplayLength", "_iDisplayLength");
				_fnMap(oSettings, oInit, "bJQueryUI", "bJUI");
				_fnMap(oSettings.oLanguage, oInit, "fnInfoCallback");
				if (typeof oInit.fnDrawCallback == "function") {
					oSettings.aoDrawCallback.push({
						fn: oInit.fnDrawCallback,
						sName: "user"
					})
				}
				if (typeof oInit.fnStateSaveCallback == "function") {
					oSettings.aoStateSave.push({
						fn: oInit.fnStateSaveCallback,
						sName: "user"
					})
				}
				if (typeof oInit.fnStateLoadCallback == "function") {
					oSettings.aoStateLoad.push({
						fn: oInit.fnStateLoadCallback,
						sName: "user"
					})
				}
				if (oSettings.oFeatures.bServerSide && oSettings.oFeatures.bSort && oSettings.oFeatures.bSortClasses) {
					oSettings.aoDrawCallback.push({
						fn: _fnSortingClasses,
						sName: "server_side_sort_classes"
					})
				} else {
					if (oSettings.oFeatures.bDeferRender) {
						oSettings.aoDrawCallback.push({
							fn: _fnSortingClasses,
							sName: "defer_sort_classes"
						})
					}
				}
				if (typeof oInit.bJQueryUI != "undefined" && oInit.bJQueryUI) {
					oSettings.oClasses = _oExt.oJUIClasses;
					if (typeof oInit.sDom == "undefined") {
						oSettings.sDom = '<"H"lfr>t<"F"ip>'
					}
				}
				if (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") {
					oSettings.oScroll.iBarWidth = _fnScrollBarWidth()
				}
				if (typeof oInit.iDisplayStart != "undefined" && typeof oSettings.iInitDisplayStart == "undefined") {
					oSettings.iInitDisplayStart = oInit.iDisplayStart;
					oSettings._iDisplayStart = oInit.iDisplayStart
				}
				if (typeof oInit.bStateSave != "undefined") {
					oSettings.oFeatures.bStateSave = oInit.bStateSave;
					_fnLoadState(oSettings, oInit);
					oSettings.aoDrawCallback.push({
						fn: _fnSaveState,
						sName: "state_save"
					})
				}
				if (typeof oInit.iDeferLoading != "undefined") {
					oSettings.bDeferLoading = true;
					oSettings._iRecordsTotal = oInit.iDeferLoading;
					oSettings._iRecordsDisplay = oInit.iDeferLoading
				}
				if (typeof oInit.aaData != "undefined") {
					bUsePassedData = true
				}
				if (typeof oInit != "undefined" && typeof oInit.aoData != "undefined") {
					oInit.aoColumns = oInit.aoData
				}
				if (typeof oInit.oLanguage != "undefined") {
					if (typeof oInit.oLanguage.sUrl != "undefined" && oInit.oLanguage.sUrl !== "") {
						oSettings.oLanguage.sUrl = oInit.oLanguage.sUrl;
						$.getJSON(oSettings.oLanguage.sUrl, null,
						function(json) {
							_fnLanguageProcess(oSettings, json, true)
						});
						bInitHandedOff = true
					} else {
						_fnLanguageProcess(oSettings, oInit.oLanguage, false)
					}
				}
			} else {
				oInit = {}
			}
			if (typeof oInit.asStripClasses == "undefined") {
				oSettings.asStripClasses.push(oSettings.oClasses.sStripOdd);
				oSettings.asStripClasses.push(oSettings.oClasses.sStripEven)
			}
			var bStripeRemove = false;
			var anRows = $(">tbody>tr", this);
			for (i = 0, iLen = oSettings.asStripClasses.length; i < iLen; i++) {
				if (anRows.filter(":lt(2)").hasClass(oSettings.asStripClasses[i])) {
					bStripeRemove = true;
					break
				}
			}
			if (bStripeRemove) {
				oSettings.asDestoryStrips = ["", ""];
				if ($(anRows[0]).hasClass(oSettings.oClasses.sStripOdd)) {
					oSettings.asDestoryStrips[0] += oSettings.oClasses.sStripOdd + " "
				}
				if ($(anRows[0]).hasClass(oSettings.oClasses.sStripEven)) {
					oSettings.asDestoryStrips[0] += oSettings.oClasses.sStripEven
				}
				if ($(anRows[1]).hasClass(oSettings.oClasses.sStripOdd)) {
					oSettings.asDestoryStrips[1] += oSettings.oClasses.sStripOdd + " "
				}
				if ($(anRows[1]).hasClass(oSettings.oClasses.sStripEven)) {
					oSettings.asDestoryStrips[1] += oSettings.oClasses.sStripEven
				}
				anRows.removeClass(oSettings.asStripClasses.join(" "))
			}
			var anThs = [];
			var aoColumnsInit;
			var nThead = this.getElementsByTagName("thead");
			if (nThead.length !== 0) {
				_fnDetectHeader(oSettings.aoHeader, nThead[0]);
				anThs = _fnGetUniqueThs(oSettings)
			}
			if (typeof oInit.aoColumns == "undefined") {
				aoColumnsInit = [];
				for (i = 0, iLen = anThs.length; i < iLen; i++) {
					aoColumnsInit.push(null)
				}
			} else {
				aoColumnsInit = oInit.aoColumns
			}
			for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {
				if (typeof oInit.saved_aoColumns != "undefined" && oInit.saved_aoColumns.length == iLen) {
					if (aoColumnsInit[i] === null) {
						aoColumnsInit[i] = {}
					}
					aoColumnsInit[i].bVisible = oInit.saved_aoColumns[i].bVisible
				}
				_fnAddColumn(oSettings, anThs ? anThs[i] : null)
			}
			if (typeof oInit.aoColumnDefs != "undefined") {
				for (i = oInit.aoColumnDefs.length - 1; i >= 0; i--) {
					var aTargets = oInit.aoColumnDefs[i].aTargets;
					if (!$.isArray(aTargets)) {
						_fnLog(oSettings, 1, "aTargets must be an array of targets, not a " + (typeof aTargets))
					}
					for (j = 0, jLen = aTargets.length; j < jLen; j++) {
						if (typeof aTargets[j] == "number" && aTargets[j] >= 0) {
							while (oSettings.aoColumns.length <= aTargets[j]) {
								_fnAddColumn(oSettings)
							}
							_fnColumnOptions(oSettings, aTargets[j], oInit.aoColumnDefs[i])
						} else {
							if (typeof aTargets[j] == "number" && aTargets[j] < 0) {
								_fnColumnOptions(oSettings, oSettings.aoColumns.length + aTargets[j], oInit.aoColumnDefs[i])
							} else {
								if (typeof aTargets[j] == "string") {
									for (k = 0, kLen = oSettings.aoColumns.length; k < kLen; k++) {
										if (aTargets[j] == "_all" || $(oSettings.aoColumns[k].nTh).hasClass(aTargets[j])) {
											_fnColumnOptions(oSettings, k, oInit.aoColumnDefs[i])
										}
									}
								}
							}
						}
					}
				}
			}
			if (typeof aoColumnsInit != "undefined") {
				for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {
					_fnColumnOptions(oSettings, i, aoColumnsInit[i])
				}
			}
			for (i = 0, iLen = oSettings.aaSorting.length; i < iLen; i++) {
				if (oSettings.aaSorting[i][0] >= oSettings.aoColumns.length) {
					oSettings.aaSorting[i][0] = 0
				}
				var oColumn = oSettings.aoColumns[oSettings.aaSorting[i][0]];
				if (typeof oSettings.aaSorting[i][2] == "undefined") {
					oSettings.aaSorting[i][2] = 0
				}
				if (typeof oInit.aaSorting == "undefined" && typeof oSettings.saved_aaSorting == "undefined") {
					oSettings.aaSorting[i][1] = oColumn.asSorting[0]
				}
				for (j = 0, jLen = oColumn.asSorting.length; j < jLen; j++) {
					if (oSettings.aaSorting[i][1] == oColumn.asSorting[j]) {
						oSettings.aaSorting[i][2] = j;
						break
					}
				}
			}
			_fnSortingClasses(oSettings);
			var thead = $(">thead", this);
			if (thead.length === 0) {
				thead = [document.createElement("thead")];
				this.appendChild(thead[0])
			}
			oSettings.nTHead = thead[0];
			var tbody = $(">tbody", this);
			if (tbody.length === 0) {
				tbody = [document.createElement("tbody")];
				this.appendChild(tbody[0])
			}
			oSettings.nTBody = tbody[0];
			var tfoot = $(">tfoot", this);
			if (tfoot.length > 0) {
				oSettings.nTFoot = tfoot[0];
				_fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot)
			}
			if (bUsePassedData) {
				for (i = 0; i < oInit.aaData.length; i++) {
					_fnAddData(oSettings, oInit.aaData[i])
				}
			} else {
				_fnGatherData(oSettings)
			}
			oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			oSettings.bInitialised = true;
			if (bInitHandedOff === false) {
				_fnInitalise(oSettings)
			}
		})
	}
})(jQuery, window, document); (function(i, wa, p) {
	i.fn.dataTableSettings = [];
	var D = i.fn.dataTableSettings;
	i.fn.dataTableExt = {};
	var o = i.fn.dataTableExt;
	o.sVersion = "1.8.1";
	o.sErrMode = "alert";
	o.iApiIndex = 0;
	o.oApi = {};
	o.afnFiltering = [];
	o.aoFeatures = [];
	o.ofnSearch = {};
	o.afnSortData = [];
	o.oStdClasses = {
		sPagePrevEnabled: "paginate_enabled_previous",
		sPagePrevDisabled: "paginate_disabled_previous",
		sPageNextEnabled: "paginate_enabled_next",
		sPageNextDisabled: "paginate_disabled_next",
		sPageJUINext: "",
		sPageJUIPrev: "",
		sPageButton: "paginate_button",
		sPageButtonActive: "paginate_active",
		sPageButtonStaticDisabled: "paginate_button paginate_button_disabled",
		sPageFirst: "first",
		sPagePrevious: "previous",
		sPageNext: "next",
		sPageLast: "last",
		sStripOdd: "odd",
		sStripEven: "even",
		sRowEmpty: "dataTables_empty",
		sWrapper: "dataTables_wrapper",
		sFilter: "dataTables_filter",
		sInfo: "dataTables_info",
		sPaging: "dataTables_paginate paging_",
		sLength: "dataTables_length",
		sProcessing: "dataTables_processing",
		sSortAsc: "sorting_asc",
		sSortDesc: "sorting_desc",
		sSortable: "sorting",
		sSortableAsc: "sorting_asc_disabled",
		sSortableDesc: "sorting_desc_disabled",
		sSortableNone: "sorting_disabled",
		sSortColumn: "sorting_",
		sSortJUIAsc: "",
		sSortJUIDesc: "",
		sSortJUI: "",
		sSortJUIAscAllowed: "",
		sSortJUIDescAllowed: "",
		sSortJUIWrapper: "",
		sSortIcon: "",
		sScrollWrapper: "dataTables_scroll",
		sScrollHead: "dataTables_scrollHead",
		sScrollHeadInner: "dataTables_scrollHeadInner",
		sScrollBody: "dataTables_scrollBody",
		sScrollFoot: "dataTables_scrollFoot",
		sScrollFootInner: "dataTables_scrollFootInner",
		sFooterTH: ""
	};
	o.oJUIClasses = {
		sPagePrevEnabled: "fg-button ui-button ui-state-default ui-corner-left",
		sPagePrevDisabled: "fg-button ui-button ui-state-default ui-corner-left ui-state-disabled",
		sPageNextEnabled: "fg-button ui-button ui-state-default ui-corner-right",
		sPageNextDisabled: "fg-button ui-button ui-state-default ui-corner-right ui-state-disabled",
		sPageJUINext: "ui-icon ui-icon-circle-arrow-e",
		sPageJUIPrev: "ui-icon ui-icon-circle-arrow-w",
		sPageButton: "fg-button ui-button ui-state-default",
		sPageButtonActive: "fg-button ui-button ui-state-default ui-state-disabled",
		sPageButtonStaticDisabled: "fg-button ui-button ui-state-default ui-state-disabled",
		sPageFirst: "first ui-corner-tl ui-corner-bl",
		sPagePrevious: "previous",
		sPageNext: "next",
		sPageLast: "last ui-corner-tr ui-corner-br",
		sStripOdd: "odd",
		sStripEven: "even",
		sRowEmpty: "dataTables_empty",
		sWrapper: "dataTables_wrapper",
		sFilter: "dataTables_filter",
		sInfo: "dataTables_info",
		sPaging: "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",
		sLength: "dataTables_length",
		sProcessing: "dataTables_processing",
		sSortAsc: "ui-state-default",
		sSortDesc: "ui-state-default",
		sSortable: "ui-state-default",
		sSortableAsc: "ui-state-default",
		sSortableDesc: "ui-state-default",
		sSortableNone: "ui-state-default",
		sSortColumn: "sorting_",
		sSortJUIAsc: "css_right ui-icon ui-icon-triangle-1-n",
		sSortJUIDesc: "css_right ui-icon ui-icon-triangle-1-s",
		sSortJUI: "css_right ui-icon ui-icon-carat-2-n-s",
		sSortJUIAscAllowed: "css_right ui-icon ui-icon-carat-1-n",
		sSortJUIDescAllowed: "css_right ui-icon ui-icon-carat-1-s",
		sSortJUIWrapper: "DataTables_sort_wrapper",
		sSortIcon: "DataTables_sort_icon",
		sScrollWrapper: "dataTables_scroll",
		sScrollHead: "dataTables_scrollHead ui-state-default",
		sScrollHeadInner: "dataTables_scrollHeadInner",
		sScrollBody: "dataTables_scrollBody",
		sScrollFoot: "dataTables_scrollFoot ui-state-default",
		sScrollFootInner: "dataTables_scrollFootInner",
		sFooterTH: "ui-state-default"
	};
	o.oPagination = {
		two_button: {
			fnInit: function(g, l, r) {
				var s, w, y;
				if (g.bJUI) {
					s = p.createElement("a");
					w = p.createElement("a");
					y = p.createElement("span");
					y.className = g.oClasses.sPageJUINext;
					w.appendChild(y);
					y = p.createElement("span");
					y.className = g.oClasses.sPageJUIPrev;
					s.appendChild(y)
				} else {
					s = p.createElement("div");
					w = p.createElement("div")
				}
				s.className = g.oClasses.sPagePrevDisabled;
				w.className = g.oClasses.sPageNextDisabled;
				s.title = g.oLanguage.oPaginate.sPrevious;
				w.title = g.oLanguage.oPaginate.sNext;
				l.appendChild(s);
				l.appendChild(w);
				i(s).bind("click.DT",
				function() {
					g.oApi._fnPageChange(g, "previous") && r(g)
				});
				i(w).bind("click.DT",
				function() {
					g.oApi._fnPageChange(g, "next") && r(g)
				});
				i(s).bind("selectstart.DT",
				function() {
					return false
				});
				i(w).bind("selectstart.DT",
				function() {
					return false
				});
				if (g.sTableId !== "" && typeof g.aanFeatures.p == "undefined") {
					l.setAttribute("id", g.sTableId + "_paginate");
					s.setAttribute("id", g.sTableId + "_previous");
					w.setAttribute("id", g.sTableId + "_next")
				}
			},
			fnUpdate: function(g) {
				if (g.aanFeatures.p) {
					for (var l = g.aanFeatures.p,
					r = 0,
					s = l.length; r < s; r++) {
						if (l[r].childNodes.length !== 0) {
							l[r].childNodes[0].className = g._iDisplayStart === 0 ? g.oClasses.sPagePrevDisabled: g.oClasses.sPagePrevEnabled;
							l[r].childNodes[1].className = g.fnDisplayEnd() == g.fnRecordsDisplay() ? g.oClasses.sPageNextDisabled: g.oClasses.sPageNextEnabled
						}
					}
				}
			}
		},
		iFullNumbersShowPages: 5,
		full_numbers: {
			fnInit: function(g, l, r) {
				var s = p.createElement("span"),
				w = p.createElement("span"),
				y = p.createElement("span"),
				G = p.createElement("span"),
				x = p.createElement("span");
				s.innerHTML = g.oLanguage.oPaginate.sFirst;
				w.innerHTML = g.oLanguage.oPaginate.sPrevious;
				G.innerHTML = g.oLanguage.oPaginate.sNext;
				x.innerHTML = g.oLanguage.oPaginate.sLast;
				var v = g.oClasses;
				s.className = v.sPageButton + " " + v.sPageFirst;
				w.className = v.sPageButton + " " + v.sPagePrevious;
				G.className = v.sPageButton + " " + v.sPageNext;
				x.className = v.sPageButton + " " + v.sPageLast;
				l.appendChild(s);
				l.appendChild(w);
				l.appendChild(y);
				l.appendChild(G);
				l.appendChild(x);
				i(s).bind("click.DT",
				function() {
					g.oApi._fnPageChange(g, "first") && r(g)
				});
				i(w).bind("click.DT",
				function() {
					g.oApi._fnPageChange(g, "previous") && r(g)
				});
				i(G).bind("click.DT",
				function() {
					g.oApi._fnPageChange(g, "next") && r(g)
				});
				i(x).bind("click.DT",
				function() {
					g.oApi._fnPageChange(g, "last") && r(g)
				});
				i("span", l).bind("mousedown.DT",
				function() {
					return false
				}).bind("selectstart.DT",
				function() {
					return false
				});
				if (g.sTableId !== "" && typeof g.aanFeatures.p == "undefined") {
					l.setAttribute("id", g.sTableId + "_paginate");
					s.setAttribute("id", g.sTableId + "_first");
					w.setAttribute("id", g.sTableId + "_previous");
					G.setAttribute("id", g.sTableId + "_next");
					x.setAttribute("id", g.sTableId + "_last")
				}
			},
			fnUpdate: function(g, l) {
				if (g.aanFeatures.p) {
					var r = o.oPagination.iFullNumbersShowPages,
					s = Math.floor(r / 2),
					w = Math.ceil(g.fnRecordsDisplay() / g._iDisplayLength),
					y = Math.ceil(g._iDisplayStart / g._iDisplayLength) + 1,
					G = "",
					x,
					v = g.oClasses;
					if (w < r) {
						s = 1;
						x = w
					} else {
						if (y <= s) {
							s = 1;
							x = r
						} else {
							if (y >= w - s) {
								s = w - r + 1;
								x = w
							} else {
								s = y - Math.ceil(r / 2) + 1;
								x = s + r - 1
							}
						}
					}
					for (r = s; r <= x; r++) {
						G += y != r ? '<span class="' + v.sPageButton + '">' + r + "</span>": '<span class="' + v.sPageButtonActive + '">' + r + "</span>"
					}
					x = g.aanFeatures.p;
					var z, Y = function(L) {
						g._iDisplayStart = (this.innerHTML * 1 - 1) * g._iDisplayLength;
						l(g);
						L.preventDefault()
					},
					V = function() {
						return false
					};
					r = 0;
					for (s = x.length; r < s; r++) {
						if (x[r].childNodes.length !== 0) {
							z = i("span:eq(2)", x[r]);
							z.html(G);
							i("span", z).bind("click.DT", Y).bind("mousedown.DT", V).bind("selectstart.DT", V);
							z = x[r].getElementsByTagName("span");
							z = [z[0], z[1], z[z.length - 2], z[z.length - 1]];
							i(z).removeClass(v.sPageButton + " " + v.sPageButtonActive + " " + v.sPageButtonStaticDisabled);
							if (y == 1) {
								z[0].className += " " + v.sPageButtonStaticDisabled;
								z[1].className += " " + v.sPageButtonStaticDisabled
							} else {
								z[0].className += " " + v.sPageButton;
								z[1].className += " " + v.sPageButton
							}
							if (w === 0 || y == w || g._iDisplayLength == -1) {
								z[2].className += " " + v.sPageButtonStaticDisabled;
								z[3].className += " " + v.sPageButtonStaticDisabled
							} else {
								z[2].className += " " + v.sPageButton;
								z[3].className += " " + v.sPageButton
							}
						}
					}
				}
			}
		}
	};
	o.oSort = {
		"string-asc": function(g, l) {
			if (typeof g != "string") {
				g = ""
			}
			if (typeof l != "string") {
				l = ""
			}
			g = g.toLowerCase();
			l = l.toLowerCase();
			return g < l ? -1 : g > l ? 1 : 0
		},
		"string-desc": function(g, l) {
			if (typeof g != "string") {
				g = ""
			}
			if (typeof l != "string") {
				l = ""
			}
			g = g.toLowerCase();
			l = l.toLowerCase();
			return g < l ? 1 : g > l ? -1 : 0
		},
		"html-asc": function(g, l) {
			g = g.replace(/<.*?>/g, "").toLowerCase();
			l = l.replace(/<.*?>/g, "").toLowerCase();
			return g < l ? -1 : g > l ? 1 : 0
		},
		"html-desc": function(g, l) {
			g = g.replace(/<.*?>/g, "").toLowerCase();
			l = l.replace(/<.*?>/g, "").toLowerCase();
			return g < l ? 1 : g > l ? -1 : 0
		},
		"date-asc": function(g, l) {
			g = Date.parse(g);
			l = Date.parse(l);
			if (isNaN(g) || g === "") {
				g = Date.parse("01/01/1970 00:00:00")
			}
			if (isNaN(l) || l === "") {
				l = Date.parse("01/01/1970 00:00:00")
			}
			return g - l
		},
		"date-desc": function(g, l) {
			g = Date.parse(g);
			l = Date.parse(l);
			if (isNaN(g) || g === "") {
				g = Date.parse("01/01/1970 00:00:00")
			}
			if (isNaN(l) || l === "") {
				l = Date.parse("01/01/1970 00:00:00")
			}
			return l - g
		},
		"numeric-asc": function(g, l) {
			return (g == "-" || g === "" ? 0 : g * 1) - (l == "-" || l === "" ? 0 : l * 1)
		},
		"numeric-desc": function(g, l) {
			return (l == "-" || l === "" ? 0 : l * 1) - (g == "-" || g === "" ? 0 : g * 1)
		}
	};
	o.aTypes = [function(g) {
		if (typeof g == "number") {
			return "numeric"
		} else {
			if (typeof g != "string") {
				return null
			}
		}
		var l, r = false;
		l = g.charAt(0);
		if ("0123456789-".indexOf(l) == -1) {
			return null
		}
		for (var s = 1; s < g.length; s++) {
			l = g.charAt(s);
			if ("0123456789.".indexOf(l) == -1) {
				return null
			}
			if (l == ".") {
				if (r) {
					return null
				}
				r = true
			}
		}
		return "numeric"
	},
	function(g) {
		var l = Date.parse(g);
		if (l !== null && !isNaN(l) || typeof g == "string" && g.length === 0) {
			return "date"
		}
		return null
	},
	function(g) {
		if (typeof g == "string" && g.indexOf("<") != -1 && g.indexOf(">") != -1) {
			return "html"
		}
		return null
	}];
	o.fnVersionCheck = function(g) {
		var l = function(x, v) {
			for (; x.length < v;) {
				x += "0"
			}
			return x
		},
		r = o.sVersion.split(".");
		g = g.split(".");
		for (var s = "",
		w = "",
		y = 0,
		G = g.length; y < G; y++) {
			s += l(r[y], 3);
			w += l(g[y], 3)
		}
		return parseInt(s, 10) >= parseInt(w, 10)
	};
	o._oExternConfig = {
		iNextUnique: 0
	};
	i.fn.dataTable = function(g) {
		function l() {
			this.fnRecordsTotal = function() {
				return this.oFeatures.bServerSide ? parseInt(this._iRecordsTotal, 10) : this.aiDisplayMaster.length
			};
			this.fnRecordsDisplay = function() {
				return this.oFeatures.bServerSide ? parseInt(this._iRecordsDisplay, 10) : this.aiDisplay.length
			};
			this.fnDisplayEnd = function() {
				return this.oFeatures.bServerSide ? this.oFeatures.bPaginate === false || this._iDisplayLength == -1 ? this._iDisplayStart + this.aiDisplay.length: Math.min(this._iDisplayStart + this._iDisplayLength, this._iRecordsDisplay) : this._iDisplayEnd
			};
			this.sInstance = this.oInstance = null;
			this.oFeatures = {
				bPaginate: true,
				bLengthChange: true,
				bFilter: true,
				bSort: true,
				bInfo: true,
				bAutoWidth: true,
				bProcessing: false,
				bSortClasses: true,
				bStateSave: false,
				bServerSide: false,
				bDeferRender: false
			};
			this.oScroll = {
				sX: "",
				sXInner: "",
				sY: "",
				bCollapse: false,
				bInfinite: false,
				iLoadGap: 100,
				iBarWidth: 0,
				bAutoCss: true
			};
			this.aanFeatures = [];
			this.oLanguage = {
				sProcessing: "Processing...",
				sLengthMenu: "Show _MENU_ entries",
				sZeroRecords: "No matching records found",
				sEmptyTable: "No data available in table",
				sLoadingRecords: "Loading...",
				sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
				sInfoEmpty: "Showing 0 to 0 of 0 entries",
				sInfoFiltered: "(filtered from _MAX_ total entries)",
				sInfoPostFix: "",
				sSearch: "Search:",
				sUrl: "",
				oPaginate: {
					sFirst: "First",
					sPrevious: "Previous",
					sNext: "Next",
					sLast: "Last"
				},
				fnInfoCallback: null
			};
			this.aoData = [];
			this.aiDisplay = [];
			this.aiDisplayMaster = [];
			this.aoColumns = [];
			this.aoHeader = [];
			this.aoFooter = [];
			this.iNextId = 0;
			this.asDataSearch = [];
			this.oPreviousSearch = {
				sSearch: "",
				bRegex: false,
				bSmart: true
			};
			this.aoPreSearchCols = [];
			this.aaSorting = [[0, "asc", 0]];
			this.aaSortingFixed = null;
			this.asStripClasses = [];
			this.asDestoryStrips = [];
			this.sDestroyWidth = 0;
			this.fnFooterCallback = this.fnHeaderCallback = this.fnRowCallback = null;
			this.aoDrawCallback = [];
			this.fnInitComplete = this.fnPreDrawCallback = null;
			this.sTableId = "";
			this.nTableWrapper = this.nTBody = this.nTFoot = this.nTHead = this.nTable = null;
			this.bInitialised = this.bDeferLoading = false;
			this.aoOpenRows = [];
			this.sDom = '<"top"lf<"clear">>rt<"block-actions"ip>';
			this.sPaginationType = "full_numbers";
			this.iCookieDuration = 7200;
			this.sCookiePrefix = "SpryMedia_DataTables_";
			this.fnCookieCallback = null;
			this.aoStateSave = [];
			this.aoStateLoad = [];
			this.sAjaxSource = this.oLoadedState = null;
			this.sAjaxDataProp = "aaData";
			this.bAjaxDataGet = true;
			this.jqXHR = null;
			this.fnServerData = function(a, b, c, d) {
				d.jqXHR = i.ajax({
					url: a,
					data: b,
					success: c,
					dataType: "json",
					cache: false,
					error: function(f, e) {
						e == "parsererror" && alert("DataTables warning: JSON data from server could not be parsed. This is caused by a JSON formatting error.")
					}
				})
			};
			this.fnFormatNumber = function(a) {
				if (a < 1000) {
					return a
				} else {
					var b = a + "";
					a = b.split("");
					var c = "";
					b = b.length;
					for (var d = 0; d < b; d++) {
						if (d % 3 === 0 && d !== 0) {
							c = "," + c
						}
						c = a[b - d - 1] + c
					}
				}
				return c
			};
			this.aLengthMenu = [10, 25, 50, 100];
			this.bDrawing = this.iDraw = 0;
			this.iDrawError = -1;
			this._iDisplayLength = 10;
			this._iDisplayStart = 0;
			this._iDisplayEnd = 10;
			this._iRecordsDisplay = this._iRecordsTotal = 0;
			this.bJUI = false;
			this.oClasses = o.oStdClasses;
			this.bSortCellsTop = this.bSorted = this.bFiltered = false;
			this.oInit = null
		}
		function r(a) {
			return function() {
				var b = [A(this[o.iApiIndex])].concat(Array.prototype.slice.call(arguments));
				return o.oApi[a].apply(this, b)
			}
		}
		function s(a) {
			var b, c, d = a.iInitDisplayStart;
			if (a.bInitialised === false) {
				setTimeout(function() {
					s(a)
				},
				200)
			} else {
				xa(a);
				V(a);
				L(a, a.aoHeader);
				a.nTFoot && L(a, a.aoFooter);
				K(a, true);
				a.oFeatures.bAutoWidth && ea(a);
				b = 0;
				for (c = a.aoColumns.length; b < c; b++) {
					if (a.aoColumns[b].sWidth !== null) {
						a.aoColumns[b].nTh.style.width = u(a.aoColumns[b].sWidth)
					}
				}
				if (a.oFeatures.bSort) {
					R(a)
				} else {
					if (a.oFeatures.bFilter) {
						M(a, a.oPreviousSearch)
					} else {
						a.aiDisplay = a.aiDisplayMaster.slice();
						E(a);
						C(a)
					}
				}
				if (a.sAjaxSource !== null && !a.oFeatures.bServerSide) {
					a.fnServerData.call(a.oInstance, a.sAjaxSource, [],
					function(f) {
						var e = f;
						if (a.sAjaxDataProp !== "") {
							e = Z(a.sAjaxDataProp)(f)
						}
						for (b = 0; b < e.length; b++) {
							v(a, e[b])
						}
						a.iInitDisplayStart = d;
						if (a.oFeatures.bSort) {
							R(a)
						} else {
							a.aiDisplay = a.aiDisplayMaster.slice();
							E(a);
							C(a)
						}
						K(a, false);
						w(a, f)
					},
					a)
				} else {
					if (!a.oFeatures.bServerSide) {
						K(a, false);
						w(a)
					}
				}
			}
		}
		function w(a, b) {
			a._bInitComplete = true;
			if (typeof a.fnInitComplete == "function") {
				typeof b != "undefined" ? a.fnInitComplete.call(a.oInstance, a, b) : a.fnInitComplete.call(a.oInstance, a)
			}
		}
		function y(a, b, c) {
			n(a.oLanguage, b, "sProcessing");
			n(a.oLanguage, b, "sLengthMenu");
			n(a.oLanguage, b, "sEmptyTable");
			n(a.oLanguage, b, "sLoadingRecords");
			n(a.oLanguage, b, "sZeroRecords");
			n(a.oLanguage, b, "sInfo");
			n(a.oLanguage, b, "sInfoEmpty");
			n(a.oLanguage, b, "sInfoFiltered");
			n(a.oLanguage, b, "sInfoPostFix");
			n(a.oLanguage, b, "sSearch");
			if (typeof b.oPaginate != "undefined") {
				n(a.oLanguage.oPaginate, b.oPaginate, "sFirst");
				n(a.oLanguage.oPaginate, b.oPaginate, "sPrevious");
				n(a.oLanguage.oPaginate, b.oPaginate, "sNext");
				n(a.oLanguage.oPaginate, b.oPaginate, "sLast")
			}
			typeof b.sEmptyTable == "undefined" && typeof b.sZeroRecords != "undefined" && n(a.oLanguage, b, "sZeroRecords", "sEmptyTable");
			typeof b.sLoadingRecords == "undefined" && typeof b.sZeroRecords != "undefined" && n(a.oLanguage, b, "sZeroRecords", "sLoadingRecords");
			c && s(a)
		}
		function G(a, b) {
			var c = a.aoColumns.length;
			b = {
				sType: null,
				_bAutoType: true,
				bVisible: true,
				bSearchable: true,
				bSortable: true,
				asSorting: ["asc", "desc"],
				sSortingClass: a.oClasses.sSortable,
				sSortingClassJUI: a.oClasses.sSortJUI,
				sTitle: b ? b.innerHTML: "",
				sName: "",
				sWidth: null,
				sWidthOrig: null,
				sClass: null,
				fnRender: null,
				bUseRendered: true,
				iDataSort: c,
				mDataProp: c,
				fnGetData: null,
				fnSetData: null,
				sSortDataType: "std",
				sDefaultContent: null,
				sContentPadding: "",
				nTh: b ? b: p.createElement("th"),
				nTf: null
			};
			a.aoColumns.push(b);
			if (typeof a.aoPreSearchCols[c] == "undefined" || a.aoPreSearchCols[c] === null) {
				a.aoPreSearchCols[c] = {
					sSearch: "",
					bRegex: false,
					bSmart: true
				}
			} else {
				if (typeof a.aoPreSearchCols[c].bRegex == "undefined") {
					a.aoPreSearchCols[c].bRegex = true
				}
				if (typeof a.aoPreSearchCols[c].bSmart == "undefined") {
					a.aoPreSearchCols[c].bSmart = true
				}
			}
			x(a, c, null)
		}
		function x(a, b, c) {
			b = a.aoColumns[b];
			if (typeof c != "undefined" && c !== null) {
				if (typeof c.sType != "undefined") {
					b.sType = c.sType;
					b._bAutoType = false
				}
				n(b, c, "bVisible");
				n(b, c, "bSearchable");
				n(b, c, "bSortable");
				n(b, c, "sTitle");
				n(b, c, "sName");
				n(b, c, "sWidth");
				n(b, c, "sWidth", "sWidthOrig");
				n(b, c, "sClass");
				n(b, c, "fnRender");
				n(b, c, "bUseRendered");
				n(b, c, "iDataSort");
				n(b, c, "mDataProp");
				n(b, c, "asSorting");
				n(b, c, "sSortDataType");
				n(b, c, "sDefaultContent");
				n(b, c, "sContentPadding")
			}
			b.fnGetData = Z(b.mDataProp);
			b.fnSetData = ya(b.mDataProp);
			if (!a.oFeatures.bSort) {
				b.bSortable = false
			}
			if (!b.bSortable || i.inArray("asc", b.asSorting) == -1 && i.inArray("desc", b.asSorting) == -1) {
				b.sSortingClass = a.oClasses.sSortableNone;
				b.sSortingClassJUI = ""
			} else {
				if (b.bSortable || i.inArray("asc", b.asSorting) == -1 && i.inArray("desc", b.asSorting) == -1) {
					b.sSortingClass = a.oClasses.sSortable;
					b.sSortingClassJUI = a.oClasses.sSortJUI
				} else {
					if (i.inArray("asc", b.asSorting) != -1 && i.inArray("desc", b.asSorting) == -1) {
						b.sSortingClass = a.oClasses.sSortableAsc;
						b.sSortingClassJUI = a.oClasses.sSortJUIAscAllowed
					} else {
						if (i.inArray("asc", b.asSorting) == -1 && i.inArray("desc", b.asSorting) != -1) {
							b.sSortingClass = a.oClasses.sSortableDesc;
							b.sSortingClassJUI = a.oClasses.sSortJUIDescAllowed
						}
					}
				}
			}
		}
		function v(a, b) {
			var c;
			c = typeof b.length == "number" ? b.slice() : i.extend(true, {},
			b);
			b = a.aoData.length;
			var d = {
				nTr: null,
				_iId: a.iNextId++,
				_aData: c,
				_anHidden: [],
				_sRowStripe: ""
			};
			a.aoData.push(d);
			for (var f, e = 0,
			h = a.aoColumns.length; e < h; e++) {
				c = a.aoColumns[e];
				typeof c.fnRender == "function" && c.bUseRendered && c.mDataProp !== null && N(a, b, e, c.fnRender({
					iDataRow: b,
					iDataColumn: e,
					aData: d._aData,
					oSettings: a
				}));
				if (c._bAutoType && c.sType != "string") {
					f = H(a, b, e, "type");
					if (f !== null && f !== "") {
						f = fa(f);
						if (c.sType === null) {
							c.sType = f
						} else {
							if (c.sType != f) {
								c.sType = "string"
							}
						}
					}
				}
			}
			a.aiDisplayMaster.push(b);
			a.oFeatures.bDeferRender || z(a, b);
			return b
		}
		function z(a, b) {
			var c = a.aoData[b],
			d;
			if (c.nTr === null) {
				c.nTr = p.createElement("tr");
				typeof c._aData.DT_RowId != "undefined" && c.nTr.setAttribute("id", c._aData.DT_RowId);
				typeof c._aData.DT_RowClass != "undefined" && i(c.nTr).addClass(c._aData.DT_RowClass);
				for (var f = 0,
				e = a.aoColumns.length; f < e; f++) {
					var h = a.aoColumns[f];
					d = p.createElement("td");
					d.innerHTML = typeof h.fnRender == "function" && (!h.bUseRendered || h.mDataProp === null) ? h.fnRender({
						iDataRow: b,
						iDataColumn: f,
						aData: c._aData,
						oSettings: a
					}) : H(a, b, f, "display");
					if (h.sClass !== null) {
						d.className = h.sClass
					}
					if (h.bVisible) {
						c.nTr.appendChild(d);
						c._anHidden[f] = null
					} else {
						c._anHidden[f] = d
					}
				}
			}
		}
		function Y(a) {
			var b, c, d, f, e, h, j, k, m;
			if (a.bDeferLoading || a.sAjaxSource === null) {
				j = a.nTBody.childNodes;
				b = 0;
				for (c = j.length; b < c; b++) {
					if (j[b].nodeName.toUpperCase() == "TR") {
						k = a.aoData.length;
						a.aoData.push({
							nTr: j[b],
							_iId: a.iNextId++,
							_aData: [],
							_anHidden: [],
							_sRowStripe: ""
						});
						a.aiDisplayMaster.push(k);
						h = j[b].childNodes;
						d = e = 0;
						for (f = h.length; d < f; d++) {
							m = h[d].nodeName.toUpperCase();
							if (m == "TD" || m == "TH") {
								N(a, k, e, i.trim(h[d].innerHTML));
								e++
							}
						}
					}
				}
			}
			j = $(a);
			h = [];
			b = 0;
			for (c = j.length; b < c; b++) {
				d = 0;
				for (f = j[b].childNodes.length; d < f; d++) {
					e = j[b].childNodes[d];
					m = e.nodeName.toUpperCase();
					if (m == "TD" || m == "TH") {
						h.push(e)
					}
				}
			}
			h.length != j.length * a.aoColumns.length && J(a, 1, "Unexpected number of TD elements. Expected " + j.length * a.aoColumns.length + " and got " + h.length + ". DataTables does not support rowspan / colspan in the table body, and there must be one cell for each row/column combination.");
			d = 0;
			for (f = a.aoColumns.length; d < f; d++) {
				if (a.aoColumns[d].sTitle === null) {
					a.aoColumns[d].sTitle = a.aoColumns[d].nTh.innerHTML
				}
				j = a.aoColumns[d]._bAutoType;
				m = typeof a.aoColumns[d].fnRender == "function";
				e = a.aoColumns[d].sClass !== null;
				k = a.aoColumns[d].bVisible;
				var t, q;
				if (j || m || e || !k) {
					b = 0;
					for (c = a.aoData.length; b < c; b++) {
						t = h[b * f + d];
						if (j && a.aoColumns[d].sType != "string") {
							q = H(a, b, d, "type");
							if (q !== "") {
								q = fa(q);
								if (a.aoColumns[d].sType === null) {
									a.aoColumns[d].sType = q
								} else {
									if (a.aoColumns[d].sType != q) {
										a.aoColumns[d].sType = "string"
									}
								}
							}
						}
						if (m) {
							q = a.aoColumns[d].fnRender({
								iDataRow: b,
								iDataColumn: d,
								aData: a.aoData[b]._aData,
								oSettings: a
							});
							t.innerHTML = q;
							a.aoColumns[d].bUseRendered && N(a, b, d, q)
						}
						if (e) {
							t.className += " " + a.aoColumns[d].sClass
						}
						if (k) {
							a.aoData[b]._anHidden[d] = null
						} else {
							a.aoData[b]._anHidden[d] = t;
							t.parentNode.removeChild(t)
						}
					}
				}
			}
		}
		function V(a) {
			var b, c, d;
			a.nTHead.getElementsByTagName("tr");
			if (a.nTHead.getElementsByTagName("th").length !== 0) {
				b = 0;
				for (d = a.aoColumns.length; b < d; b++) {
					c = a.aoColumns[b].nTh;
					a.aoColumns[b].sClass !== null && i(c).addClass(a.aoColumns[b].sClass);
					if (a.aoColumns[b].sTitle != c.innerHTML) {
						c.innerHTML = a.aoColumns[b].sTitle
					}
				}
			} else {
				var f = p.createElement("tr");
				b = 0;
				for (d = a.aoColumns.length; b < d; b++) {
					c = a.aoColumns[b].nTh;
					c.innerHTML = a.aoColumns[b].sTitle;
					a.aoColumns[b].sClass !== null && i(c).addClass(a.aoColumns[b].sClass);
					f.appendChild(c)
				}
				i(a.nTHead).html("")[0].appendChild(f);
				W(a.aoHeader, a.nTHead)
			}
			if (a.bJUI) {
				b = 0;
				for (d = a.aoColumns.length; b < d; b++) {
					c = a.aoColumns[b].nTh;
					f = p.createElement("div");
					f.className = a.oClasses.sSortJUIWrapper;
					i(c).contents().appendTo(f);
					var e = p.createElement("span");
					e.className = a.oClasses.sSortIcon;
					f.appendChild(e);
					c.appendChild(f)
				}
			}
			d = function() {
				this.onselectstart = function() {
					return false
				};
				return false
			};
			if (a.oFeatures.bSort) {
				for (b = 0; b < a.aoColumns.length; b++) {
					if (a.aoColumns[b].bSortable !== false) {
						ga(a, a.aoColumns[b].nTh, b);
						i(a.aoColumns[b].nTh).bind("mousedown.DT", d)
					} else {
						i(a.aoColumns[b].nTh).addClass(a.oClasses.sSortableNone)
					}
				}
			}
			a.oClasses.sFooterTH !== "" && i(">tr>th", a.nTFoot).addClass(a.oClasses.sFooterTH);
			if (a.nTFoot !== null) {
				c = S(a, null, a.aoFooter);
				b = 0;
				for (d = a.aoColumns.length; b < d; b++) {
					if (typeof c[b] != "undefined") {
						a.aoColumns[b].nTf = c[b]
					}
				}
			}
		}
		function L(a, b, c) {
			var d, f, e, h = [],
			j = [],
			k = a.aoColumns.length;
			if (typeof c == "undefined") {
				c = false
			}
			d = 0;
			for (f = b.length; d < f; d++) {
				h[d] = b[d].slice();
				h[d].nTr = b[d].nTr;
				for (e = k - 1; e >= 0; e--) { ! a.aoColumns[e].bVisible && !c && h[d].splice(e, 1)
				}
				j.push([])
			}
			d = 0;
			for (f = h.length; d < f; d++) {
				if (h[d].nTr) {
					a = 0;
					for (e = h[d].nTr.childNodes.length; a < e; a++) {
						h[d].nTr.removeChild(h[d].nTr.childNodes[0])
					}
				}
				e = 0;
				for (b = h[d].length; e < b; e++) {
					k = c = 1;
					if (typeof j[d][e] == "undefined") {
						h[d].nTr.appendChild(h[d][e].cell);
						for (j[d][e] = 1; typeof h[d + c] != "undefined" && h[d][e].cell == h[d + c][e].cell;) {
							j[d + c][e] = 1;
							c++
						}
						for (; typeof h[d][e + k] != "undefined" && h[d][e].cell == h[d][e + k].cell;) {
							for (a = 0; a < c; a++) {
								j[d + a][e + k] = 1
							}
							k++
						}
						h[d][e].cell.setAttribute("rowspan", c);
						h[d][e].cell.setAttribute("colspan", k)
					}
				}
			}
		}
		function C(a) {
			var b, c, d = [],
			f = 0,
			e = false;
			b = a.asStripClasses.length;
			c = a.aoOpenRows.length;
			if (! (a.fnPreDrawCallback !== null && a.fnPreDrawCallback.call(a.oInstance, a) === false)) {
				a.bDrawing = true;
				if (typeof a.iInitDisplayStart != "undefined" && a.iInitDisplayStart != -1) {
					a._iDisplayStart = a.oFeatures.bServerSide ? a.iInitDisplayStart: a.iInitDisplayStart >= a.fnRecordsDisplay() ? 0 : a.iInitDisplayStart;
					a.iInitDisplayStart = -1;
					E(a)
				}
				if (a.bDeferLoading) {
					a.bDeferLoading = false;
					a.iDraw++
				} else {
					if (a.oFeatures.bServerSide) {
						if (!a.bDestroying && !za(a)) {
							return
						}
					} else {
						a.iDraw++
					}
				}
				if (a.aiDisplay.length !== 0) {
					var h = a._iDisplayStart,
					j = a._iDisplayEnd;
					if (a.oFeatures.bServerSide) {
						h = 0;
						j = a.aoData.length
					}
					for (h = h; h < j; h++) {
						var k = a.aoData[a.aiDisplay[h]];
						k.nTr === null && z(a, a.aiDisplay[h]);
						var m = k.nTr;
						if (b !== 0) {
							var t = a.asStripClasses[f % b];
							if (k._sRowStripe != t) {
								i(m).removeClass(k._sRowStripe).addClass(t);
								k._sRowStripe = t
							}
						}
						if (typeof a.fnRowCallback == "function") {
							m = a.fnRowCallback.call(a.oInstance, m, a.aoData[a.aiDisplay[h]]._aData, f, h);
							if (!m && !e) {
								J(a, 0, "A node was not returned by fnRowCallback");
								e = true
							}
						}
						d.push(m);
						f++;
						if (c !== 0) {
							for (k = 0; k < c; k++) {
								m == a.aoOpenRows[k].nParent && d.push(a.aoOpenRows[k].nTr)
							}
						}
					}
				} else {
					d[0] = p.createElement("tr");
					if (typeof a.asStripClasses[0] != "undefined") {
						d[0].className = a.asStripClasses[0]
					}
					e = a.oLanguage.sZeroRecords.replace("_MAX_", a.fnFormatNumber(a.fnRecordsTotal()));
					if (a.iDraw == 1 && a.sAjaxSource !== null && !a.oFeatures.bServerSide) {
						e = a.oLanguage.sLoadingRecords
					} else {
						if (typeof a.oLanguage.sEmptyTable != "undefined" && a.fnRecordsTotal() === 0) {
							e = a.oLanguage.sEmptyTable
						}
					}
					b = p.createElement("td");
					b.setAttribute("valign", "top");
					b.colSpan = X(a);
					b.className = a.oClasses.sRowEmpty;
					b.innerHTML = e;
					d[f].appendChild(b)
				}
				typeof a.fnHeaderCallback == "function" && a.fnHeaderCallback.call(a.oInstance, i(">tr", a.nTHead)[0], aa(a), a._iDisplayStart, a.fnDisplayEnd(), a.aiDisplay);
				typeof a.fnFooterCallback == "function" && a.fnFooterCallback.call(a.oInstance, i(">tr", a.nTFoot)[0], aa(a), a._iDisplayStart, a.fnDisplayEnd(), a.aiDisplay);
				f = p.createDocumentFragment();
				b = p.createDocumentFragment();
				if (a.nTBody) {
					e = a.nTBody.parentNode;
					b.appendChild(a.nTBody);
					if (!a.oScroll.bInfinite || !a._bInitComplete || a.bSorted || a.bFiltered) {
						c = a.nTBody.childNodes;
						for (b = c.length - 1; b >= 0; b--) {
							c[b].parentNode.removeChild(c[b])
						}
					}
					b = 0;
					for (c = d.length; b < c; b++) {
						f.appendChild(d[b])
					}
					a.nTBody.appendChild(f);
					e !== null && e.appendChild(a.nTBody)
				}
				for (b = a.aoDrawCallback.length - 1; b >= 0; b--) {
					a.aoDrawCallback[b].fn.call(a.oInstance, a)
				}
				a.bSorted = false;
				a.bFiltered = false;
				a.bDrawing = false;
				if (a.oFeatures.bServerSide) {
					K(a, false);
					typeof a._bInitComplete == "undefined" && w(a)
				}
			}
		}
		function ba(a) {
			if (a.oFeatures.bSort) {
				R(a, a.oPreviousSearch)
			} else {
				if (a.oFeatures.bFilter) {
					M(a, a.oPreviousSearch)
				} else {
					E(a);
					C(a)
				}
			}
		}
		function za(a) {
			if (a.bAjaxDataGet) {
				K(a, true);
				var b = a.aoColumns.length,
				c = [],
				d,
				f;
				a.iDraw++;
				c.push({
					name: "sEcho",
					value: a.iDraw
				});
				c.push({
					name: "iColumns",
					value: b
				});
				c.push({
					name: "sColumns",
					value: ha(a)
				});
				c.push({
					name: "iDisplayStart",
					value: a._iDisplayStart
				});
				c.push({
					name: "iDisplayLength",
					value: a.oFeatures.bPaginate !== false ? a._iDisplayLength: -1
				});
				for (f = 0; f < b; f++) {
					d = a.aoColumns[f].mDataProp;
					c.push({
						name: "mDataProp_" + f,
						value: typeof d == "function" ? "function": d
					})
				}
				if (a.oFeatures.bFilter !== false) {
					c.push({
						name: "sSearch",
						value: a.oPreviousSearch.sSearch
					});
					c.push({
						name: "bRegex",
						value: a.oPreviousSearch.bRegex
					});
					for (f = 0; f < b; f++) {
						c.push({
							name: "sSearch_" + f,
							value: a.aoPreSearchCols[f].sSearch
						});
						c.push({
							name: "bRegex_" + f,
							value: a.aoPreSearchCols[f].bRegex
						});
						c.push({
							name: "bSearchable_" + f,
							value: a.aoColumns[f].bSearchable
						})
					}
				}
				if (a.oFeatures.bSort !== false) {
					d = a.aaSortingFixed !== null ? a.aaSortingFixed.length: 0;
					var e = a.aaSorting.length;
					c.push({
						name: "iSortingCols",
						value: d + e
					});
					for (f = 0; f < d; f++) {
						c.push({
							name: "iSortCol_" + f,
							value: a.aaSortingFixed[f][0]
						});
						c.push({
							name: "sSortDir_" + f,
							value: a.aaSortingFixed[f][1]
						})
					}
					for (f = 0; f < e; f++) {
						c.push({
							name: "iSortCol_" + (f + d),
							value: a.aaSorting[f][0]
						});
						c.push({
							name: "sSortDir_" + (f + d),
							value: a.aaSorting[f][1]
						})
					}
					for (f = 0; f < b; f++) {
						c.push({
							name: "bSortable_" + f,
							value: a.aoColumns[f].bSortable
						})
					}
				}
				a.fnServerData.call(a.oInstance, a.sAjaxSource, c,
				function(h) {
					Aa(a, h)
				},
				a);
				return false
			} else {
				return true
			}
		}
		function Aa(a, b) {
			if (typeof b.sEcho != "undefined") {
				if (b.sEcho * 1 < a.iDraw) {
					return
				} else {
					a.iDraw = b.sEcho * 1
				}
			}
			if (!a.oScroll.bInfinite || a.oScroll.bInfinite && (a.bSorted || a.bFiltered)) {
				ia(a)
			}
			a._iRecordsTotal = b.iTotalRecords;
			a._iRecordsDisplay = b.iTotalDisplayRecords;
			var c = ha(a);
			if (c = typeof b.sColumns != "undefined" && c !== "" && b.sColumns != c) {
				var d = Ba(a, b.sColumns)
			}
			b = Z(a.sAjaxDataProp)(b);
			for (var f = 0,
			e = b.length; f < e; f++) {
				if (c) {
					for (var h = [], j = 0, k = a.aoColumns.length; j < k; j++) {
						h.push(b[f][d[j]])
					}
					v(a, h)
				} else {
					v(a, b[f])
				}
			}
			a.aiDisplay = a.aiDisplayMaster.slice();
			a.bAjaxDataGet = false;
			C(a);
			a.bAjaxDataGet = true;
			K(a, false)
		}
		function xa(a) {
			var b = p.createElement("div");
			a.nTable.parentNode.insertBefore(b, a.nTable);
			a.nTableWrapper = p.createElement("div");
			a.nTableWrapper.className = a.oClasses.sWrapper;
			a.sTableId !== "" && a.nTableWrapper.setAttribute("id", a.sTableId + "_wrapper");
			a.nTableReinsertBefore = a.nTable.nextSibling;
			for (var c = a.nTableWrapper,
			d = a.sDom.split(""), f, e, h, j, k, m, t, q = 0; q < d.length; q++) {
				e = 0;
				h = d[q];
				if (h == "<") {
					j = p.createElement("div");
					k = d[q + 1];
					if (k == "'" || k == '"') {
						m = "";
						for (t = 2; d[q + t] != k;) {
							m += d[q + t];
							t++
						}
						if (m == "H") {
							m = "fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"
						} else {
							if (m == "F") {
								m = "fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"
							}
						}
						if (m.indexOf(".") != -1) {
							k = m.split(".");
							j.setAttribute("id", k[0].substr(1, k[0].length - 1));
							j.className = k[1]
						} else {
							if (m.charAt(0) == "#") {
								j.setAttribute("id", m.substr(1, m.length - 1))
							} else {
								j.className = m
							}
						}
						q += t
					}
					c.appendChild(j);
					c = j
				} else {
					if (h == ">") {
						c = c.parentNode
					} else {
						if (h == "l" && a.oFeatures.bPaginate && a.oFeatures.bLengthChange) {
							f = Ca(a);
							e = 1
						} else {
							if (h == "f" && a.oFeatures.bFilter) {
								f = Da(a);
								e = 1
							} else {
								if (h == "r" && a.oFeatures.bProcessing) {
									f = Ea(a);
									e = 1
								} else {
									if (h == "t") {
										f = Fa(a);
										e = 1
									} else {
										if (h == "i" && a.oFeatures.bInfo) {
											f = Ga(a);
											e = 1
										} else {
											if (h == "p" && a.oFeatures.bPaginate) {
												f = Ha(a);
												e = 1
											} else {
												if (o.aoFeatures.length !== 0) {
													j = o.aoFeatures;
													t = 0;
													for (k = j.length; t < k; t++) {
														if (h == j[t].cFeature) {
															if (f = j[t].fnInit(a)) {
																e = 1
															}
															break
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if (e == 1 && f !== null) {
					if (typeof a.aanFeatures[h] != "object") {
						a.aanFeatures[h] = []
					}
					a.aanFeatures[h].push(f);
					c.appendChild(f)
				}
			}
			b.parentNode.replaceChild(a.nTableWrapper, b)
		}
		function Fa(a) {
			if (a.oScroll.sX === "" && a.oScroll.sY === "") {
				return a.nTable
			}
			var b = p.createElement("div"),
			c = p.createElement("div"),
			d = p.createElement("div"),
			f = p.createElement("div"),
			e = p.createElement("div"),
			h = p.createElement("div"),
			j = a.nTable.cloneNode(false),
			k = a.nTable.cloneNode(false),
			m = a.nTable.getElementsByTagName("thead")[0],
			t = a.nTable.getElementsByTagName("tfoot").length === 0 ? null: a.nTable.getElementsByTagName("tfoot")[0],
			q = typeof g.bJQueryUI != "undefined" && g.bJQueryUI ? o.oJUIClasses: o.oStdClasses;
			c.appendChild(d);
			e.appendChild(h);
			f.appendChild(a.nTable);
			b.appendChild(c);
			b.appendChild(f);
			d.appendChild(j);
			j.appendChild(m);
			if (t !== null) {
				b.appendChild(e);
				h.appendChild(k);
				k.appendChild(t)
			}
			b.className = q.sScrollWrapper;
			c.className = q.sScrollHead;
			d.className = q.sScrollHeadInner;
			f.className = q.sScrollBody;
			e.className = q.sScrollFoot;
			h.className = q.sScrollFootInner;
			if (a.oScroll.bAutoCss) {
				c.style.overflow = "hidden";
				c.style.position = "relative";
				e.style.overflow = "hidden";
				f.style.overflow = "auto"
			}
			c.style.border = "0";
			c.style.width = "100%";
			e.style.border = "0";
			d.style.width = "150%";
			j.removeAttribute("id");
			j.style.marginLeft = "0";
			a.nTable.style.marginLeft = "0";
			if (t !== null) {
				k.removeAttribute("id");
				k.style.marginLeft = "0"
			}
			d = i(">caption", a.nTable);
			h = 0;
			for (k = d.length; h < k; h++) {
				j.appendChild(d[h])
			}
			if (a.oScroll.sX !== "") {
				c.style.width = u(a.oScroll.sX);
				f.style.width = u(a.oScroll.sX);
				if (t !== null) {
					e.style.width = u(a.oScroll.sX)
				}
				i(f).scroll(function() {
					c.scrollLeft = this.scrollLeft;
					if (t !== null) {
						e.scrollLeft = this.scrollLeft
					}
				})
			}
			if (a.oScroll.sY !== "") {
				f.style.height = u(a.oScroll.sY)
			}
			a.aoDrawCallback.push({
				fn: Ia,
				sName: "scrolling"
			});
			a.oScroll.bInfinite && i(f).scroll(function() {
				if (!a.bDrawing) {
					if (i(this).scrollTop() + i(this).height() > i(a.nTable).height() - a.oScroll.iLoadGap) {
						if (a.fnDisplayEnd() < a.fnRecordsDisplay()) {
							ja(a, "next");
							E(a);
							C(a)
						}
					}
				}
			});
			a.nScrollHead = c;
			a.nScrollFoot = e;
			return b
		}
		function Ia(a) {
			var b = a.nScrollHead.getElementsByTagName("div")[0],
			c = b.getElementsByTagName("table")[0],
			d = a.nTable.parentNode,
			f,
			e,
			h,
			j,
			k,
			m,
			t,
			q,
			I = [];
			h = a.nTable.getElementsByTagName("thead");
			h.length > 0 && a.nTable.removeChild(h[0]);
			if (a.nTFoot !== null) {
				k = a.nTable.getElementsByTagName("tfoot");
				k.length > 0 && a.nTable.removeChild(k[0])
			}
			h = a.nTHead.cloneNode(true);
			a.nTable.insertBefore(h, a.nTable.childNodes[0]);
			if (a.nTFoot !== null) {
				k = a.nTFoot.cloneNode(true);
				a.nTable.insertBefore(k, a.nTable.childNodes[1])
			}
			if (a.oScroll.sX === "") {
				d.style.width = "100%";
				b.parentNode.style.width = "100%"
			}
			var O = S(a, h);
			f = 0;
			for (e = O.length; f < e; f++) {
				t = Ja(a, f);
				O[f].style.width = a.aoColumns[t].sWidth
			}
			a.nTFoot !== null && P(function(B) {
				B.style.width = ""
			},
			k.getElementsByTagName("tr"));
			f = i(a.nTable).outerWidth();
			if (a.oScroll.sX === "") {
				a.nTable.style.width = "100%";
				if (i.browser.msie && i.browser.version <= 7) {
					a.nTable.style.width = u(i(a.nTable).outerWidth() - a.oScroll.iBarWidth)
				}
			} else {
				if (a.oScroll.sXInner !== "") {
					a.nTable.style.width = u(a.oScroll.sXInner)
				} else {
					if (f == i(d).width() && i(d).height() < i(a.nTable).height()) {
						a.nTable.style.width = u(f - a.oScroll.iBarWidth);
						if (i(a.nTable).outerWidth() > f - a.oScroll.iBarWidth) {
							a.nTable.style.width = u(f)
						}
					} else {
						a.nTable.style.width = u(f)
					}
				}
			}
			f = i(a.nTable).outerWidth();
			if (a.oScroll.sX === "") {
				d.style.width = u(f + a.oScroll.iBarWidth);
				b.parentNode.style.width = u(f + a.oScroll.iBarWidth)
			}
			e = a.nTHead.getElementsByTagName("tr");
			h = h.getElementsByTagName("tr");
			P(function(B, F) {
				m = B.style;
				m.paddingTop = "0";
				m.paddingBottom = "0";
				m.borderTopWidth = "0";
				m.borderBottomWidth = "0";
				m.height = 0;
				q = i(B).width();
				F.style.width = u(q);
				I.push(q)
			},
			h, e);
			i(h).height(0);
			if (a.nTFoot !== null) {
				j = k.getElementsByTagName("tr");
				k = a.nTFoot.getElementsByTagName("tr");
				P(function(B, F) {
					m = B.style;
					m.paddingTop = "0";
					m.paddingBottom = "0";
					m.borderTopWidth = "0";
					m.borderBottomWidth = "0";
					m.height = 0;
					q = i(B).width();
					F.style.width = u(q);
					I.push(q)
				},
				j, k);
				i(j).height(0)
			}
			P(function(B) {
				B.innerHTML = "";
				B.style.width = u(I.shift())
			},
			h);
			a.nTFoot !== null && P(function(B) {
				B.innerHTML = "";
				B.style.width = u(I.shift())
			},
			j);
			if (i(a.nTable).outerWidth() < f) {
				if (a.oScroll.sX === "") {
					J(a, 1, "The table cannot fit into the current element which will cause column misalignment. It is suggested that you enable x-scrolling or increase the width the table has in which to be drawn")
				} else {
					a.oScroll.sXInner !== "" && J(a, 1, "The table cannot fit into the current element which will cause column misalignment. It is suggested that you increase the sScrollXInner property to allow it to draw in a larger area, or simply remove that parameter to allow automatic calculation")
				}
			}
			if (a.oScroll.sY === "") {
				if (i.browser.msie && i.browser.version <= 7) {
					d.style.height = u(a.nTable.offsetHeight + a.oScroll.iBarWidth)
				}
			}
			if (a.oScroll.sY !== "" && a.oScroll.bCollapse) {
				d.style.height = u(a.oScroll.sY);
				j = a.oScroll.sX !== "" && a.nTable.offsetWidth > d.offsetWidth ? a.oScroll.iBarWidth: 0;
				if (a.nTable.offsetHeight < d.offsetHeight) {
					d.style.height = u(i(a.nTable).height() + j)
				}
			}
			j = i(a.nTable).outerWidth();
			c.style.width = u(j);
			b.style.width = u(j + a.oScroll.iBarWidth);
			if (a.nTFoot !== null) {
				b = a.nScrollFoot.getElementsByTagName("div")[0];
				c = b.getElementsByTagName("table")[0];
				b.style.width = u(a.nTable.offsetWidth + a.oScroll.iBarWidth);
				c.style.width = u(a.nTable.offsetWidth)
			}
			if (a.bSorted || a.bFiltered) {
				d.scrollTop = 0
			}
		}
		function ca(a) {
			if (a.oFeatures.bAutoWidth === false) {
				return false
			}
			ea(a);
			for (var b = 0,
			c = a.aoColumns.length; b < c; b++) {
				a.aoColumns[b].nTh.style.width = a.aoColumns[b].sWidth
			}
		}
		function Da(a) {
			var b = a.oLanguage.sSearch;
			b = b.indexOf("_INPUT_") !== -1 ? b.replace("_INPUT_", '<input type="text" />') : b === "" ? '<input type="text" />': b + ' <input type="text" />';
			var c = p.createElement("div");
			c.className = a.oClasses.sFilter;
			c.innerHTML = "<label>" + b + "</label>";
			a.sTableId !== "" && typeof a.aanFeatures.f == "undefined" && c.setAttribute("id", a.sTableId + "_filter");
			b = i("input", c);
			b.val(a.oPreviousSearch.sSearch.replace('"', "&quot;"));
			b.bind("keyup.DT",
			function() {
				for (var d = a.aanFeatures.f,
				f = 0,
				e = d.length; f < e; f++) {
					d[f] != this.parentNode && i("input", d[f]).val(this.value)
				}
				this.value != a.oPreviousSearch.sSearch && M(a, {
					sSearch: this.value,
					bRegex: a.oPreviousSearch.bRegex,
					bSmart: a.oPreviousSearch.bSmart
				})
			});
			b.bind("keypress.DT",
			function(d) {
				if (d.keyCode == 13) {
					return false
				}
			});
			return c
		}
		function M(a, b, c) {
			Ka(a, b.sSearch, c, b.bRegex, b.bSmart);
			for (b = 0; b < a.aoPreSearchCols.length; b++) {
				La(a, a.aoPreSearchCols[b].sSearch, b, a.aoPreSearchCols[b].bRegex, a.aoPreSearchCols[b].bSmart)
			}
			o.afnFiltering.length !== 0 && Ma(a);
			a.bFiltered = true;
			a._iDisplayStart = 0;
			E(a);
			C(a);
			ka(a, 0)
		}
		function Ma(a) {
			for (var b = o.afnFiltering,
			c = 0,
			d = b.length; c < d; c++) {
				for (var f = 0,
				e = 0,
				h = a.aiDisplay.length; e < h; e++) {
					var j = a.aiDisplay[e - f];
					if (!b[c](a, da(a, j, "filter"), j)) {
						a.aiDisplay.splice(e - f, 1);
						f++
					}
				}
			}
		}
		function La(a, b, c, d, f) {
			if (b !== "") {
				var e = 0;
				b = la(b, d, f);
				for (d = a.aiDisplay.length - 1; d >= 0; d--) {
					f = ma(H(a, a.aiDisplay[d], c, "filter"), a.aoColumns[c].sType);
					if (!b.test(f)) {
						a.aiDisplay.splice(d, 1);
						e++
					}
				}
			}
		}
		function Ka(a, b, c, d, f) {
			var e = la(b, d, f);
			if (typeof c == "undefined" || c === null) {
				c = 0
			}
			if (o.afnFiltering.length !== 0) {
				c = 1
			}
			if (b.length <= 0) {
				a.aiDisplay.splice(0, a.aiDisplay.length);
				a.aiDisplay = a.aiDisplayMaster.slice()
			} else {
				if (a.aiDisplay.length == a.aiDisplayMaster.length || a.oPreviousSearch.sSearch.length > b.length || c == 1 || b.indexOf(a.oPreviousSearch.sSearch) !== 0) {
					a.aiDisplay.splice(0, a.aiDisplay.length);
					ka(a, 1);
					for (c = 0; c < a.aiDisplayMaster.length; c++) {
						e.test(a.asDataSearch[c]) && a.aiDisplay.push(a.aiDisplayMaster[c])
					}
				} else {
					var h = 0;
					for (c = 0; c < a.asDataSearch.length; c++) {
						if (!e.test(a.asDataSearch[c])) {
							a.aiDisplay.splice(c - h, 1);
							h++
						}
					}
				}
			}
			a.oPreviousSearch.sSearch = b;
			a.oPreviousSearch.bRegex = d;
			a.oPreviousSearch.bSmart = f
		}
		function ka(a, b) {
			a.asDataSearch.splice(0, a.asDataSearch.length);
			b = typeof b != "undefined" && b == 1 ? a.aiDisplayMaster: a.aiDisplay;
			for (var c = 0,
			d = b.length; c < d; c++) {
				a.asDataSearch[c] = na(a, da(a, b[c], "filter"))
			}
		}
		function na(a, b) {
			var c = "";
			if (typeof a.__nTmpFilter == "undefined") {
				a.__nTmpFilter = p.createElement("div")
			}
			for (var d = a.__nTmpFilter,
			f = 0,
			e = a.aoColumns.length; f < e; f++) {
				if (a.aoColumns[f].bSearchable) {
					c += ma(b[f], a.aoColumns[f].sType) + "  "
				}
			}
			if (c.indexOf("&") !== -1) {
				d.innerHTML = c;
				c = d.textContent ? d.textContent: d.innerText;
				c = c.replace(/\n/g, " ").replace(/\r/g, "")
			}
			return c
		}
		function la(a, b, c) {
			if (c) {
				a = b ? a.split(" ") : oa(a).split(" ");
				a = "^(?=.*?" + a.join(")(?=.*?") + ").*$";
				return new RegExp(a, "i")
			} else {
				a = b ? a: oa(a);
				return new RegExp(a, "i")
			}
		}
		function ma(a, b) {
			if (typeof o.ofnSearch[b] == "function") {
				return o.ofnSearch[b](a)
			} else {
				if (b == "html") {
					return a.replace(/\n/g, " ").replace(/<.*?>/g, "")
				} else {
					if (typeof a == "string") {
						return a.replace(/\n/g, " ")
					} else {
						if (a === null) {
							return ""
						}
					}
				}
			}
			return a
		}
		function R(a, b) {
			var c, d, f, e, h = [],
			j = [],
			k = o.oSort;
			d = a.aoData;
			var m = a.aoColumns;
			if (!a.oFeatures.bServerSide && (a.aaSorting.length !== 0 || a.aaSortingFixed !== null)) {
				h = a.aaSortingFixed !== null ? a.aaSortingFixed.concat(a.aaSorting) : a.aaSorting.slice();
				for (c = 0; c < h.length; c++) {
					var t = h[c][0];
					f = pa(a, t);
					e = a.aoColumns[t].sSortDataType;
					if (typeof o.afnSortData[e] != "undefined") {
						var q = o.afnSortData[e](a, t, f);
						f = 0;
						for (e = d.length; f < e; f++) {
							N(a, f, t, q[f])
						}
					}
				}
				c = 0;
				for (d = a.aiDisplayMaster.length; c < d; c++) {
					j[a.aiDisplayMaster[c]] = c
				}
				var I = h.length;
				a.aiDisplayMaster.sort(function(O, B) {
					var F, qa;
					for (c = 0; c < I; c++) {
						F = m[h[c][0]].iDataSort;
						qa = m[F].sType;
						F = k[(qa ? qa: "string") + "-" + h[c][1]](H(a, O, F, "sort"), H(a, B, F, "sort"));
						if (F !== 0) {
							return F
						}
					}
					return k["numeric-asc"](j[O], j[B])
				})
			}
			if ((typeof b == "undefined" || b) && !a.oFeatures.bDeferRender) {
				T(a)
			}
			a.bSorted = true;
			if (a.oFeatures.bFilter) {
				M(a, a.oPreviousSearch, 1)
			} else {
				a.aiDisplay = a.aiDisplayMaster.slice();
				a._iDisplayStart = 0;
				E(a);
				C(a)
			}
		}
		function ga(a, b, c, d) {
			i(b).bind("click.DT",
			function(f) {
				if (a.aoColumns[c].bSortable !== false) {
					var e = function() {
						var h, j;
						if (f.shiftKey) {
							for (var k = false,
							m = 0; m < a.aaSorting.length; m++) {
								if (a.aaSorting[m][0] == c) {
									k = true;
									h = a.aaSorting[m][0];
									j = a.aaSorting[m][2] + 1;
									if (typeof a.aoColumns[h].asSorting[j] == "undefined") {
										a.aaSorting.splice(m, 1)
									} else {
										a.aaSorting[m][1] = a.aoColumns[h].asSorting[j];
										a.aaSorting[m][2] = j
									}
									break
								}
							}
							k === false && a.aaSorting.push([c, a.aoColumns[c].asSorting[0], 0])
						} else {
							if (a.aaSorting.length == 1 && a.aaSorting[0][0] == c) {
								h = a.aaSorting[0][0];
								j = a.aaSorting[0][2] + 1;
								if (typeof a.aoColumns[h].asSorting[j] == "undefined") {
									j = 0
								}
								a.aaSorting[0][1] = a.aoColumns[h].asSorting[j];
								a.aaSorting[0][2] = j
							} else {
								a.aaSorting.splice(0, a.aaSorting.length);
								a.aaSorting.push([c, a.aoColumns[c].asSorting[0], 0])
							}
						}
						R(a)
					};
					if (a.oFeatures.bProcessing) {
						K(a, true);
						setTimeout(function() {
							e();
							a.oFeatures.bServerSide || K(a, false)
						},
						0)
					} else {
						e()
					}
					typeof d == "function" && d(a)
				}
			})
		}
		function T(a) {
			var b, c, d, f, e, h = a.aoColumns.length,
			j = a.oClasses;
			for (b = 0; b < h; b++) {
				a.aoColumns[b].bSortable && i(a.aoColumns[b].nTh).removeClass(j.sSortAsc + " " + j.sSortDesc + " " + a.aoColumns[b].sSortingClass)
			}
			f = a.aaSortingFixed !== null ? a.aaSortingFixed.concat(a.aaSorting) : a.aaSorting.slice();
			for (b = 0; b < a.aoColumns.length; b++) {
				if (a.aoColumns[b].bSortable) {
					e = a.aoColumns[b].sSortingClass;
					d = -1;
					for (c = 0; c < f.length; c++) {
						if (f[c][0] == b) {
							e = f[c][1] == "asc" ? j.sSortAsc: j.sSortDesc;
							d = c;
							break
						}
					}
					i(a.aoColumns[b].nTh).addClass(e);
					if (a.bJUI) {
						c = i("span", a.aoColumns[b].nTh);
						c.removeClass(j.sSortJUIAsc + " " + j.sSortJUIDesc + " " + j.sSortJUI + " " + j.sSortJUIAscAllowed + " " + j.sSortJUIDescAllowed);
						c.addClass(d == -1 ? a.aoColumns[b].sSortingClassJUI: f[d][1] == "asc" ? j.sSortJUIAsc: j.sSortJUIDesc)
					}
				} else {
					i(a.aoColumns[b].nTh).addClass(a.aoColumns[b].sSortingClass)
				}
			}
			e = j.sSortColumn;
			if (a.oFeatures.bSort && a.oFeatures.bSortClasses) {
				d = Q(a);
				if (a.oFeatures.bDeferRender) {
					i(d).removeClass(e + "1 " + e + "2 " + e + "3")
				} else {
					if (d.length >= h) {
						for (b = 0; b < h; b++) {
							if (d[b].className.indexOf(e + "1") != -1) {
								c = 0;
								for (a = d.length / h; c < a; c++) {
									d[h * c + b].className = i.trim(d[h * c + b].className.replace(e + "1", ""))
								}
							} else {
								if (d[b].className.indexOf(e + "2") != -1) {
									c = 0;
									for (a = d.length / h; c < a; c++) {
										d[h * c + b].className = i.trim(d[h * c + b].className.replace(e + "2", ""))
									}
								} else {
									if (d[b].className.indexOf(e + "3") != -1) {
										c = 0;
										for (a = d.length / h; c < a; c++) {
											d[h * c + b].className = i.trim(d[h * c + b].className.replace(" " + e + "3", ""))
										}
									}
								}
							}
						}
					}
				}
				j = 1;
				var k;
				for (b = 0; b < f.length; b++) {
					k = parseInt(f[b][0], 10);
					c = 0;
					for (a = d.length / h; c < a; c++) {
						d[h * c + k].className += " " + e + j
					}
					j < 3 && j++
				}
			}
		}
		function Ha(a) {
			if (a.oScroll.bInfinite) {
				return null
			}
			var b = p.createElement("div");
			b.className = a.oClasses.sPaging + a.sPaginationType;
			o.oPagination[a.sPaginationType].fnInit(a, b,
			function(c) {
				E(c);
				C(c)
			});
			typeof a.aanFeatures.p == "undefined" && a.aoDrawCallback.push({
				fn: function(c) {
					o.oPagination[c.sPaginationType].fnUpdate(c,
					function(d) {
						E(d);
						C(d)
					})
				},
				sName: "pagination"
			});
			return b
		}
		function ja(a, b) {
			var c = a._iDisplayStart;
			if (b == "first") {
				a._iDisplayStart = 0
			} else {
				if (b == "previous") {
					a._iDisplayStart = a._iDisplayLength >= 0 ? a._iDisplayStart - a._iDisplayLength: 0;
					if (a._iDisplayStart < 0) {
						a._iDisplayStart = 0
					}
				} else {
					if (b == "next") {
						if (a._iDisplayLength >= 0) {
							if (a._iDisplayStart + a._iDisplayLength < a.fnRecordsDisplay()) {
								a._iDisplayStart += a._iDisplayLength
							}
						} else {
							a._iDisplayStart = 0
						}
					} else {
						if (b == "last") {
							if (a._iDisplayLength >= 0) {
								b = parseInt((a.fnRecordsDisplay() - 1) / a._iDisplayLength, 10) + 1;
								a._iDisplayStart = (b - 1) * a._iDisplayLength
							} else {
								a._iDisplayStart = 0
							}
						} else {
							J(a, 0, "Unknown paging action: " + b)
						}
					}
				}
			}
			return c != a._iDisplayStart
		}
		function Ga(a) {
			var b = p.createElement("div");
			b.className = a.oClasses.sInfo;
			if (typeof a.aanFeatures.i == "undefined") {
				a.aoDrawCallback.push({
					fn: Na,
					sName: "information"
				});
				a.sTableId !== "" && b.setAttribute("id", a.sTableId + "_info")
			}
			return b
		}
		function Na(a) {
			if (! (!a.oFeatures.bInfo || a.aanFeatures.i.length === 0)) {
				var b = a._iDisplayStart + 1,
				c = a.fnDisplayEnd(),
				d = a.fnRecordsTotal(),
				f = a.fnRecordsDisplay(),
				e = a.fnFormatNumber(b),
				h = a.fnFormatNumber(c),
				j = a.fnFormatNumber(d),
				k = a.fnFormatNumber(f);
				if (a.oScroll.bInfinite) {
					e = a.fnFormatNumber(1)
				}
				e = a.fnRecordsDisplay() === 0 && a.fnRecordsDisplay() == a.fnRecordsTotal() ? a.oLanguage.sInfoEmpty + a.oLanguage.sInfoPostFix: a.fnRecordsDisplay() === 0 ? a.oLanguage.sInfoEmpty + " " + a.oLanguage.sInfoFiltered.replace("_MAX_", j) + a.oLanguage.sInfoPostFix: a.fnRecordsDisplay() == a.fnRecordsTotal() ? a.oLanguage.sInfo.replace("_START_", e).replace("_END_", h).replace("_TOTAL_", k) + a.oLanguage.sInfoPostFix: a.oLanguage.sInfo.replace("_START_", e).replace("_END_", h).replace("_TOTAL_", k) + " " + a.oLanguage.sInfoFiltered.replace("_MAX_", a.fnFormatNumber(a.fnRecordsTotal())) + a.oLanguage.sInfoPostFix;
				if (a.oLanguage.fnInfoCallback !== null) {
					e = a.oLanguage.fnInfoCallback(a, b, c, d, f, e)
				}
				a = a.aanFeatures.i;
				b = 0;
				for (c = a.length; b < c; b++) {
					i(a[b]).html(e)
				}
			}
		}
		function Ca(a) {
			if (a.oScroll.bInfinite) {
				return null
			}
			var b = '<select size="1" ' + (a.sTableId === "" ? "": 'name="' + a.sTableId + '_length"') + ">",
			c,
			d;
			if (a.aLengthMenu.length == 2 && typeof a.aLengthMenu[0] == "object" && typeof a.aLengthMenu[1] == "object") {
				c = 0;
				for (d = a.aLengthMenu[0].length; c < d; c++) {
					b += '<option value="' + a.aLengthMenu[0][c] + '">' + a.aLengthMenu[1][c] + "</option>"
				}
			} else {
				c = 0;
				for (d = a.aLengthMenu.length; c < d; c++) {
					b += '<option value="' + a.aLengthMenu[c] + '">' + a.aLengthMenu[c] + "</option>"
				}
			}
			b += "</select>";
			var f = p.createElement("div");
			a.sTableId !== "" && typeof a.aanFeatures.l == "undefined" && f.setAttribute("id", a.sTableId + "_length");
			f.className = a.oClasses.sLength;
			f.innerHTML = "<label>" + a.oLanguage.sLengthMenu.replace("_MENU_", b) + "</label>";
			i('select option[value="' + a._iDisplayLength + '"]', f).attr("selected", true);
			i("select", f).bind("change.DT",
			function() {
				var e = i(this).val(),
				h = a.aanFeatures.l;
				c = 0;
				for (d = h.length; c < d; c++) {
					h[c] != this.parentNode && i("select", h[c]).val(e)
				}
				a._iDisplayLength = parseInt(e, 10);
				E(a);
				if (a.fnDisplayEnd() == a.fnRecordsDisplay()) {
					a._iDisplayStart = a.fnDisplayEnd() - a._iDisplayLength;
					if (a._iDisplayStart < 0) {
						a._iDisplayStart = 0
					}
				}
				if (a._iDisplayLength == -1) {
					a._iDisplayStart = 0
				}
				C(a)
			});
			return f
		}
		function Ea(a) {
			var b = p.createElement("div");
			a.sTableId !== "" && typeof a.aanFeatures.r == "undefined" && b.setAttribute("id", a.sTableId + "_processing");
			b.innerHTML = a.oLanguage.sProcessing;
			b.className = a.oClasses.sProcessing;
			a.nTable.parentNode.insertBefore(b, a.nTable);
			return b
		}
		function K(a, b) {
			if (a.oFeatures.bProcessing) {
				a = a.aanFeatures.r;
				for (var c = 0,
				d = a.length; c < d; c++) {
					a[c].style.visibility = b ? "visible": "hidden"
				}
			}
		}
		function Ja(a, b) {
			for (var c = -1,
			d = 0; d < a.aoColumns.length; d++) {
				a.aoColumns[d].bVisible === true && c++;
				if (c == b) {
					return d
				}
			}
			return null
		}
		function pa(a, b) {
			for (var c = -1,
			d = 0; d < a.aoColumns.length; d++) {
				a.aoColumns[d].bVisible === true && c++;
				if (d == b) {
					return a.aoColumns[d].bVisible === true ? c: null
				}
			}
			return null
		}
		function U(a, b) {
			var c, d;
			c = a._iDisplayStart;
			for (d = a._iDisplayEnd; c < d; c++) {
				if (a.aoData[a.aiDisplay[c]].nTr == b) {
					return a.aiDisplay[c]
				}
			}
			c = 0;
			for (d = a.aoData.length; c < d; c++) {
				if (a.aoData[c].nTr == b) {
					return c
				}
			}
			return null
		}
		function X(a) {
			for (var b = 0,
			c = 0; c < a.aoColumns.length; c++) {
				a.aoColumns[c].bVisible === true && b++
			}
			return b
		}
		function E(a) {
			a._iDisplayEnd = a.oFeatures.bPaginate === false ? a.aiDisplay.length: a._iDisplayStart + a._iDisplayLength > a.aiDisplay.length || a._iDisplayLength == -1 ? a.aiDisplay.length: a._iDisplayStart + a._iDisplayLength
		}
		function Oa(a, b) {
			if (!a || a === null || a === "") {
				return 0
			}
			if (typeof b == "undefined") {
				b = p.getElementsByTagName("body")[0]
			}
			var c = p.createElement("div");
			c.style.width = u(a);
			b.appendChild(c);
			a = c.offsetWidth;
			b.removeChild(c);
			return a
		}
		function ea(a) {
			var b = 0,
			c, d = 0,
			f = a.aoColumns.length,
			e, h = i("th", a.nTHead);
			for (e = 0; e < f; e++) {
				if (a.aoColumns[e].bVisible) {
					d++;
					if (a.aoColumns[e].sWidth !== null) {
						c = Oa(a.aoColumns[e].sWidthOrig, a.nTable.parentNode);
						if (c !== null) {
							a.aoColumns[e].sWidth = u(c)
						}
						b++
					}
				}
			}
			if (f == h.length && b === 0 && d == f && a.oScroll.sX === "" && a.oScroll.sY === "") {
				for (e = 0; e < a.aoColumns.length; e++) {
					c = i(h[e]).width();
					if (c !== null) {
						a.aoColumns[e].sWidth = u(c)
					}
				}
			} else {
				b = a.nTable.cloneNode(false);
				e = a.nTHead.cloneNode(true);
				d = p.createElement("tbody");
				c = p.createElement("tr");
				b.removeAttribute("id");
				b.appendChild(e);
				if (a.nTFoot !== null) {
					b.appendChild(a.nTFoot.cloneNode(true));
					P(function(k) {
						k.style.width = ""
					},
					b.getElementsByTagName("tr"))
				}
				b.appendChild(d);
				d.appendChild(c);
				d = i("thead th", b);
				if (d.length === 0) {
					d = i("tbody tr:eq(0)>td", b)
				}
				h = S(a, e);
				for (e = d = 0; e < f; e++) {
					var j = a.aoColumns[e];
					if (j.bVisible && j.sWidthOrig !== null && j.sWidthOrig !== "") {
						h[e - d].style.width = u(j.sWidthOrig)
					} else {
						if (j.bVisible) {
							h[e - d].style.width = ""
						} else {
							d++
						}
					}
				}
				for (e = 0; e < f; e++) {
					if (a.aoColumns[e].bVisible) {
						d = Pa(a, e);
						if (d !== null) {
							d = d.cloneNode(true);
							if (a.aoColumns[e].sContentPadding !== "") {
								d.innerHTML += a.aoColumns[e].sContentPadding
							}
							c.appendChild(d)
						}
					}
				}
				f = a.nTable.parentNode;
				f.appendChild(b);
				if (a.oScroll.sX !== "" && a.oScroll.sXInner !== "") {
					b.style.width = u(a.oScroll.sXInner)
				} else {
					if (a.oScroll.sX !== "") {
						b.style.width = "";
						if (i(b).width() < f.offsetWidth) {
							b.style.width = u(f.offsetWidth)
						}
					} else {
						if (a.oScroll.sY !== "") {
							b.style.width = u(f.offsetWidth)
						}
					}
				}
				b.style.visibility = "hidden";
				Qa(a, b);
				f = i("tbody tr:eq(0)", b).children();
				if (f.length === 0) {
					f = S(a, i("thead", b)[0])
				}
				if (a.oScroll.sX !== "") {
					for (e = d = c = 0; e < a.aoColumns.length; e++) {
						if (a.aoColumns[e].bVisible) {
							c += a.aoColumns[e].sWidthOrig === null ? i(f[d]).outerWidth() : parseInt(a.aoColumns[e].sWidth.replace("px", ""), 10) + (i(f[d]).outerWidth() - i(f[d]).width());
							d++
						}
					}
					b.style.width = u(c);
					a.nTable.style.width = u(c)
				}
				for (e = d = 0; e < a.aoColumns.length; e++) {
					if (a.aoColumns[e].bVisible) {
						c = i(f[d]).width();
						if (c !== null && c > 0) {
							a.aoColumns[e].sWidth = u(c)
						}
						d++
					}
				}
				a.nTable.style.width = u(i(b).outerWidth());
				b.parentNode.removeChild(b)
			}
		}
		function Qa(a, b) {
			if (a.oScroll.sX === "" && a.oScroll.sY !== "") {
				i(b).width();
				b.style.width = u(i(b).outerWidth() - a.oScroll.iBarWidth)
			} else {
				if (a.oScroll.sX !== "") {
					b.style.width = u(i(b).outerWidth())
				}
			}
		}
		function Pa(a, b) {
			var c = Ra(a, b);
			if (c < 0) {
				return null
			}
			if (a.aoData[c].nTr === null) {
				var d = p.createElement("td");
				d.innerHTML = H(a, c, b, "");
				return d
			}
			return Q(a, c)[b]
		}
		function Ra(a, b) {
			for (var c = -1,
			d = -1,
			f = 0; f < a.aoData.length; f++) {
				var e = H(a, f, b, "display") + "";
				e = e.replace(/<.*?>/g, "");
				if (e.length > c) {
					c = e.length;
					d = f
				}
			}
			return d
		}
		function u(a) {
			if (a === null) {
				return "0px"
			}
			if (typeof a == "number") {
				if (a < 0) {
					return "0px"
				}
				return a + "px"
			}
			var b = a.charCodeAt(a.length - 1);
			if (b < 48 || b > 57) {
				return a
			}
			return a + "px"
		}
		function Va(a, b) {
			if (a.length != b.length) {
				return 1
			}
			for (var c = 0; c < a.length; c++) {
				if (a[c] != b[c]) {
					return 2
				}
			}
			return 0
		}
		function fa(a) {
			for (var b = o.aTypes,
			c = b.length,
			d = 0; d < c; d++) {
				var f = b[d](a);
				if (f !== null) {
					return f
				}
			}
			return "string"
		}
		function A(a) {
			for (var b = 0; b < D.length; b++) {
				if (D[b].nTable == a) {
					return D[b]
				}
			}
			return null
		}
		function aa(a) {
			for (var b = [], c = a.aoData.length, d = 0; d < c; d++) {
				b.push(a.aoData[d]._aData)
			}
			return b
		}
		function $(a) {
			for (var b = [], c = 0, d = a.aoData.length; c < d; c++) {
				a.aoData[c].nTr !== null && b.push(a.aoData[c].nTr)
			}
			return b
		}
		function Q(a, b) {
			var c = [],
			d,
			f,
			e,
			h,
			j;
			f = 0;
			var k = a.aoData.length;
			if (typeof b != "undefined") {
				f = b;
				k = b + 1
			}
			for (f = f; f < k; f++) {
				j = a.aoData[f];
				if (j.nTr !== null) {
					b = [];
					e = 0;
					for (h = j.nTr.childNodes.length; e < h; e++) {
						d = j.nTr.childNodes[e].nodeName.toLowerCase();
						if (d == "td" || d == "th") {
							b.push(j.nTr.childNodes[e])
						}
					}
					e = d = 0;
					for (h = a.aoColumns.length; e < h; e++) {
						if (a.aoColumns[e].bVisible) {
							c.push(b[e - d])
						} else {
							c.push(j._anHidden[e]);
							d++
						}
					}
				}
			}
			return c
		}
		function oa(a) {
			return a.replace(new RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^)", "g"), "\\$1")
		}
		function ra(a, b) {
			for (var c = -1,
			d = 0,
			f = a.length; d < f; d++) {
				if (a[d] == b) {
					c = d
				} else {
					a[d] > b && a[d]--
				}
			}
			c != -1 && a.splice(c, 1)
		}
		function Ba(a, b) {
			b = b.split(",");
			for (var c = [], d = 0, f = a.aoColumns.length; d < f; d++) {
				for (var e = 0; e < f; e++) {
					if (a.aoColumns[d].sName == b[e]) {
						c.push(e);
						break
					}
				}
			}
			return c
		}
		function ha(a) {
			for (var b = "",
			c = 0,
			d = a.aoColumns.length; c < d; c++) {
				b += a.aoColumns[c].sName + ","
			}
			if (b.length == d) {
				return ""
			}
			return b.slice(0, -1)
		}
		function J(a, b, c) {
			a = a.sTableId === "" ? "DataTables warning: " + c: "DataTables warning (table id = '" + a.sTableId + "'): " + c;
			if (b === 0) {
				if (o.sErrMode == "alert") {
					alert(a)
				} else {
					throw a
				}
			} else {
				typeof console != "undefined" && typeof console.log != "undefined" && console.log(a)
			}
		}
		function ia(a) {
			a.aoData.splice(0, a.aoData.length);
			a.aiDisplayMaster.splice(0, a.aiDisplayMaster.length);
			a.aiDisplay.splice(0, a.aiDisplay.length);
			E(a)
		}
		function sa(a) {
			if (! (!a.oFeatures.bStateSave || typeof a.bDestroying != "undefined")) {
				var b, c, d, f = "{";
				f += '"iCreate":' + (new Date).getTime() + ",";
				f += '"iStart":' + (a.oScroll.bInfinite ? 0 : a._iDisplayStart) + ",";
				f += '"iEnd":' + (a.oScroll.bInfinite ? a._iDisplayLength: a._iDisplayEnd) + ",";
				f += '"iLength":' + a._iDisplayLength + ",";
				f += '"sFilter":"' + encodeURIComponent(a.oPreviousSearch.sSearch) + '",';
				f += '"sFilterEsc":' + !a.oPreviousSearch.bRegex + ",";
				f += '"aaSorting":[ ';
				for (b = 0; b < a.aaSorting.length; b++) {
					f += "[" + a.aaSorting[b][0] + ',"' + a.aaSorting[b][1] + '"],'
				}
				f = f.substring(0, f.length - 1);
				f += "],";
				f += '"aaSearchCols":[ ';
				for (b = 0; b < a.aoPreSearchCols.length; b++) {
					f += '["' + encodeURIComponent(a.aoPreSearchCols[b].sSearch) + '",' + !a.aoPreSearchCols[b].bRegex + "],"
				}
				f = f.substring(0, f.length - 1);
				f += "],";
				f += '"abVisCols":[ ';
				for (b = 0; b < a.aoColumns.length; b++) {
					f += a.aoColumns[b].bVisible + ","
				}
				f = f.substring(0, f.length - 1);
				f += "]";
				b = 0;
				for (c = a.aoStateSave.length; b < c; b++) {
					d = a.aoStateSave[b].fn(a, f);
					if (d !== "") {
						f = d
					}
				}
				f += "}";
				Sa(a.sCookiePrefix + a.sInstance, f, a.iCookieDuration, a.sCookiePrefix, a.fnCookieCallback)
			}
		}
		function Ta(a, b) {
			if (a.oFeatures.bStateSave) {
				var c, d, f;
				d = ta(a.sCookiePrefix + a.sInstance);
				if (d !== null && d !== "") {
					try {
						c = typeof i.parseJSON == "function" ? i.parseJSON(d.replace(/'/g, '"')) : eval("(" + d + ")")
					} catch(e) {
						return
					}
					d = 0;
					for (f = a.aoStateLoad.length; d < f; d++) {
						if (!a.aoStateLoad[d].fn(a, c)) {
							return
						}
					}
					a.oLoadedState = i.extend(true, {},
					c);
					a._iDisplayStart = c.iStart;
					a.iInitDisplayStart = c.iStart;
					a._iDisplayEnd = c.iEnd;
					a._iDisplayLength = c.iLength;
					a.oPreviousSearch.sSearch = decodeURIComponent(c.sFilter);
					a.aaSorting = c.aaSorting.slice();
					a.saved_aaSorting = c.aaSorting.slice();
					if (typeof c.sFilterEsc != "undefined") {
						a.oPreviousSearch.bRegex = !c.sFilterEsc
					}
					if (typeof c.aaSearchCols != "undefined") {
						for (d = 0; d < c.aaSearchCols.length; d++) {
							a.aoPreSearchCols[d] = {
								sSearch: decodeURIComponent(c.aaSearchCols[d][0]),
								bRegex: !c.aaSearchCols[d][1]
							}
						}
					}
					if (typeof c.abVisCols != "undefined") {
						b.saved_aoColumns = [];
						for (d = 0; d < c.abVisCols.length; d++) {
							b.saved_aoColumns[d] = {};
							b.saved_aoColumns[d].bVisible = c.abVisCols[d]
						}
					}
				}
			}
		}
		function Sa(a, b, c, d, f) {
			var e = new Date;
			e.setTime(e.getTime() + c * 1000);
			c = wa.location.pathname.split("/");
			a = a + "_" + c.pop().replace(/[\/:]/g, "").toLowerCase();
			var h;
			if (f !== null) {
				h = typeof i.parseJSON == "function" ? i.parseJSON(b) : eval("(" + b + ")");
				b = f(a, h, e.toGMTString(), c.join("/") + "/")
			} else {
				b = a + "=" + encodeURIComponent(b) + "; expires=" + e.toGMTString() + "; path=" + c.join("/") + "/"
			}
			f = "";
			e = 9999999999999;
			if ((ta(a) !== null ? p.cookie.length: b.length + p.cookie.length) + 10 > 4096) {
				a = p.cookie.split(";");
				for (var j = 0,
				k = a.length; j < k; j++) {
					if (a[j].indexOf(d) != -1) {
						var m = a[j].split("=");
						try {
							h = eval("(" + decodeURIComponent(m[1]) + ")")
						} catch(t) {
							continue
						}
						if (typeof h.iCreate != "undefined" && h.iCreate < e) {
							f = m[0];
							e = h.iCreate
						}
					}
				}
				if (f !== "") {
					p.cookie = f + "=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=" + c.join("/") + "/"
				}
			}
			p.cookie = b
		}
		function ta(a) {
			var b = wa.location.pathname.split("/");
			a = a + "_" + b[b.length - 1].replace(/[\/:]/g, "").toLowerCase() + "=";
			b = p.cookie.split(";");
			for (var c = 0; c < b.length; c++) {
				for (var d = b[c]; d.charAt(0) == " ";) {
					d = d.substring(1, d.length)
				}
				if (d.indexOf(a) === 0) {
					return decodeURIComponent(d.substring(a.length, d.length))
				}
			}
			return null
		}
		function W(a, b) {
			b = b.getElementsByTagName("tr");
			var c, d, f, e, h, j, k, m, t = function(O, B, F) {
				for (; typeof O[B][F] != "undefined";) {
					F++
				}
				return F
			};
			a.splice(0, a.length);
			d = 0;
			for (j = b.length; d < j; d++) {
				a.push([])
			}
			d = 0;
			for (j = b.length; d < j; d++) {
				f = 0;
				for (k = b[d].childNodes.length; f < k; f++) {
					c = b[d].childNodes[f];
					if (c.nodeName.toUpperCase() == "TD" || c.nodeName.toUpperCase() == "TH") {
						var q = c.getAttribute("colspan") * 1,
						I = c.getAttribute("rowspan") * 1;
						q = !q || q === 0 || q === 1 ? 1 : q;
						I = !I || I === 0 || I === 1 ? 1 : I;
						m = t(a, d, 0);
						for (h = 0; h < q; h++) {
							for (e = 0; e < I; e++) {
								a[d + e][m + h] = {
									cell: c,
									unique: q == 1 ? true: false
								};
								a[d + e].nTr = b[d]
							}
						}
					}
				}
			}
		}
		function S(a, b, c) {
			var d = [];
			if (typeof c == "undefined") {
				c = a.aoHeader;
				if (typeof b != "undefined") {
					c = [];
					W(c, b)
				}
			}
			b = 0;
			for (var f = c.length; b < f; b++) {
				for (var e = 0,
				h = c[b].length; e < h; e++) {
					if (c[b][e].unique && (typeof d[e] == "undefined" || !a.bSortCellsTop)) {
						d[e] = c[b][e].cell
					}
				}
			}
			return d
		}
		function Ua() {
			var a = p.createElement("p"),
			b = a.style;
			b.width = "100%";
			b.height = "200px";
			var c = p.createElement("div");
			b = c.style;
			b.position = "absolute";
			b.top = "0px";
			b.left = "0px";
			b.visibility = "hidden";
			b.width = "200px";
			b.height = "150px";
			b.overflow = "hidden";
			c.appendChild(a);
			p.body.appendChild(c);
			b = a.offsetWidth;
			c.style.overflow = "scroll";
			a = a.offsetWidth;
			if (b == a) {
				a = c.clientWidth
			}
			p.body.removeChild(c);
			return b - a
		}
		function P(a, b, c) {
			for (var d = 0,
			f = b.length; d < f; d++) {
				for (var e = 0,
				h = b[d].childNodes.length; e < h; e++) {
					if (b[d].childNodes[e].nodeType == 1) {
						typeof c != "undefined" ? a(b[d].childNodes[e], c[d].childNodes[e]) : a(b[d].childNodes[e])
					}
				}
			}
		}
		function n(a, b, c, d) {
			if (typeof d == "undefined") {
				d = c
			}
			if (typeof b[c] != "undefined") {
				a[d] = b[c]
			}
		}
		function da(a, b, c) {
			for (var d = [], f = 0, e = a.aoColumns.length; f < e; f++) {
				d.push(H(a, b, f, c))
			}
			return d
		}
		function H(a, b, c, d) {
			var f = a.aoColumns[c];
			if ((c = f.fnGetData(a.aoData[b]._aData)) === undefined) {
				if (a.iDrawError != a.iDraw && f.sDefaultContent === null) {
					J(a, 0, "Requested unknown parameter '" + f.mDataProp + "' from the data source for row " + b);
					a.iDrawError = a.iDraw
				}
				return f.sDefaultContent
			}
			if (c === null && f.sDefaultContent !== null) {
				c = f.sDefaultContent
			}
			if (d == "display" && c === null) {
				return ""
			}
			return c
		}
		function N(a, b, c, d) {
			a.aoColumns[c].fnSetData(a.aoData[b]._aData, d)
		}
		function Z(a) {
			if (a === null) {
				return function() {
					return null
				}
			} else {
				if (typeof a == "function") {
					return function(c) {
						return a(c)
					}
				} else {
					if (typeof a == "string" && a.indexOf(".") != -1) {
						var b = a.split(".");
						return b.length == 2 ?
						function(c) {
							return c[b[0]][b[1]]
						}: b.length == 3 ?
						function(c) {
							return c[b[0]][b[1]][b[2]]
						}: function(c) {
							for (var d = 0,
							f = b.length; d < f; d++) {
								c = c[b[d]]
							}
							return c
						}
					} else {
						return function(c) {
							return c[a]
						}
					}
				}
			}
		}
		function ya(a) {
			if (a === null) {
				return function() {}
			} else {
				if (typeof a == "function") {
					return function(c, d) {
						return a(c, d)
					}
				} else {
					if (typeof a == "string" && a.indexOf(".") != -1) {
						var b = a.split(".");
						return b.length == 2 ?
						function(c, d) {
							c[b[0]][b[1]] = d
						}: b.length == 3 ?
						function(c, d) {
							c[b[0]][b[1]][b[2]] = d
						}: function(c, d) {
							for (var f = 0,
							e = b.length - 1; f < e; f++) {
								c = c[b[f]]
							}
							c[b[b.length - 1]] = d
						}
					} else {
						return function(c, d) {
							c[a] = d
						}
					}
				}
			}
		}
		this.oApi = {};
		this.fnDraw = function(a) {
			var b = A(this[o.iApiIndex]);
			if (typeof a != "undefined" && a === false) {
				E(b);
				C(b)
			} else {
				ba(b)
			}
		};
		this.fnFilter = function(a, b, c, d, f) {
			var e = A(this[o.iApiIndex]);
			if (e.oFeatures.bFilter) {
				if (typeof c == "undefined") {
					c = false
				}
				if (typeof d == "undefined") {
					d = true
				}
				if (typeof f == "undefined") {
					f = true
				}
				if (typeof b == "undefined" || b === null) {
					M(e, {
						sSearch: a,
						bRegex: c,
						bSmart: d
					},
					1);
					if (f && typeof e.aanFeatures.f != "undefined") {
						b = e.aanFeatures.f;
						c = 0;
						for (d = b.length; c < d; c++) {
							i("input", b[c]).val(a)
						}
					}
				} else {
					e.aoPreSearchCols[b].sSearch = a;
					e.aoPreSearchCols[b].bRegex = c;
					e.aoPreSearchCols[b].bSmart = d;
					M(e, e.oPreviousSearch, 1)
				}
			}
		};
		this.fnSettings = function() {
			return A(this[o.iApiIndex])
		};
		this.fnVersionCheck = o.fnVersionCheck;
		this.fnSort = function(a) {
			var b = A(this[o.iApiIndex]);
			b.aaSorting = a;
			R(b)
		};
		this.fnSortListener = function(a, b, c) {
			ga(A(this[o.iApiIndex]), a, b, c)
		};
		this.fnAddData = function(a, b) {
			if (a.length === 0) {
				return []
			}
			var c = [],
			d,
			f = A(this[o.iApiIndex]);
			if (typeof a[0] == "object") {
				for (var e = 0; e < a.length; e++) {
					d = v(f, a[e]);
					if (d == -1) {
						return c
					}
					c.push(d)
				}
			} else {
				d = v(f, a);
				if (d == -1) {
					return c
				}
				c.push(d)
			}
			f.aiDisplay = f.aiDisplayMaster.slice();
			if (typeof b == "undefined" || b) {
				ba(f)
			}
			return c
		};
		this.fnDeleteRow = function(a, b, c) {
			var d = A(this[o.iApiIndex]);
			a = typeof a == "object" ? U(d, a) : a;
			var f = d.aoData.splice(a, 1),
			e = i.inArray(a, d.aiDisplay);
			d.asDataSearch.splice(e, 1);
			ra(d.aiDisplayMaster, a);
			ra(d.aiDisplay, a);
			typeof b == "function" && b.call(this, d, f);
			if (d._iDisplayStart >= d.aiDisplay.length) {
				d._iDisplayStart -= d._iDisplayLength;
				if (d._iDisplayStart < 0) {
					d._iDisplayStart = 0
				}
			}
			if (typeof c == "undefined" || c) {
				E(d);
				C(d)
			}
			return f
		};
		this.fnClearTable = function(a) {
			var b = A(this[o.iApiIndex]);
			ia(b);
			if (typeof a == "undefined" || a) {
				C(b)
			}
		};
		this.fnOpen = function(a, b, c) {
			var d = A(this[o.iApiIndex]);
			this.fnClose(a);
			var f = p.createElement("tr"),
			e = p.createElement("td");
			f.appendChild(e);
			e.className = c;
			e.colSpan = X(d);
			if (typeof b.jquery != "undefined" || typeof b == "object") {
				e.appendChild(b)
			} else {
				e.innerHTML = b
			}
			b = i("tr", d.nTBody);
			i.inArray(a, b) != -1 && i(f).insertAfter(a);
			d.aoOpenRows.push({
				nTr: f,
				nParent: a
			});
			return f
		};
		this.fnClose = function(a) {
			for (var b = A(this[o.iApiIndex]), c = 0; c < b.aoOpenRows.length; c++) {
				if (b.aoOpenRows[c].nParent == a) { (a = b.aoOpenRows[c].nTr.parentNode) && a.removeChild(b.aoOpenRows[c].nTr);
					b.aoOpenRows.splice(c, 1);
					return 0
				}
			}
			return 1
		};
		this.fnGetData = function(a, b) {
			var c = A(this[o.iApiIndex]);
			if (typeof a != "undefined") {
				a = typeof a == "object" ? U(c, a) : a;
				if (typeof b != "undefined") {
					return H(c, a, b, "")
				}
				return typeof c.aoData[a] != "undefined" ? c.aoData[a]._aData: null
			}
			return aa(c)
		};
		this.fnGetNodes = function(a) {
			var b = A(this[o.iApiIndex]);
			if (typeof a != "undefined") {
				return typeof b.aoData[a] != "undefined" ? b.aoData[a].nTr: null
			}
			return $(b)
		};
		this.fnGetPosition = function(a) {
			var b = A(this[o.iApiIndex]),
			c = a.nodeName.toUpperCase();
			if (c == "TR") {
				return U(b, a)
			} else {
				if (c == "TD" || c == "TH") {
					c = U(b, a.parentNode);
					for (var d = Q(b, c), f = 0; f < b.aoColumns.length; f++) {
						if (d[f] == a) {
							return [c, pa(b, f), f]
						}
					}
				}
			}
			return null
		};
		this.fnUpdate = function(a, b, c, d, f) {
			var e = A(this[o.iApiIndex]);
			b = typeof b == "object" ? U(e, b) : b;
			if (i.isArray(a) && typeof a == "object") {
				e.aoData[b]._aData = a.slice();
				for (c = 0; c < e.aoColumns.length; c++) {
					this.fnUpdate(H(e, b, c), b, c, false, false)
				}
			} else {
				if (typeof a == "object") {
					e.aoData[b]._aData = i.extend(true, {},
					a);
					for (c = 0; c < e.aoColumns.length; c++) {
						this.fnUpdate(H(e, b, c), b, c, false, false)
					}
				} else {
					a = a;
					N(e, b, c, a);
					if (e.aoColumns[c].fnRender !== null) {
						a = e.aoColumns[c].fnRender({
							iDataRow: b,
							iDataColumn: c,
							aData: e.aoData[b]._aData,
							oSettings: e
						});
						e.aoColumns[c].bUseRendered && N(e, b, c, a)
					}
					if (e.aoData[b].nTr !== null) {
						Q(e, b)[c].innerHTML = a
					}
				}
			}
			c = i.inArray(b, e.aiDisplay);
			e.asDataSearch[c] = na(e, da(e, b, "filter"));
			if (typeof f == "undefined" || f) {
				ca(e)
			}
			if (typeof d == "undefined" || d) {
				ba(e)
			}
			return 0
		};
		this.fnSetColumnVis = function(a, b, c) {
			var d = A(this[o.iApiIndex]),
			f,
			e;
			e = d.aoColumns.length;
			var h, j;
			if (d.aoColumns[a].bVisible != b) {
				if (b) {
					for (f = j = 0; f < a; f++) {
						d.aoColumns[f].bVisible && j++
					}
					j = j >= X(d);
					if (!j) {
						for (f = a; f < e; f++) {
							if (d.aoColumns[f].bVisible) {
								h = f;
								break
							}
						}
					}
					f = 0;
					for (e = d.aoData.length; f < e; f++) {
						if (d.aoData[f].nTr !== null) {
							j ? d.aoData[f].nTr.appendChild(d.aoData[f]._anHidden[a]) : d.aoData[f].nTr.insertBefore(d.aoData[f]._anHidden[a], Q(d, f)[h])
						}
					}
				} else {
					f = 0;
					for (e = d.aoData.length; f < e; f++) {
						if (d.aoData[f].nTr !== null) {
							h = Q(d, f)[a];
							d.aoData[f]._anHidden[a] = h;
							h.parentNode.removeChild(h)
						}
					}
				}
				d.aoColumns[a].bVisible = b;
				L(d, d.aoHeader);
				d.nTFoot && L(d, d.aoFooter);
				f = 0;
				for (e = d.aoOpenRows.length; f < e; f++) {
					d.aoOpenRows[f].nTr.colSpan = X(d)
				}
				if (typeof c == "undefined" || c) {
					ca(d);
					C(d)
				}
				sa(d)
			}
		};
		this.fnPageChange = function(a, b) {
			var c = A(this[o.iApiIndex]);
			ja(c, a);
			E(c);
			if (typeof b == "undefined" || b) {
				C(c)
			}
		};
		this.fnDestroy = function() {
			var a = A(this[o.iApiIndex]),
			b = a.nTableWrapper.parentNode,
			c = a.nTBody,
			d,
			f;
			a.bDestroying = true;
			d = 0;
			for (f = a.aoColumns.length; d < f; d++) {
				a.aoColumns[d].bVisible === false && this.fnSetColumnVis(d, true)
			}
			i(a.nTableWrapper).find("*").andSelf().unbind(".DT");
			i("tbody>tr>td." + a.oClasses.sRowEmpty, a.nTable).parent().remove();
			if (a.nTable != a.nTHead.parentNode) {
				i(">thead", a.nTable).remove();
				a.nTable.appendChild(a.nTHead)
			}
			if (a.nTFoot && a.nTable != a.nTFoot.parentNode) {
				i(">tfoot", a.nTable).remove();
				a.nTable.appendChild(a.nTFoot)
			}
			a.nTable.parentNode.removeChild(a.nTable);
			i(a.nTableWrapper).remove();
			a.aaSorting = [];
			a.aaSortingFixed = [];
			T(a);
			i($(a)).removeClass(a.asStripClasses.join(" "));
			if (a.bJUI) {
				i("th", a.nTHead).removeClass([o.oStdClasses.sSortable, o.oJUIClasses.sSortableAsc, o.oJUIClasses.sSortableDesc, o.oJUIClasses.sSortableNone].join(" "));
				i("th span." + o.oJUIClasses.sSortIcon, a.nTHead).remove();
				i("th", a.nTHead).each(function() {
					var e = i("div." + o.oJUIClasses.sSortJUIWrapper, this),
					h = e.contents();
					i(this).append(h);
					e.remove()
				})
			} else {
				i("th", a.nTHead).removeClass([o.oStdClasses.sSortable, o.oStdClasses.sSortableAsc, o.oStdClasses.sSortableDesc, o.oStdClasses.sSortableNone].join(" "))
			}
			a.nTableReinsertBefore ? b.insertBefore(a.nTable, a.nTableReinsertBefore) : b.appendChild(a.nTable);
			d = 0;
			for (f = a.aoData.length; d < f; d++) {
				a.aoData[d].nTr !== null && c.appendChild(a.aoData[d].nTr)
			}
			if (a.oFeatures.bAutoWidth === true) {
				a.nTable.style.width = u(a.sDestroyWidth)
			}
			i(">tr:even", c).addClass(a.asDestoryStrips[0]);
			i(">tr:odd", c).addClass(a.asDestoryStrips[1]);
			d = 0;
			for (f = D.length; d < f; d++) {
				D[d] == a && D.splice(d, 1)
			}
			a = null
		};
		this.fnAdjustColumnSizing = function(a) {
			var b = A(this[o.iApiIndex]);
			ca(b);
			if (typeof a == "undefined" || a) {
				this.fnDraw(false)
			} else {
				if (b.oScroll.sX !== "" || b.oScroll.sY !== "") {
					this.oApi._fnScrollDraw(b)
				}
			}
		};
		for (var ua in o.oApi) {
			if (ua) {
				this[ua] = r(ua)
			}
		}
		this.oApi._fnExternApiFunc = r;
		this.oApi._fnInitalise = s;
		this.oApi._fnInitComplete = w;
		this.oApi._fnLanguageProcess = y;
		this.oApi._fnAddColumn = G;
		this.oApi._fnColumnOptions = x;
		this.oApi._fnAddData = v;
		this.oApi._fnCreateTr = z;
		this.oApi._fnGatherData = Y;
		this.oApi._fnBuildHead = V;
		this.oApi._fnDrawHead = L;
		this.oApi._fnDraw = C;
		this.oApi._fnReDraw = ba;
		this.oApi._fnAjaxUpdate = za;
		this.oApi._fnAjaxUpdateDraw = Aa;
		this.oApi._fnAddOptionsHtml = xa;
		this.oApi._fnFeatureHtmlTable = Fa;
		this.oApi._fnScrollDraw = Ia;
		this.oApi._fnAjustColumnSizing = ca;
		this.oApi._fnFeatureHtmlFilter = Da;
		this.oApi._fnFilterComplete = M;
		this.oApi._fnFilterCustom = Ma;
		this.oApi._fnFilterColumn = La;
		this.oApi._fnFilter = Ka;
		this.oApi._fnBuildSearchArray = ka;
		this.oApi._fnBuildSearchRow = na;
		this.oApi._fnFilterCreateSearch = la;
		this.oApi._fnDataToSearch = ma;
		this.oApi._fnSort = R;
		this.oApi._fnSortAttachListener = ga;
		this.oApi._fnSortingClasses = T;
		this.oApi._fnFeatureHtmlPaginate = Ha;
		this.oApi._fnPageChange = ja;
		this.oApi._fnFeatureHtmlInfo = Ga;
		this.oApi._fnUpdateInfo = Na;
		this.oApi._fnFeatureHtmlLength = Ca;
		this.oApi._fnFeatureHtmlProcessing = Ea;
		this.oApi._fnProcessingDisplay = K;
		this.oApi._fnVisibleToColumnIndex = Ja;
		this.oApi._fnColumnIndexToVisible = pa;
		this.oApi._fnNodeToDataIndex = U;
		this.oApi._fnVisbleColumns = X;
		this.oApi._fnCalculateEnd = E;
		this.oApi._fnConvertToWidth = Oa;
		this.oApi._fnCalculateColumnWidths = ea;
		this.oApi._fnScrollingWidthAdjust = Qa;
		this.oApi._fnGetWidestNode = Pa;
		this.oApi._fnGetMaxLenString = Ra;
		this.oApi._fnStringToCss = u;
		this.oApi._fnArrayCmp = Va;
		this.oApi._fnDetectType = fa;
		this.oApi._fnSettingsFromNode = A;
		this.oApi._fnGetDataMaster = aa;
		this.oApi._fnGetTrNodes = $;
		this.oApi._fnGetTdNodes = Q;
		this.oApi._fnEscapeRegex = oa;
		this.oApi._fnDeleteIndex = ra;
		this.oApi._fnReOrderIndex = Ba;
		this.oApi._fnColumnOrdering = ha;
		this.oApi._fnLog = J;
		this.oApi._fnClearTable = ia;
		this.oApi._fnSaveState = sa;
		this.oApi._fnLoadState = Ta;
		this.oApi._fnCreateCookie = Sa;
		this.oApi._fnReadCookie = ta;
		this.oApi._fnDetectHeader = W;
		this.oApi._fnGetUniqueThs = S;
		this.oApi._fnScrollBarWidth = Ua;
		this.oApi._fnApplyToChildren = P;
		this.oApi._fnMap = n;
		this.oApi._fnGetRowData = da;
		this.oApi._fnGetCellData = H;
		this.oApi._fnSetCellData = N;
		this.oApi._fnGetObjectDataFn = Z;
		this.oApi._fnSetObjectDataFn = ya;
		var va = this;
		return this.each(function() {
			var a = 0,
			b, c, d, f;
			a = 0;
			for (b = D.length; a < b; a++) {
				if (D[a].nTable == this) {
					if (typeof g == "undefined" || typeof g.bRetrieve != "undefined" && g.bRetrieve === true) {
						return D[a].oInstance
					} else {
						if (typeof g.bDestroy != "undefined" && g.bDestroy === true) {
							D[a].oInstance.fnDestroy();
							break
						} else {
							J(D[a], 0, "Cannot reinitialise DataTable.\n\nTo retrieve the DataTables object for this table, please pass either no arguments to the dataTable() function, or set bRetrieve to true. Alternatively, to destory the old table and create a new one, set bDestroy to true (note that a lot of changes to the configuration can be made through the API which is usually much faster).");
							return
						}
					}
				}
				if (D[a].sTableId !== "" && D[a].sTableId == this.getAttribute("id")) {
					D.splice(a, 1);
					break
				}
			}
			var e = new l;
			D.push(e);
			var h = false,
			j = false;
			a = this.getAttribute("id");
			if (a !== null) {
				e.sTableId = a;
				e.sInstance = a
			} else {
				e.sInstance = o._oExternConfig.iNextUnique++
			}
			if (this.nodeName.toLowerCase() != "table") {
				J(e, 0, "Attempted to initialise DataTables on a node which is not a table: " + this.nodeName)
			} else {
				e.nTable = this;
				e.oInstance = va.length == 1 ? va: i(this).dataTable();
				e.oApi = va.oApi;
				e.sDestroyWidth = i(this).width();
				if (typeof g != "undefined" && g !== null) {
					e.oInit = g;
					n(e.oFeatures, g, "bPaginate");
					n(e.oFeatures, g, "bLengthChange");
					n(e.oFeatures, g, "bFilter");
					n(e.oFeatures, g, "bSort");
					n(e.oFeatures, g, "bInfo");
					n(e.oFeatures, g, "bProcessing");
					n(e.oFeatures, g, "bAutoWidth");
					n(e.oFeatures, g, "bSortClasses");
					n(e.oFeatures, g, "bServerSide");
					n(e.oFeatures, g, "bDeferRender");
					n(e.oScroll, g, "sScrollX", "sX");
					n(e.oScroll, g, "sScrollXInner", "sXInner");
					n(e.oScroll, g, "sScrollY", "sY");
					n(e.oScroll, g, "bScrollCollapse", "bCollapse");
					n(e.oScroll, g, "bScrollInfinite", "bInfinite");
					n(e.oScroll, g, "iScrollLoadGap", "iLoadGap");
					n(e.oScroll, g, "bScrollAutoCss", "bAutoCss");
					n(e, g, "asStripClasses");
					n(e, g, "fnPreDrawCallback");
					n(e, g, "fnRowCallback");
					n(e, g, "fnHeaderCallback");
					n(e, g, "fnFooterCallback");
					n(e, g, "fnCookieCallback");
					n(e, g, "fnInitComplete");
					n(e, g, "fnServerData");
					n(e, g, "fnFormatNumber");
					n(e, g, "aaSorting");
					n(e, g, "aaSortingFixed");
					n(e, g, "aLengthMenu");
					n(e, g, "sPaginationType");
					n(e, g, "sAjaxSource");
					n(e, g, "sAjaxDataProp");
					n(e, g, "iCookieDuration");
					n(e, g, "sCookiePrefix");
					n(e, g, "sDom");
					n(e, g, "bSortCellsTop");
					n(e, g, "oSearch", "oPreviousSearch");
					n(e, g, "aoSearchCols", "aoPreSearchCols");
					n(e, g, "iDisplayLength", "_iDisplayLength");
					n(e, g, "bJQueryUI", "bJUI");
					n(e.oLanguage, g, "fnInfoCallback");
					typeof g.fnDrawCallback == "function" && e.aoDrawCallback.push({
						fn: g.fnDrawCallback,
						sName: "user"
					});
					typeof g.fnStateSaveCallback == "function" && e.aoStateSave.push({
						fn: g.fnStateSaveCallback,
						sName: "user"
					});
					typeof g.fnStateLoadCallback == "function" && e.aoStateLoad.push({
						fn: g.fnStateLoadCallback,
						sName: "user"
					});
					if (e.oFeatures.bServerSide && e.oFeatures.bSort && e.oFeatures.bSortClasses) {
						e.aoDrawCallback.push({
							fn: T,
							sName: "server_side_sort_classes"
						})
					} else {
						e.oFeatures.bDeferRender && e.aoDrawCallback.push({
							fn: T,
							sName: "defer_sort_classes"
						})
					}
					if (typeof g.bJQueryUI != "undefined" && g.bJQueryUI) {
						e.oClasses = o.oJUIClasses;
						if (typeof g.sDom == "undefined") {
							e.sDom = '<"H"lfr>t<"F"ip>'
						}
					}
					if (e.oScroll.sX !== "" || e.oScroll.sY !== "") {
						e.oScroll.iBarWidth = Ua()
					}
					if (typeof g.iDisplayStart != "undefined" && typeof e.iInitDisplayStart == "undefined") {
						e.iInitDisplayStart = g.iDisplayStart;
						e._iDisplayStart = g.iDisplayStart
					}
					if (typeof g.bStateSave != "undefined") {
						e.oFeatures.bStateSave = g.bStateSave;
						Ta(e, g);
						e.aoDrawCallback.push({
							fn: sa,
							sName: "state_save"
						})
					}
					if (typeof g.iDeferLoading != "undefined") {
						e.bDeferLoading = true;
						e._iRecordsTotal = g.iDeferLoading;
						e._iRecordsDisplay = g.iDeferLoading
					}
					if (typeof g.aaData != "undefined") {
						j = true
					}
					if (typeof g != "undefined" && typeof g.aoData != "undefined") {
						g.aoColumns = g.aoData
					}
					if (typeof g.oLanguage != "undefined") {
						if (typeof g.oLanguage.sUrl != "undefined" && g.oLanguage.sUrl !== "") {
							e.oLanguage.sUrl = g.oLanguage.sUrl;
							i.getJSON(e.oLanguage.sUrl, null,
							function(t) {
								y(e, t, true)
							});
							h = true
						} else {
							y(e, g.oLanguage, false)
						}
					}
				} else {
					g = {}
				}
				if (typeof g.asStripClasses == "undefined") {
					e.asStripClasses.push(e.oClasses.sStripOdd);
					e.asStripClasses.push(e.oClasses.sStripEven)
				}
				c = false;
				d = i(">tbody>tr", this);
				a = 0;
				for (b = e.asStripClasses.length; a < b; a++) {
					if (d.filter(":lt(2)").hasClass(e.asStripClasses[a])) {
						c = true;
						break
					}
				}
				if (c) {
					e.asDestoryStrips = ["", ""];
					if (i(d[0]).hasClass(e.oClasses.sStripOdd)) {
						e.asDestoryStrips[0] += e.oClasses.sStripOdd + " "
					}
					if (i(d[0]).hasClass(e.oClasses.sStripEven)) {
						e.asDestoryStrips[0] += e.oClasses.sStripEven
					}
					if (i(d[1]).hasClass(e.oClasses.sStripOdd)) {
						e.asDestoryStrips[1] += e.oClasses.sStripOdd + " "
					}
					if (i(d[1]).hasClass(e.oClasses.sStripEven)) {
						e.asDestoryStrips[1] += e.oClasses.sStripEven
					}
					d.removeClass(e.asStripClasses.join(" "))
				}
				c = [];
				var k;
				a = this.getElementsByTagName("thead");
				if (a.length !== 0) {
					W(e.aoHeader, a[0]);
					c = S(e)
				}
				if (typeof g.aoColumns == "undefined") {
					k = [];
					a = 0;
					for (b = c.length; a < b; a++) {
						k.push(null)
					}
				} else {
					k = g.aoColumns
				}
				a = 0;
				for (b = k.length; a < b; a++) {
					if (typeof g.saved_aoColumns != "undefined" && g.saved_aoColumns.length == b) {
						if (k[a] === null) {
							k[a] = {}
						}
						k[a].bVisible = g.saved_aoColumns[a].bVisible
					}
					G(e, c ? c[a] : null)
				}
				if (typeof g.aoColumnDefs != "undefined") {
					for (a = g.aoColumnDefs.length - 1; a >= 0; a--) {
						var m = g.aoColumnDefs[a].aTargets;
						i.isArray(m) || J(e, 1, "aTargets must be an array of targets, not a " + typeof m);
						c = 0;
						for (d = m.length; c < d; c++) {
							if (typeof m[c] == "number" && m[c] >= 0) {
								for (; e.aoColumns.length <= m[c];) {
									G(e)
								}
								x(e, m[c], g.aoColumnDefs[a])
							} else {
								if (typeof m[c] == "number" && m[c] < 0) {
									x(e, e.aoColumns.length + m[c], g.aoColumnDefs[a])
								} else {
									if (typeof m[c] == "string") {
										b = 0;
										for (f = e.aoColumns.length; b < f; b++) {
											if (m[c] == "_all" || i(e.aoColumns[b].nTh).hasClass(m[c])) {
												x(e, b, g.aoColumnDefs[a])
											}
										}
									}
								}
							}
						}
					}
				}
				if (typeof k != "undefined") {
					a = 0;
					for (b = k.length; a < b; a++) {
						x(e, a, k[a])
					}
				}
				a = 0;
				for (b = e.aaSorting.length; a < b; a++) {
					if (e.aaSorting[a][0] >= e.aoColumns.length) {
						e.aaSorting[a][0] = 0
					}
					k = e.aoColumns[e.aaSorting[a][0]];
					if (typeof e.aaSorting[a][2] == "undefined") {
						e.aaSorting[a][2] = 0
					}
					if (typeof g.aaSorting == "undefined" && typeof e.saved_aaSorting == "undefined") {
						e.aaSorting[a][1] = k.asSorting[0]
					}
					c = 0;
					for (d = k.asSorting.length; c < d; c++) {
						if (e.aaSorting[a][1] == k.asSorting[c]) {
							e.aaSorting[a][2] = c;
							break
						}
					}
				}
				T(e);
				a = i(">thead", this);
				if (a.length === 0) {
					a = [p.createElement("thead")];
					this.appendChild(a[0])
				}
				e.nTHead = a[0];
				a = i(">tbody", this);
				if (a.length === 0) {
					a = [p.createElement("tbody")];
					this.appendChild(a[0])
				}
				e.nTBody = a[0];
				a = i(">tfoot", this);
				if (a.length > 0) {
					e.nTFoot = a[0];
					W(e.aoFooter, e.nTFoot)
				}
				if (j) {
					for (a = 0; a < g.aaData.length; a++) {
						v(e, g.aaData[a])
					}
				} else {
					Y(e)
				}
				e.aiDisplay = e.aiDisplayMaster.slice();
				e.bInitialised = true;
				h === false && s(e)
			}
		})
	}
})(jQuery, window, document); (function(g) {
	var f = location.href.replace(/#.*/, "");
	var h = g.localScroll = function(a) {
		g("body").localScroll(a)
	};
	h.defaults = {
		duration: 1000,
		axis: "y",
		event: "click",
		stop: true,
		target: window,
		reset: true
	};
	h.hash = function(b) {
		if (location.hash) {
			b = g.extend({},
			h.defaults, b);
			b.hash = false;
			if (b.reset) {
				var a = b.duration;
				delete b.duration;
				g(b.target).scrollTo(0, b);
				b.duration = a
			}
			e(0, location, b)
		}
	};
	g.fn.localScroll = function(b) {
		b = g.extend({},
		h.defaults, b);
		return b.lazy ? this.bind(b.event,
		function(d) {
			var c = g([d.target, d.target.parentNode]).filter(a)[0];
			if (c) {
				e(d, c, b)
			}
		}) : this.find("a,area").filter(a).bind(b.event,
		function(c) {
			e(c, this, b)
		}).end().end();
		function a() {
			return !! this.href && !!this.hash && this.href.replace(this.hash, "") == f && (!b.filter || g(this).is(b.filter))
		}
	};
	function e(c, k, d) {
		var j = k.hash.slice(1),
		r = document.getElementById(j) || document.getElementsByName(j)[0];
		if (!r) {
			return
		}
		if (c) {
			c.preventDefault()
		}
		var s = g(d.target);
		if (d.lock && s.is(":animated") || d.onBefore && d.onBefore.call(d, c, r, s) === false) {
			return
		}
		if (d.stop) {
			s.stop(true)
		}
		if (d.hash) {
			var a = r.id == j ? "id": "name",
			b = g("<a> </a>").attr(a, j).css({
				position: "absolute",
				top: g(window).scrollTop(),
				left: g(window).scrollLeft()
			});
			r[a] = "";
			g("body").prepend(b);
			location = k.hash;
			b.remove();
			r[a] = j
		}
		s.scrollTo(r, d).trigger("notify.serialScroll", [r])
	}
})(jQuery); (function(b) {
	b.jGrowl = function(a, d) {
		if (b("#jGrowl").size() == 0) {
			b('<div id="jGrowl"></div>').addClass((d && d.position) ? d.position: b.jGrowl.defaults.position).appendTo("body")
		}
		b("#jGrowl").jGrowl(a, d)
	};
	b.fn.jGrowl = function(a, e) {
		if (b.isFunction(this.each)) {
			var f = arguments;
			return this.each(function() {
				var c = this;
				if (b(this).data("jGrowl.instance") == undefined) {
					b(this).data("jGrowl.instance", b.extend(new b.fn.jGrowl(), {
						notifications: [],
						element: null,
						interval: null
					}));
					b(this).data("jGrowl.instance").startup(this)
				}
				if (b.isFunction(b(this).data("jGrowl.instance")[a])) {
					b(this).data("jGrowl.instance")[a].apply(b(this).data("jGrowl.instance"), b.makeArray(f).slice(1))
				} else {
					b(this).data("jGrowl.instance").create(a, e)
				}
			})
		}
	};
	b.extend(b.fn.jGrowl.prototype, {
		defaults: {
			pool: 5,
			header: "",
			group: "",
			sticky: false,
			position: "top-right",
			glue: "after",
			theme: "default",
			themeState: "highlight",
			corners: "10px",
			check: 250,
			life: 3000,
			closeDuration: "normal",
			openDuration: "normal",
			easing: "swing",
			closer: true,
			closeTemplate: "&times;",
			closerTemplate: "<div>[ close all ]</div>",
			log: function(f, a, e) {},
			beforeOpen: function(f, a, e) {},
			afterOpen: function(f, a, e) {},
			open: function(f, a, e) {},
			beforeClose: function(f, a, e) {},
			close: function(f, a, e) {},
			animateOpen: {
				opacity: "show"
			},
			animateClose: {
				opacity: "hide"
			}
		},
		notifications: [],
		element: null,
		interval: null,
		create: function(a, d) {
			var d = b.extend({},
			this.defaults, d);
			if (typeof d.speed !== "undefined") {
				d.openDuration = d.speed;
				d.closeDuration = d.speed
			}
			this.notifications.push({
				message: a,
				options: d
			});
			d.log.apply(this.element, [this.element, a, d])
		},
		render: function(g) {
			var a = this;
			var h = g.message;
			var f = g.options;
			var g = b('<div class="jGrowl-notification ' + f.themeState + " ui-corner-all" + ((f.group != undefined && f.group != "") ? " " + f.group: "") + '"><div class="jGrowl-close">' + f.closeTemplate + '</div><div class="jGrowl-header">' + f.header + '</div><div class="jGrowl-message">' + h + "</div></div>").data("jGrowl", f).addClass(f.theme).children("div.jGrowl-close").bind("click.jGrowl",
			function() {
				b(this).parent().trigger("jGrowl.close")
			}).parent();
			b(g).bind("mouseover.jGrowl",
			function() {
				b("div.jGrowl-notification", a.element).data("jGrowl.pause", true)
			}).bind("mouseout.jGrowl",
			function() {
				b("div.jGrowl-notification", a.element).data("jGrowl.pause", false)
			}).bind("jGrowl.beforeOpen",
			function() {
				if (f.beforeOpen.apply(g, [g, h, f, a.element]) != false) {
					b(this).trigger("jGrowl.open")
				}
			}).bind("jGrowl.open",
			function() {
				if (f.open.apply(g, [g, h, f, a.element]) != false) {
					if (f.glue == "after") {
						b("div.jGrowl-notification:last", a.element).after(g)
					} else {
						b("div.jGrowl-notification:first", a.element).before(g)
					}
					b(this).animate(f.animateOpen, f.openDuration, f.easing,
					function() {
						if (b.browser.msie && (parseInt(b(this).css("opacity"), 10) === 1 || parseInt(b(this).css("opacity"), 10) === 0)) {
							this.style.removeAttribute("filter")
						}
						b(this).data("jGrowl").created = new Date();
						b(this).trigger("jGrowl.afterOpen")
					})
				}
			}).bind("jGrowl.afterOpen",
			function() {
				f.afterOpen.apply(g, [g, h, f, a.element])
			}).bind("jGrowl.beforeClose",
			function() {
				if (f.beforeClose.apply(g, [g, h, f, a.element]) != false) {
					b(this).trigger("jGrowl.close")
				}
			}).bind("jGrowl.close",
			function() {
				b(this).data("jGrowl.pause", true);
				b(this).animate(f.animateClose, f.closeDuration, f.easing,
				function() {
					b(this).remove();
					var c = f.close.apply(g, [g, h, f, a.element]);
					if (b.isFunction(c)) {
						c.apply(g, [g, h, f, a.element])
					}
				})
			}).trigger("jGrowl.beforeOpen");
			if (f.corners != "" && b.fn.corner != undefined) {
				b(g).corner(f.corners)
			}
			if (b("div.jGrowl-notification:parent", a.element).size() > 1 && b("div.jGrowl-closer", a.element).size() == 0 && this.defaults.closer != false) {
				b(this.defaults.closerTemplate).addClass("jGrowl-closer ui-state-highlight ui-corner-all").addClass(this.defaults.theme).appendTo(a.element).animate(this.defaults.animateOpen, this.defaults.speed, this.defaults.easing).bind("click.jGrowl",
				function() {
					b(this).siblings().trigger("jGrowl.beforeClose");
					if (b.isFunction(a.defaults.closer)) {
						a.defaults.closer.apply(b(this).parent()[0], [b(this).parent()[0]])
					}
				})
			}
		},
		update: function() {
			b(this.element).find("div.jGrowl-notification:parent").each(function() {
				if (b(this).data("jGrowl") != undefined && b(this).data("jGrowl").created != undefined && (b(this).data("jGrowl").created.getTime() + parseInt(b(this).data("jGrowl").life)) < (new Date()).getTime() && b(this).data("jGrowl").sticky != true && (b(this).data("jGrowl.pause") == undefined || b(this).data("jGrowl.pause") != true)) {
					b(this).trigger("jGrowl.beforeClose")
				}
			});
			if (this.notifications.length > 0 && (this.defaults.pool == 0 || b(this.element).find("div.jGrowl-notification:parent").size() < this.defaults.pool)) {
				this.render(this.notifications.shift())
			}
			if (b(this.element).find("div.jGrowl-notification:parent").size() < 2) {
				b(this.element).find("div.jGrowl-closer").animate(this.defaults.animateClose, this.defaults.speed, this.defaults.easing,
				function() {
					b(this).remove()
				})
			}
		},
		startup: function(a) {
			this.element = b(a).addClass("jGrowl").append('<div class="jGrowl-notification"></div>');
			this.interval = setInterval(function() {
				b(a).data("jGrowl.instance").update()
			},
			parseInt(this.defaults.check));
			if (b.browser.msie && parseInt(b.browser.version) < 7 && !window.XMLHttpRequest) {
				b(this.element).addClass("ie6")
			}
		},
		shutdown: function() {
			b(this.element).removeClass("jGrowl").find("div.jGrowl-notification").remove();
			clearInterval(this.interval)
		},
		close: function() {
			b(this.element).find("div.jGrowl-notification").each(function() {
				b(this).trigger("jGrowl.beforeClose")
			})
		}
	});
	b.jGrowl.defaults = b.fn.jGrowl.prototype.defaults
})(jQuery); (function(f) {
	var e = f.scrollTo = function(c, b, a) {
		f(window).scrollTo(c, b, a)
	};
	e.defaults = {
		axis: "xy",
		duration: parseFloat(f.fn.jquery) >= 1.3 ? 0 : 1
	};
	e.window = function(a) {
		return f(window)._scrollable()
	};
	f.fn._scrollable = function() {
		return this.map(function() {
			var c = this,
			b = !c.nodeName || f.inArray(c.nodeName.toLowerCase(), ["iframe", "#document", "html", "body"]) != -1;
			if (!b) {
				return c
			}
			var a = (c.contentWindow || c).document || c.ownerDocument || c;
			return f.browser.safari || a.compatMode == "BackCompat" ? a.body: a.documentElement
		})
	};
	f.fn.scrollTo = function(a, b, c) {
		if (typeof b == "object") {
			c = b;
			b = 0
		}
		if (typeof c == "function") {
			c = {
				onAfter: c
			}
		}
		if (a == "max") {
			a = 9000000000
		}
		c = f.extend({},
		e.defaults, c);
		b = b || c.speed || c.duration;
		c.queue = c.queue && c.axis.length > 1;
		if (c.queue) {
			b /= 2
		}
		c.offset = d(c.offset);
		c.over = d(c.over);
		return this._scrollable().each(function() {
			var u = this,
			o = f(u),
			g = a,
			q,
			p = {},
			s = o.is("html,body");
			switch (typeof g) {
			case "number":
			case "string":
				if (/^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(g)) {
					g = d(g);
					break
				}
				g = f(g, this);
			case "object":
				if (g.is || g.style) {
					q = (g = f(g)).offset()
				}
			}
			f.each(c.axis.split(""),
			function(n, m) {
				var j = m == "x" ? "Left": "Top",
				k = j.toLowerCase(),
				h = "scroll" + j,
				w = u[h],
				l = e.max(u, m);
				if (q) {
					p[h] = q[k] + (s ? 0 : w - o.offset()[k]);
					if (c.margin) {
						p[h] -= parseInt(g.css("margin" + j)) || 0;
						p[h] -= parseInt(g.css("border" + j + "Width")) || 0
					}
					p[h] += c.offset[k] || 0;
					if (c.over[k]) {
						p[h] += g[m == "x" ? "width": "height"]() * c.over[k]
					}
				} else {
					var i = g[k];
					p[h] = i.slice && i.slice( - 1) == "%" ? parseFloat(i) / 100 * l: i
				}
				if (/^\d+$/.test(p[h])) {
					p[h] = p[h] <= 0 ? 0 : Math.min(p[h], l)
				}
				if (!n && c.queue) {
					if (w != p[h]) {
						r(c.onAfterFirst)
					}
					delete p[h]
				}
			});
			r(c.onAfter);
			function r(h) {
				o.animate(p, b, c.easing, h &&
				function() {
					h.call(this, a, c)
				})
			}
		}).end()
	};
	e.max = function(c, b) {
		var m = b == "x" ? "Width": "Height",
		a = "scroll" + m;
		if (!f(c).is("html,body")) {
			return c[a] - f(c)[m.toLowerCase()]()
		}
		var l = "client" + m,
		h = c.ownerDocument.documentElement,
		i = c.ownerDocument.body;
		return Math.max(h[a], i[a]) - Math.min(h[l], i[l])
	};
	function d(a) {
		return typeof a == "object" ? a: {
			top: a,
			left: a
		}
	}
})(jQuery);
$.fn.sliderNav = function(h) {
	var k = {
		items: ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"],
		debug: false,
		height: null,
		arrows: true
	};
	var l = $.extend(k, h);
	var j = $.meta ? $.extend({},
	l, $$.data()) : l;
	var m = $(this);
	$(m).addClass("slider");
	$(".slider-content li:first", m).addClass("selected");
	$(m).append('<div class="slider-nav"><ul></ul></div>');
	for (var n in j.items) {
		$(".slider-nav ul", m).append("<li><a alt='#" + j.items[n] + "'>" + j.items[n] + "</a></li>")
	}
	var i = $(".slider-nav", m).height();
	if (j.height) {
		i = j.height
	}
	$(".slider-content, .slider-nav", m).css("height", i);
	if (j.debug) {
		$(m).append('<div id="debug">Scroll Offset: <span>0</span></div>')
	}
	$(".slider-nav a", m).mouseover(function(c) {
		var a = $(this).attr("alt");
		var e = $(".slider-content", m).offset().top;
		var d = $(".slider-content " + a, m).offset().top;
		var f = $(".slider-nav", m).height();
		if (j.height) {
			f = j.height
		}
		var b = (d - e) - f / 8;
		$(".slider-content li", m).removeClass("selected");
		$(a).addClass("selected");
		$(".slider-content", m).stop().animate({
			scrollTop: "+=" + b + "px"
		});
		if (j.debug) {
			$("#debug span", m).html(d)
		}
	});
	if (j.arrows) {
		$(".slider-nav", m).css("top", "20px");
		$(m).prepend('<div class="slide-up end"><span class="arrow up"></span></div>');
		$(m).append('<div class="slide-down"><span class="arrow down"></span></div>');
		$(".slide-down", m).click(function() {
			$(".slider-content", m).animate({
				scrollTop: "+=" + i + "px"
			},
			500)
		});
		$(".slide-up", m).click(function() {
			$(".slider-content", m).animate({
				scrollTop: "-=" + i + "px"
			},
			500)
		})
	}
};
$.fn.sliderNav = function(b) {
	var f = {
		items: ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"],
		debug: false,
		height: null,
		arrows: true
	};
	var e = $.extend(f, b);
	var g = $.meta ? $.extend({},
	e, $$.data()) : e;
	var d = $(this);
	$(d).addClass("slider");
	$(".slider-content li:first", d).addClass("selected");
	$(d).append('<div class="slider-nav"><ul></ul></div>');
	for (var c in g.items) {
		$(".slider-nav ul", d).append("<li><a alt='#" + g.items[c] + "'>" + g.items[c] + "</a></li>")
	}
	var a = $(".slider-nav", d).height();
	if (g.height) {
		a = g.height
	}
	$(".slider-content, .slider-nav", d).css("height", a);
	if (g.debug) {
		$(d).append('<div id="debug">Scroll Offset: <span>0</span></div>')
	}
	$(".slider-nav a", d).mouseover(function(k) {
		var m = $(this).attr("alt");
		var i = $(".slider-content", d).offset().top;
		var j = $(".slider-content " + m, d).offset().top;
		var h = $(".slider-nav", d).height();
		if (g.height) {
			h = g.height
		}
		var l = (j - i) - h / 8;
		$(".slider-content li", d).removeClass("selected");
		$(m).addClass("selected");
		$(".slider-content", d).stop().animate({
			scrollTop: "+=" + l + "px"
		});
		if (g.debug) {
			$("#debug span", d).html(j)
		}
	});
	if (g.arrows) {
		$(".slider-nav", d).css("top", "20px");
		$(d).prepend('<div class="slide-up end"><span class="arrow up"></span></div>');
		$(d).append('<div class="slide-down"><span class="arrow down"></span></div>');
		$(".slide-down", d).click(function() {
			$(".slider-content", d).animate({
				scrollTop: "+=" + a + "px"
			},
			500)
		});
		$(".slide-up", d).click(function() {
			$(".slider-content", d).animate({
				scrollTop: "-=" + a + "px"
			},
			500)
		})
	}
}; (function(f) {
	function e(a) {
		if (a.attr("title") || typeof(a.attr("original-title")) != "string") {
			a.attr("original-title", a.attr("title") || "").removeAttr("title")
		}
	}
	function d(a, b) {
		this.$element = f(a);
		this.options = b;
		this.enabled = true;
		e(this.$element)
	}
	d.prototype = {
		show: function() {
			var k = this.getTitle();
			if (k && this.enabled) {
				var l = this.tip();
				l.find(".tipsy-inner")[this.options.html ? "html": "text"](k);
				l[0].className = "tipsy";
				l.remove().css({
					top: 0,
					left: 0,
					visibility: "hidden",
					display: "block"
				}).appendTo(document.body);
				var a = f.extend({},
				this.$element.offset(), {
					width: this.$element[0].offsetWidth,
					height: this.$element[0].offsetHeight
				});
				var n = l[0].offsetWidth,
				b = l[0].offsetHeight;
				var c = (typeof this.options.gravity == "function") ? this.options.gravity.call(this.$element[0]) : this.options.gravity;
				var m;
				switch (c.charAt(0)) {
				case "n":
					m = {
						top: a.top + a.height + this.options.offset,
						left: a.left + a.width / 2 - n / 2
					};
					break;
				case "s":
					m = {
						top: a.top - b - this.options.offset,
						left: a.left + a.width / 2 - n / 2
					};
					break;
				case "e":
					m = {
						top: a.top + a.height / 2 - b / 2,
						left: a.left - n - this.options.offset
					};
					break;
				case "w":
					m = {
						top: a.top + a.height / 2 - b / 2,
						left: a.left + a.width + this.options.offset
					};
					break
				}
				if (c.length == 2) {
					if (c.charAt(1) == "w") {
						m.left = a.left + a.width / 2 - 15
					} else {
						m.left = a.left + a.width / 2 - n + 15
					}
				}
				l.css(m).addClass("tipsy-" + c);
				if (this.options.fade) {
					l.stop().css({
						opacity: 0,
						display: "block",
						visibility: "visible"
					}).animate({
						opacity: this.options.opacity
					})
				} else {
					l.css({
						visibility: "visible",
						opacity: this.options.opacity
					})
				}
			}
		},
		hide: function() {
			if (this.options.fade) {
				this.tip().stop().fadeOut(function() {
					f(this).remove()
				})
			} else {
				this.tip().remove()
			}
		},
		getTitle: function() {
			var a, c = this.$element,
			b = this.options;
			e(c);
			var a, b = this.options;
			if (typeof b.title == "string") {
				a = c.attr(b.title == "title" ? "original-title": b.title)
			} else {
				if (typeof b.title == "function") {
					a = b.title.call(c[0])
				}
			}
			a = ("" + a).replace(/(^\s*|\s*$)/, "");
			return a || b.fallback
		},
		tip: function() {
			if (!this.$tip) {
				this.$tip = f('<div class="tipsy"></div>').html('<div class="tipsy-arrow"></div><div class="tipsy-inner"/></div>')
			}
			return this.$tip
		},
		validate: function() {
			if (!this.$element[0].parentNode) {
				this.hide()
			}
		},
		enable: function() {
			this.enabled = true
		},
		disable: function() {
			this.enabled = false
		},
		toggleEnabled: function() {
			this.enabled = !this.enabled
		}
	};
	f.fn.tipsy = function(c) {
		if (c === true) {
			return this.data("tipsy")
		} else {
			if (typeof c == "string") {
				return this.data("tipsy")[c]()
			}
		}
		c = f.extend({},
		f.fn.tipsy.defaults, c);
		function k(h) {
			var g = f.data(h, "tipsy");
			if (!g) {
				g = new d(h, f.fn.tipsy.elementOptions(h, c));
				f.data(h, "tipsy", g)
			}
			return g
		}
		function a() {
			var g = k(this);
			g.hoverState = "in";
			if (c.delayIn == 0) {
				g.show()
			} else {
				setTimeout(function() {
					if (g.hoverState == "in") {
						g.show()
					}
				},
				c.delayIn)
			}
		}
		function l() {
			var g = k(this);
			g.hoverState = "out";
			if (c.delayOut == 0) {
				g.hide()
			} else {
				setTimeout(function() {
					if (g.hoverState == "out") {
						g.hide()
					}
				},
				c.delayOut)
			}
		}
		if (!c.live) {
			this.each(function() {
				k(this)
			})
		}
		if (c.trigger != "manual") {
			var n = c.live ? "live": "bind",
			b = c.trigger == "hover" ? "mouseenter": "focus",
			m = c.trigger == "hover" ? "mouseleave": "blur";
			this[n](b, a)[n](m, l)
		}
		return this
	};
	f.fn.tipsy.defaults = {
		delayIn: 0,
		delayOut: 0,
		fade: false,
		fallback: "",
		gravity: "n",
		html: false,
		live: false,
		offset: 0,
		opacity: 0.8,
		title: "title",
		trigger: "hover"
	};
	f.fn.tipsy.elementOptions = function(a, b) {
		return f.metadata ? f.extend({},
		b, f(a).metadata()) : b
	};
	f.fn.tipsy.autoNS = function() {
		return f(this).offset().top > (f(document).scrollTop() + f(window).height() / 2) ? "s": "n"
	};
	f.fn.tipsy.autoWE = function() {
		return f(this).offset().left > (f(document).scrollLeft() + f(window).width() / 2) ? "e": "w"
	}
})(jQuery); (function(b) {
	b.uniform = {
		options: {
			selectClass: "selector",
			radioClass: "radio",
			checkboxClass: "checker",
			fileClass: "uploader",
			filenameClass: "filename",
			fileBtnClass: "action",
			fileDefaultText: "No file selected",
			fileBtnText: "Choose File",
			checkedClass: "checked",
			focusClass: "focus",
			disabledClass: "disabled",
			buttonClass: "uniform-button",
			activeClass: "active",
			hoverClass: "hover",
			useID: true,
			idPrefix: "uniform",
			resetSelector: false,
			autoHide: true
		},
		elements: []
	};
	if (b.browser.msie && b.browser.version < 7) {
		b.support.selectOpacity = false
	} else {
		b.support.selectOpacity = true
	}
	b.fn.uniform = function(a) {
		a = b.extend(b.uniform.options, a);
		var r = this;
		if (a.resetSelector != false) {
			b(a.resetSelector).mouseup(function() {
				function c() {
					b.uniform.update(r)
				}
				setTimeout(c, 10)
			})
		}
		function l(c) {
			$el = b(c);
			$el.addClass($el.attr("type"));
			u(c)
		}
		function o(c) {
			b(c).addClass("uniform");
			u(c)
		}
		function m(f) {
			var c = b(f);
			var e = b("<div>"),
			d = b("<span>");
			e.addClass(a.buttonClass);
			if (a.useID && c.attr("id") != "") {
				e.attr("id", a.idPrefix + "-" + c.attr("id"))
			}
			var g;
			if (c.is("a") || c.is("button")) {
				g = c.text()
			} else {
				if (c.is(":submit") || c.is(":reset") || c.is("input[type=button]")) {
					g = c.attr("value")
				}
			}
			g = g == "" ? c.is(":reset") ? "Reset": "Submit": g;
			d.html(g);
			c.css("opacity", 0);
			c.wrap(e);
			c.wrap(d);
			e = c.closest("div");
			d = c.closest("span");
			if (c.is(":disabled")) {
				e.addClass(a.disabledClass)
			}
			e.bind({
				"mouseenter.uniform": function() {
					e.addClass(a.hoverClass)
				},
				"mouseleave.uniform": function() {
					e.removeClass(a.hoverClass);
					e.removeClass(a.activeClass)
				},
				"mousedown.uniform touchbegin.uniform": function() {
					e.addClass(a.activeClass)
				},
				"mouseup.uniform touchend.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"click.uniform touchend.uniform": function(h) {
					if (b(h.target).is("span") || b(h.target).is("div")) {
						if (f[0].dispatchEvent) {
							var i = document.createEvent("MouseEvents");
							i.initEvent("click", true, true);
							f[0].dispatchEvent(i)
						} else {
							f[0].click()
						}
					}
				}
			});
			f.bind({
				"focus.uniform": function() {
					e.addClass(a.focusClass)
				},
				"blur.uniform": function() {
					e.removeClass(a.focusClass)
				}
			});
			b.uniform.noSelect(e);
			u(f)
		}
		function q(f) {
			var c = b(f);
			var e = b("<div />"),
			d = b("<span />");
			if (!c.css("display") == "none" && a.autoHide) {
				e.hide()
			}
			e.addClass(a.selectClass);
			if (a.useID && f.attr("id") != "") {
				e.attr("id", a.idPrefix + "-" + f.attr("id"))
			}
			var g = f.find(":selected:first");
			if (g.length == 0) {
				g = f.find("option:first")
			}
			d.html(g.html());
			f.css("opacity", 0);
			f.wrap(e);
			f.before(d);
			e = f.parent("div");
			d = f.siblings("span");
			f.bind({
				"change.uniform": function() {
					d.text(f.find(":selected").html());
					e.removeClass(a.activeClass)
				},
				"focus.uniform": function() {
					e.addClass(a.focusClass)
				},
				"blur.uniform": function() {
					e.removeClass(a.focusClass);
					e.removeClass(a.activeClass)
				},
				"mousedown.uniform touchbegin.uniform": function() {
					e.addClass(a.activeClass)
				},
				"mouseup.uniform touchend.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"click.uniform touchend.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"mouseenter.uniform": function() {
					e.addClass(a.hoverClass)
				},
				"mouseleave.uniform": function() {
					e.removeClass(a.hoverClass);
					e.removeClass(a.activeClass)
				},
				"keyup.uniform": function() {
					d.text(f.find(":selected").html())
				}
			});
			if (b(f).attr("disabled")) {
				e.addClass(a.disabledClass)
			}
			b.uniform.noSelect(d);
			u(f)
		}
		function p(f) {
			var c = b(f);
			var e = b("<div />"),
			d = b("<span />");
			if (!c.css("display") == "none" && a.autoHide) {
				e.hide()
			}
			e.addClass(a.checkboxClass);
			if (a.useID && f.attr("id") != "") {
				e.attr("id", a.idPrefix + "-" + f.attr("id"))
			}
			b(f).wrap(e);
			b(f).wrap(d);
			d = f.parent();
			e = d.parent();
			b(f).css("opacity", 0).bind({
				"focus.uniform": function() {
					e.addClass(a.focusClass)
				},
				"blur.uniform": function() {
					e.removeClass(a.focusClass)
				},
				"click.uniform touchend.uniform": function() {
					if (!b(f).attr("checked")) {
						d.removeClass(a.checkedClass)
					} else {
						d.addClass(a.checkedClass)
					}
				},
				"mousedown.uniform touchbegin.uniform": function() {
					e.addClass(a.activeClass)
				},
				"mouseup.uniform touchend.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"mouseenter.uniform": function() {
					e.addClass(a.hoverClass)
				},
				"mouseleave.uniform": function() {
					e.removeClass(a.hoverClass);
					e.removeClass(a.activeClass)
				}
			});
			if (b(f).attr("checked")) {
				d.addClass(a.checkedClass)
			}
			if (b(f).attr("disabled")) {
				e.addClass(a.disabledClass)
			}
			u(f)
		}
		function s(f) {
			var c = b(f);
			var e = b("<div />"),
			d = b("<span />");
			if (!c.css("display") == "none" && a.autoHide) {
				e.hide()
			}
			e.addClass(a.radioClass);
			if (a.useID && f.attr("id") != "") {
				e.attr("id", a.idPrefix + "-" + f.attr("id"))
			}
			b(f).wrap(e);
			b(f).wrap(d);
			d = f.parent();
			e = d.parent();
			b(f).css("opacity", 0).bind({
				"focus.uniform": function() {
					e.addClass(a.focusClass)
				},
				"blur.uniform": function() {
					e.removeClass(a.focusClass)
				},
				"click.uniform touchend.uniform": function() {
					if (!b(f).attr("checked")) {
						d.removeClass(a.checkedClass)
					} else {
						var g = a.radioClass.split(" ")[0];
						b("." + g + " span." + a.checkedClass + ":has([name='" + b(f).attr("name") + "'])").removeClass(a.checkedClass);
						d.addClass(a.checkedClass)
					}
				},
				"mousedown.uniform touchend.uniform": function() {
					if (!b(f).is(":disabled")) {
						e.addClass(a.activeClass)
					}
				},
				"mouseup.uniform touchbegin.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"mouseenter.uniform touchend.uniform": function() {
					e.addClass(a.hoverClass)
				},
				"mouseleave.uniform": function() {
					e.removeClass(a.hoverClass);
					e.removeClass(a.activeClass)
				}
			});
			if (b(f).attr("checked")) {
				d.addClass(a.checkedClass)
			}
			if (b(f).attr("disabled")) {
				e.addClass(a.disabledClass)
			}
			u(f)
		}
		function n(f) {
			var h = b(f);
			var e = b("<div />"),
			g = b("<span>" + a.fileDefaultText + "</span>"),
			c = b("<span>" + a.fileBtnText + "</span>");
			if (!h.css("display") == "none" && a.autoHide) {
				e.hide()
			}
			e.addClass(a.fileClass);
			g.addClass(a.filenameClass);
			c.addClass(a.fileBtnClass);
			if (a.useID && h.attr("id") != "") {
				e.attr("id", a.idPrefix + "-" + h.attr("id"))
			}
			h.wrap(e);
			h.after(c);
			h.after(g);
			e = h.closest("div");
			g = h.siblings("." + a.filenameClass);
			c = h.siblings("." + a.fileBtnClass);
			if (!h.attr("size")) {
				var d = e.width();
				h.attr("size", d / 10)
			}
			var i = function() {
				var j = h.val();
				if (j === "") {
					j = a.fileDefaultText
				} else {
					j = j.split(/[\/\\]+/);
					j = j[(j.length - 1)]
				}
				g.text(j)
			};
			i();
			h.css("opacity", 0).bind({
				"focus.uniform": function() {
					e.addClass(a.focusClass)
				},
				"blur.uniform": function() {
					e.removeClass(a.focusClass)
				},
				"mousedown.uniform": function() {
					if (!b(f).is(":disabled")) {
						e.addClass(a.activeClass)
					}
				},
				"mouseup.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"mouseenter.uniform": function() {
					e.addClass(a.hoverClass)
				},
				"mouseleave.uniform": function() {
					e.removeClass(a.hoverClass);
					e.removeClass(a.activeClass)
				}
			});
			if (b.browser.msie) {
				h.bind("click.uniform.ie7",
				function() {
					setTimeout(i, 0)
				})
			} else {
				h.bind("change.uniform", i)
			}
			if (h.attr("disabled")) {
				e.addClass(a.disabledClass)
			}
			b.uniform.noSelect(g);
			b.uniform.noSelect(c);
			u(f)
		}
		b.uniform.restore = function(c) {
			if (c == undefined) {
				c = b(b.uniform.elements)
			}
			b(c).each(function() {
				if (b(this).is(":checkbox")) {
					b(this).unwrap().unwrap()
				} else {
					if (b(this).is("select")) {} else {
						if (b(this).is(":radio")) {
							b(this).unwrap().unwrap()
						} else {
							if (b(this).is(":file")) {
								b(this).siblings("span").remove();
								b(this).unwrap()
							} else {
								if (b(this).is("button, :submit, :reset, a, input[type='button']")) {
									b(this).unwrap().unwrap()
								}
							}
						}
					}
				}
				b(this).unbind(".uniform");
				b(this).css("opacity", "1");
				var d = b.inArray(b(c), b.uniform.elements);
				b.uniform.elements.splice(d, 1)
			})
		};
		function u(c) {
			c = b(c).get();
			if (c.length > 1) {
				b.each(c,
				function(d, e) {
					b.uniform.elements.push(e)
				})
			} else {
				b.uniform.elements.push(c)
			}
		}
		b.uniform.noSelect = function(d) {
			function c() {
				return false
			}
			b(d).each(function() {
				this.onselectstart = this.ondragstart = c;
				b(this).mousedown(c).css({
					MozUserSelect: "none"
				})
			})
		};
		b.uniform.update = function(c) {
			if (c == undefined) {
				c = b(b.uniform.elements)
			}
			c = b(c);
			c.each(function() {
				var g = b(this);
				if (g.is("select")) {} else {
					if (g.is(":checkbox")) {
						var d = g.closest("span");
						var e = g.closest("div");
						e.removeClass(a.hoverClass + " " + a.focusClass + " " + a.activeClass);
						d.removeClass(a.checkedClass);
						if (g.is(":checked")) {
							d.addClass(a.checkedClass)
						}
						if (g.is(":disabled")) {
							e.addClass(a.disabledClass)
						} else {
							e.removeClass(a.disabledClass)
						}
					} else {
						if (g.is(":radio")) {
							var d = g.closest("span");
							var e = g.closest("div");
							e.removeClass(a.hoverClass + " " + a.focusClass + " " + a.activeClass);
							d.removeClass(a.checkedClass);
							if (g.is(":checked")) {
								d.addClass(a.checkedClass)
							}
							if (g.is(":disabled")) {
								e.addClass(a.disabledClass)
							} else {
								e.removeClass(a.disabledClass)
							}
						} else {
							if (g.is(":file")) {
								var e = g.parent("div");
								var f = g.siblings(a.filenameClass);
								btnTag = g.siblings(a.fileBtnClass);
								e.removeClass(a.hoverClass + " " + a.focusClass + " " + a.activeClass);
								f.text(g.val());
								if (g.is(":disabled")) {
									e.addClass(a.disabledClass)
								} else {
									e.removeClass(a.disabledClass)
								}
							} else {
								if (g.is(":submit") || g.is(":reset") || g.is("button") || g.is("a") || c.is("input[type=button]")) {
									var e = g.closest("div");
									e.removeClass(a.hoverClass + " " + a.focusClass + " " + a.activeClass);
									if (g.is(":disabled")) {
										e.addClass(a.disabledClass)
									} else {
										e.removeClass(a.disabledClass)
									}
								}
							}
						}
					}
				}
			})
		};
		return this.each(function() {
			if (b.support.selectOpacity) {
				var c = b(this);
				if (c.is("select")) {} else {
					if (c.is(":checkbox")) {
						p(c)
					} else {
						if (c.is(":radio")) {
							s(c)
						} else {
							if (c.is(":file")) {
								n(c)
							} else {
								if (c.is(":text, :password, input[type='email']")) {
									l(c)
								} else {
									if (c.is("textarea")) {
										o(c)
									} else {
										if (c.is("a") || c.is(":submit") || c.is(":reset") || c.is("button") || c.is("input[type=button]")) {
											m(c)
										}
									}
								}
							}
						}
					}
				}
			}
		})
	}
})(jQuery); (function(b) {
	b.uniform = {
		options: {
			selectClass: "selector",
			radioClass: "radio",
			checkboxClass: "checker",
			fileClass: "uploader",
			filenameClass: "filename",
			fileBtnClass: "action",
			fileDefaultText: "No file selected",
			fileBtnText: "选择文件",
			checkedClass: "checked",
			focusClass: "focus",
			disabledClass: "disabled",
			buttonClass: "uniform-button",
			activeClass: "active",
			hoverClass: "hover",
			useID: true,
			idPrefix: "uniform",
			resetSelector: false,
			autoHide: true
		},
		elements: []
	};
	if (b.browser.msie && b.browser.version < 7) {
		b.support.selectOpacity = false
	} else {
		b.support.selectOpacity = true
	}
	b.fn.uniform = function(a) {
		a = b.extend(b.uniform.options, a);
		var r = this;
		if (a.resetSelector != false) {
			b(a.resetSelector).mouseup(function() {
				function c() {
					b.uniform.update(r)
				}
				setTimeout(c, 10)
			})
		}
		function l(c) {
			$el = b(c);
			$el.addClass($el.attr("type"));
			u(c)
		}
		function o(c) {
			b(c).addClass("uniform");
			u(c)
		}
		function m(f) {
			var c = b(f);
			var e = b("<div>"),
			d = b("<span>");
			e.addClass(a.buttonClass);
			if (a.useID && c.attr("id") != "") {
				e.attr("id", a.idPrefix + "-" + c.attr("id"))
			}
			var g;
			if (c.is("a") || c.is("button")) {
				g = c.text()
			} else {
				if (c.is(":submit") || c.is(":reset") || c.is("input[type=button]")) {
					g = c.attr("value")
				}
			}
			g = g == "" ? c.is(":reset") ? "Reset": "Submit": g;
			d.html(g);
			c.css("opacity", 0);
			c.wrap(e);
			c.wrap(d);
			e = c.closest("div");
			d = c.closest("span");
			if (c.is(":disabled")) {
				e.addClass(a.disabledClass)
			}
			e.bind({
				"mouseenter.uniform": function() {
					e.addClass(a.hoverClass)
				},
				"mouseleave.uniform": function() {
					e.removeClass(a.hoverClass);
					e.removeClass(a.activeClass)
				},
				"mousedown.uniform touchbegin.uniform": function() {
					e.addClass(a.activeClass)
				},
				"mouseup.uniform touchend.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"click.uniform touchend.uniform": function(h) {
					if (b(h.target).is("span") || b(h.target).is("div")) {
						if (f[0].dispatchEvent) {
							var i = document.createEvent("MouseEvents");
							i.initEvent("click", true, true);
							f[0].dispatchEvent(i)
						} else {
							f[0].click()
						}
					}
				}
			});
			f.bind({
				"focus.uniform": function() {
					e.addClass(a.focusClass)
				},
				"blur.uniform": function() {
					e.removeClass(a.focusClass)
				}
			});
			b.uniform.noSelect(e);
			u(f)
		}
		function q(f) {
			var c = b(f);
			var e = b("<div />"),
			d = b("<span />");
			if (!c.css("display") == "none" && a.autoHide) {
				e.hide()
			}
			e.addClass(a.selectClass);
			if (a.useID && f.attr("id") != "") {
				e.attr("id", a.idPrefix + "-" + f.attr("id"))
			}
			var g = f.find(":selected:first");
			if (g.length == 0) {
				g = f.find("option:first")
			}
			d.html(g.html());
			f.css("opacity", 0);
			f.wrap(e);
			f.before(d);
			e = f.parent("div");
			d = f.siblings("span");
			f.bind({
				"change.uniform": function() {
					d.text(f.find(":selected").html());
					e.removeClass(a.activeClass)
				},
				"focus.uniform": function() {
					e.addClass(a.focusClass)
				},
				"blur.uniform": function() {
					e.removeClass(a.focusClass);
					e.removeClass(a.activeClass)
				},
				"mousedown.uniform touchbegin.uniform": function() {
					e.addClass(a.activeClass)
				},
				"mouseup.uniform touchend.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"click.uniform touchend.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"mouseenter.uniform": function() {
					e.addClass(a.hoverClass)
				},
				"mouseleave.uniform": function() {
					e.removeClass(a.hoverClass);
					e.removeClass(a.activeClass)
				},
				"keyup.uniform": function() {
					d.text(f.find(":selected").html())
				}
			});
			if (b(f).attr("disabled")) {
				e.addClass(a.disabledClass)
			}
			b.uniform.noSelect(d);
			u(f)
		}
		function p(f) {
			var c = b(f);
			var e = b("<div />"),
			d = b("<span />");
			if (!c.css("display") == "none" && a.autoHide) {
				e.hide()
			}
			e.addClass(a.checkboxClass);
			if (a.useID && f.attr("id") != "") {
				e.attr("id", a.idPrefix + "-" + f.attr("id"))
			}
			b(f).wrap(e);
			b(f).wrap(d);
			d = f.parent();
			e = d.parent();
			b(f).css("opacity", 0).bind({
				"focus.uniform": function() {
					e.addClass(a.focusClass)
				},
				"blur.uniform": function() {
					e.removeClass(a.focusClass)
				},
				"click.uniform touchend.uniform": function() {
					if (!b(f).attr("checked")) {
						d.removeClass(a.checkedClass)
					} else {
						d.addClass(a.checkedClass)
					}
				},
				"mousedown.uniform touchbegin.uniform": function() {
					e.addClass(a.activeClass)
				},
				"mouseup.uniform touchend.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"mouseenter.uniform": function() {
					e.addClass(a.hoverClass)
				},
				"mouseleave.uniform": function() {
					e.removeClass(a.hoverClass);
					e.removeClass(a.activeClass)
				}
			});
			if (b(f).attr("checked")) {
				d.addClass(a.checkedClass)
			}
			if (b(f).attr("disabled")) {
				e.addClass(a.disabledClass)
			}
			u(f)
		}
		function s(f) {
			var c = b(f);
			var e = b("<div />"),
			d = b("<span />");
			if (!c.css("display") == "none" && a.autoHide) {
				e.hide()
			}
			e.addClass(a.radioClass);
			if (a.useID && f.attr("id") != "") {
				e.attr("id", a.idPrefix + "-" + f.attr("id"))
			}
			b(f).wrap(e);
			b(f).wrap(d);
			d = f.parent();
			e = d.parent();
			b(f).css("opacity", 0).bind({
				"focus.uniform": function() {
					e.addClass(a.focusClass)
				},
				"blur.uniform": function() {
					e.removeClass(a.focusClass)
				},
				"click.uniform touchend.uniform": function() {
					if (!b(f).attr("checked")) {
						d.removeClass(a.checkedClass)
					} else {
						var g = a.radioClass.split(" ")[0];
						b("." + g + " span." + a.checkedClass + ":has([name='" + b(f).attr("name") + "'])").removeClass(a.checkedClass);
						d.addClass(a.checkedClass)
					}
				},
				"mousedown.uniform touchend.uniform": function() {
					if (!b(f).is(":disabled")) {
						e.addClass(a.activeClass)
					}
				},
				"mouseup.uniform touchbegin.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"mouseenter.uniform touchend.uniform": function() {
					e.addClass(a.hoverClass)
				},
				"mouseleave.uniform": function() {
					e.removeClass(a.hoverClass);
					e.removeClass(a.activeClass)
				}
			});
			if (b(f).attr("checked")) {
				d.addClass(a.checkedClass)
			}
			if (b(f).attr("disabled")) {
				e.addClass(a.disabledClass)
			}
			u(f)
		}
		function n(f) {
			var h = b(f);
			var e = b("<div />"),
			g = b("<span>" + a.fileDefaultText + "</span>"),
			c = b("<span>" + a.fileBtnText + "</span>");
			if (!h.css("display") == "none" && a.autoHide) {
				e.hide()
			}
			e.addClass(a.fileClass);
			g.addClass(a.filenameClass);
			c.addClass(a.fileBtnClass);
			if (a.useID && h.attr("id") != "") {
				e.attr("id", a.idPrefix + "-" + h.attr("id"))
			}
			h.wrap(e);
			h.after(c);
			h.after(g);
			e = h.closest("div");
			g = h.siblings("." + a.filenameClass);
			c = h.siblings("." + a.fileBtnClass);
			if (!h.attr("size")) {
				var d = e.width();
				h.attr("size", d / 10)
			}
			var i = function() {
				var j = h.val();
				if (j === "") {
					j = a.fileDefaultText
				} else {
					j = j.split(/[\/\\]+/);
					j = j[(j.length - 1)]
				}
				g.text(j)
			};
			i();
			h.css("opacity", 0).bind({
				"focus.uniform": function() {
					e.addClass(a.focusClass)
				},
				"blur.uniform": function() {
					e.removeClass(a.focusClass)
				},
				"mousedown.uniform": function() {
					if (!b(f).is(":disabled")) {
						e.addClass(a.activeClass)
					}
				},
				"mouseup.uniform": function() {
					e.removeClass(a.activeClass)
				},
				"mouseenter.uniform": function() {
					e.addClass(a.hoverClass)
				},
				"mouseleave.uniform": function() {
					e.removeClass(a.hoverClass);
					e.removeClass(a.activeClass)
				}
			});
			if (b.browser.msie) {
				h.bind("click.uniform.ie7",
				function() {
					setTimeout(i, 0)
				})
			} else {
				h.bind("change.uniform", i)
			}
			if (h.attr("disabled")) {
				e.addClass(a.disabledClass)
			}
			b.uniform.noSelect(g);
			b.uniform.noSelect(c);
			u(f)
		}
		b.uniform.restore = function(c) {
			if (c == undefined) {
				c = b(b.uniform.elements)
			}
			b(c).each(function() {
				if (b(this).is(":checkbox")) {
					b(this).unwrap().unwrap()
				} else {
					if (b(this).is("select")) {} else {
						if (b(this).is(":radio")) {
							b(this).unwrap().unwrap()
						} else {
							if (b(this).is(":file")) {
								b(this).siblings("span").remove();
								b(this).unwrap()
							} else {
								if (b(this).is("button, :submit, :reset, a, input[type='button']")) {
									b(this).unwrap().unwrap()
								}
							}
						}
					}
				}
				b(this).unbind(".uniform");
				b(this).css("opacity", "1");
				var d = b.inArray(b(c), b.uniform.elements);
				b.uniform.elements.splice(d, 1)
			})
		};
		function u(c) {
			c = b(c).get();
			if (c.length > 1) {
				b.each(c,
				function(d, e) {
					b.uniform.elements.push(e)
				})
			} else {
				b.uniform.elements.push(c)
			}
		}
		b.uniform.noSelect = function(d) {
			function c() {
				return false
			}
			b(d).each(function() {
				this.onselectstart = this.ondragstart = c;
				b(this).mousedown(c).css({
					MozUserSelect: "none"
				})
			})
		};
		b.uniform.update = function(c) {
			if (c == undefined) {
				c = b(b.uniform.elements)
			}
			c = b(c);
			c.each(function() {
				var g = b(this);
				if (g.is("select")) {} else {
					if (g.is(":checkbox")) {
						var d = g.closest("span");
						var e = g.closest("div");
						e.removeClass(a.hoverClass + " " + a.focusClass + " " + a.activeClass);
						d.removeClass(a.checkedClass);
						if (g.is(":checked")) {
							d.addClass(a.checkedClass)
						}
						if (g.is(":disabled")) {
							e.addClass(a.disabledClass)
						} else {
							e.removeClass(a.disabledClass)
						}
					} else {
						if (g.is(":radio")) {
							var d = g.closest("span");
							var e = g.closest("div");
							e.removeClass(a.hoverClass + " " + a.focusClass + " " + a.activeClass);
							d.removeClass(a.checkedClass);
							if (g.is(":checked")) {
								d.addClass(a.checkedClass)
							}
							if (g.is(":disabled")) {
								e.addClass(a.disabledClass)
							} else {
								e.removeClass(a.disabledClass)
							}
						} else {
							if (g.is(":file")) {
								var e = g.parent("div");
								var f = g.siblings(a.filenameClass);
								btnTag = g.siblings(a.fileBtnClass);
								e.removeClass(a.hoverClass + " " + a.focusClass + " " + a.activeClass);
								f.text(g.val());
								if (g.is(":disabled")) {
									e.addClass(a.disabledClass)
								} else {
									e.removeClass(a.disabledClass)
								}
							} else {
								if (g.is(":submit") || g.is(":reset") || g.is("button") || g.is("a") || c.is("input[type=button]")) {
									var e = g.closest("div");
									e.removeClass(a.hoverClass + " " + a.focusClass + " " + a.activeClass);
									if (g.is(":disabled")) {
										e.addClass(a.disabledClass)
									} else {
										e.removeClass(a.disabledClass)
									}
								}
							}
						}
					}
				}
			})
		};
		return this.each(function() {
			if (b.support.selectOpacity) {
				var c = b(this);
				if (c.is("select")) {} else {
					if (c.is(":checkbox")) {
						p(c)
					} else {
						if (c.is(":radio")) {
							s(c)
						} else {
							if (c.is(":file")) {
								n(c)
							} else {
								if (c.is(":text, :password, input[type='email']")) {
									l(c)
								} else {
									if (c.is("textarea")) {
										o(c)
									} else {
										if (c.is("a") || c.is(":submit") || c.is(":reset") || c.is("button") || c.is("input[type=button]")) {
											m(c)
										}
									}
								}
							}
						}
					}
				}
			}
		})
	}
})(jQuery); (function(b) {
	b.extend(b.fn, {
		validate: function(a) {
			if (!this.length) {
				a && a.debug && window.console && console.warn("nothing selected, can't validate, returning nothing");
				return
			}
			var d = b.data(this[0], "validator");
			if (d) {
				return d
			}
			d = new b.validator(a, this[0]);
			b.data(this[0], "validator", d);
			if (d.settings.onsubmit) {
				this.find("input, button").filter(".cancel").click(function() {
					d.cancelSubmit = true
				});
				if (d.settings.submitHandler) {
					this.find("input, button").filter(":submit").click(function() {
						d.submitButton = this
					})
				}
				this.submit(function(f) {
					if (d.settings.debug) {
						f.preventDefault()
					}
					function c() {
						if (d.settings.submitHandler) {
							if (d.submitButton) {
								var e = b("<input type='hidden'/>").attr("name", d.submitButton.name).val(d.submitButton.value).appendTo(d.currentForm)
							}
							d.settings.submitHandler.call(d, d.currentForm);
							if (d.submitButton) {
								e.remove()
							}
							return false
						}
						return true
					}
					if (d.cancelSubmit) {
						d.cancelSubmit = false;
						return c()
					}
					if (d.form()) {
						if (d.pendingRequest) {
							d.formSubmitted = true;
							return false
						}
						return c()
					} else {
						d.focusInvalid();
						return false
					}
				})
			}
			return d
		},
		valid: function() {
			if (b(this[0]).is("form")) {
				return this.validate().form()
			} else {
				var d = true;
				var a = b(this[0].form).validate();
				this.each(function() {
					d &= a.element(this)
				});
				return d
			}
		},
		removeAttrs: function(e) {
			var a = {},
			f = this;
			b.each(e.split(/\s/),
			function(d, c) {
				a[c] = f.attr(c);
				f.removeAttr(c)
			});
			return a
		},
		rules: function(o, r) {
			var m = this[0];
			if (o) {
				var p = b.data(m.form, "validator").settings;
				var k = p.rules;
				var a = b.validator.staticRules(m);
				switch (o) {
				case "add":
					b.extend(a, b.validator.normalizeRule(r));
					k[m.name] = a;
					if (r.messages) {
						p.messages[m.name] = b.extend(p.messages[m.name], r.messages)
					}
					break;
				case "remove":
					if (!r) {
						delete k[m.name];
						return a
					}
					var l = {};
					b.each(r.split(/\s/),
					function(d, c) {
						l[c] = a[c];
						delete a[c]
					});
					return l
				}
			}
			var n = b.validator.normalizeRules(b.extend({},
			b.validator.metadataRules(m), b.validator.classRules(m), b.validator.attributeRules(m), b.validator.staticRules(m)), m);
			if (n.required) {
				var q = n.required;
				delete n.required;
				n = b.extend({
					required: q
				},
				n)
			}
			return n
		}
	});
	b.extend(b.expr[":"], {
		blank: function(a) {
			return ! b.trim("" + a.value)
		},
		filled: function(a) {
			return !! b.trim("" + a.value)
		},
		unchecked: function(a) {
			return ! a.checked
		}
	});
	b.validator = function(a, d) {
		this.settings = b.extend(true, {},
		b.validator.defaults, a);
		this.currentForm = d;
		this.init()
	};
	b.validator.format = function(a, d) {
		if (arguments.length == 1) {
			return function() {
				var c = b.makeArray(arguments);
				c.unshift(a);
				return b.validator.format.apply(this, c)
			}
		}
		if (arguments.length > 2 && d.constructor != Array) {
			d = b.makeArray(arguments).slice(1)
		}
		if (d.constructor != Array) {
			d = [d]
		}
		b.each(d,
		function(f, c) {
			a = a.replace(new RegExp("\\{" + f + "\\}", "g"), c)
		});
		return a
	};
	b.extend(b.validator, {
		defaults: {
			messages: {},
			groups: {},
			rules: {},
			errorClass: "error",
			validClass: "valid",
			errorElement: "div",
			focusInvalid: true,
			errorContainer: b([]),
			errorLabelContainer: b([]),
			onsubmit: true,
			ignore: [],
			ignoreTitle: false,
			onfocusin: function(a) {
				this.lastActive = a;
				if (this.settings.focusCleanup && !this.blockFocusCleanup) {
					this.settings.unhighlight && this.settings.unhighlight.call(this, a, this.settings.errorClass, this.settings.validClass);
					this.addWrapper(this.errorsFor(a)).hide()
				}
			},
			onfocusout: function(a) {
				if (!this.checkable(a) && (a.name in this.submitted || !this.optional(a))) {
					this.element(a)
				}
			},
			onkeyup: function(a) {
				if (a.name in this.submitted || a == this.lastElement) {
					this.element(a)
				}
			},
			onclick: function(a) {
				if (a.name in this.submitted) {
					this.element(a)
				} else {
					if (a.parentNode.name in this.submitted) {
						this.element(a.parentNode)
					}
				}
			},
			highlight: function(e, a, f) {
				if (e.type === "radio") {
					this.findByName(e.name).addClass(a).removeClass(f)
				} else {
					b(e).addClass(a).removeClass(f)
				}
			},
			unhighlight: function(e, a, f) {
				if (e.type === "radio") {
					this.findByName(e.name).removeClass(a).addClass(f)
				} else {
					b(e).removeClass(a).addClass(f)
				}
			}
		},
		setDefaults: function(a) {
			b.extend(b.validator.defaults, a)
		},
		messages: {
			required: "请在文本框内输入有效的值.",
			remote: "Please fix this field.",
			email: "Please enter a valid email address.",
			url: "Please enter a valid URL.",
			date: "Please enter a valid date.",
			dateISO: "Please enter a valid date (ISO).",
			number: "Please enter a valid number.",
			digits: "Please enter only digits.",
			creditcard: "Please enter a valid credit card number.",
			equalTo: "Please enter the same value again.",
			accept: "Please enter a value with a valid extension.",
			maxlength: b.validator.format("Please enter no more than {0} characters."),
			minlength: b.validator.format("Please enter at least {0} characters."),
			rangelength: b.validator.format("Please enter a value between {0} and {1} characters long."),
			range: b.validator.format("Please enter a value between {0} and {1}."),
			max: b.validator.format("Please enter a value less than or equal to {0}."),
			min: b.validator.format("Please enter a value greater than or equal to {0}.")
		},
		autoCreateRanges: false,
		prototype: {
			init: function() {
				this.labelContainer = b(this.settings.errorLabelContainer);
				this.errorContext = this.labelContainer.length && this.labelContainer || b(this.currentForm);
				this.containers = b(this.settings.errorContainer).add(this.settings.errorLabelContainer);
				this.submitted = {};
				this.valueCache = {};
				this.pendingRequest = 0;
				this.pending = {};
				this.invalid = {};
				this.reset();
				var a = (this.groups = {});
				b.each(this.settings.groups,
				function(d, c) {
					b.each(c.split(/\s/),
					function(i, j) {
						a[j] = d
					})
				});
				var e = this.settings.rules;
				b.each(e,
				function(d, c) {
					e[d] = b.validator.normalizeRule(c)
				});
				function f(c) {
					var d = b.data(this[0].form, "validator"),
					h = "on" + c.type.replace(/^validate/, "");
					d.settings[h] && d.settings[h].call(d, this[0])
				}
				b(this.currentForm).validateDelegate(":text, :password, :file, select, textarea", "focusin focusout keyup", f).validateDelegate(":radio, :checkbox, select, option", "click", f);
				if (this.settings.invalidHandler) {
					b(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler)
				}
			},
			form: function() {
				this.checkForm();
				b.extend(this.submitted, this.errorMap);
				this.invalid = b.extend({},
				this.errorMap);
				if (!this.valid()) {
					b(this.currentForm).triggerHandler("invalid-form", [this])
				}
				this.showErrors();
				return this.valid()
			},
			checkForm: function() {
				this.prepareForm();
				for (var a = 0,
				d = (this.currentElements = this.elements()); d[a]; a++) {
					this.check(d[a])
				}
				return this.valid()
			},
			element: function(d) {
				d = this.clean(d);
				this.lastElement = d;
				this.prepareElement(d);
				this.currentElements = b(d);
				var a = this.check(d);
				if (a) {
					delete this.invalid[d.name]
				} else {
					this.invalid[d.name] = true
				}
				if (!this.numberOfInvalids()) {
					this.toHide = this.toHide.add(this.containers)
				}
				this.showErrors();
				return a
			},
			showErrors: function(d) {
				if (d) {
					b.extend(this.errorMap, d);
					this.errorList = [];
					for (var a in d) {
						this.errorList.push({
							message: d[a],
							element: this.findByName(a)[0]
						})
					}
					this.successList = b.grep(this.successList,
					function(c) {
						return ! (c.name in d)
					})
				}
				this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors()
			},
			resetForm: function() {
				if (b.fn.resetForm) {
					b(this.currentForm).resetForm()
				}
				this.submitted = {};
				this.prepareForm();
				this.hideErrors();
				this.elements().removeClass(this.settings.errorClass)
			},
			numberOfInvalids: function() {
				return this.objectLength(this.invalid)
			},
			objectLength: function(e) {
				var f = 0;
				for (var a in e) {
					f++
				}
				return f
			},
			hideErrors: function() {
				this.addWrapper(this.toHide).hide()
			},
			valid: function() {
				return this.size() == 0
			},
			size: function() {
				return this.errorList.length
			},
			focusInvalid: function() {
				if (this.settings.focusInvalid) {
					try {
						b(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin")
					} catch(a) {}
				}
			},
			findLastActive: function() {
				var a = this.lastActive;
				return a && b.grep(this.errorList,
				function(d) {
					return d.element.name == a.name
				}).length == 1 && a
			},
			elements: function() {
				var d = this,
				a = {};
				return b(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function() { ! this.name && d.settings.debug && window.console && console.error("%o has no name assigned", this);
					if (this.name in a || !d.objectLength(b(this).rules())) {
						return false
					}
					a[this.name] = true;
					return true
				})
			},
			clean: function(a) {
				return b(a)[0]
			},
			errors: function() {
				return b(this.settings.errorElement + "." + this.settings.errorClass, this.errorContext)
			},
			reset: function() {
				this.successList = [];
				this.errorList = [];
				this.errorMap = {};
				this.toShow = b([]);
				this.toHide = b([]);
				this.currentElements = b([])
			},
			prepareForm: function() {
				this.reset();
				this.toHide = this.errors().add(this.containers)
			},
			prepareElement: function(a) {
				this.reset();
				this.toHide = this.errorsFor(a)
			},
			check: function(n) {
				n = this.clean(n);
				if (this.checkable(n)) {
					n = this.findByName(n.name).not(this.settings.ignore)[0]
				}
				var j = b(n).rules();
				var m = false;
				for (var e in j) {
					var k = {
						method: e,
						parameters: j[e]
					};
					try {
						var a = b.validator.methods[e].call(this, n.value.replace(/\r/g, ""), n, k.parameters);
						if (a == "dependency-mismatch") {
							m = true;
							continue
						}
						m = false;
						if (a == "pending") {
							this.toHide = this.toHide.not(this.errorsFor(n));
							return
						}
						if (!a) {
							this.formatAndAdd(n, k);
							return false
						}
					} catch(l) {
						this.settings.debug && window.console && console.log("exception occured when checking element " + n.id + ", check the '" + k.method + "' method", l);
						throw l
					}
				}
				if (m) {
					return
				}
				if (this.objectLength(j)) {
					this.successList.push(n)
				}
				return true
			},
			customMetaMessage: function(a, e) {
				if (!b.metadata) {
					return
				}
				var f = this.settings.meta ? b(a).metadata()[this.settings.meta] : b(a).metadata();
				return f && f.messages && f.messages[e]
			},
			customMessage: function(f, e) {
				var a = this.settings.messages[f];
				return a && (a.constructor == String ? a: a[e])
			},
			findDefined: function() {
				for (var a = 0; a < arguments.length; a++) {
					if (arguments[a] !== undefined) {
						return arguments[a]
					}
				}
				return undefined
			},
			defaultMessage: function(a, d) {
				return this.findDefined(this.customMessage(a.name, d), this.customMetaMessage(a, d), !this.settings.ignoreTitle && a.title || undefined, b.validator.messages[d], "<strong>Warning: No message defined for " + a.name + "</strong>")
			},
			formatAndAdd: function(h, f) {
				var g = this.defaultMessage(h, f.method),
				a = /\$?\{(\d+)\}/g;
				if (typeof g == "function") {
					g = g.call(this, f.parameters, h)
				} else {
					if (a.test(g)) {
						g = jQuery.format(g.replace(a, "{$1}"), f.parameters)
					}
				}
				this.errorList.push({
					message: g,
					element: h
				});
				this.errorMap[h.name] = g;
				this.submitted[h.name] = g
			},
			addWrapper: function(a) {
				if (this.settings.wrapper) {
					a = a.add(a.parent(this.settings.wrapper))
				}
				return a
			},
			defaultShowErrors: function() {
				for (var f = 0; this.errorList[f]; f++) {
					var a = this.errorList[f];
					this.settings.highlight && this.settings.highlight.call(this, a.element, this.settings.errorClass, this.settings.validClass);
					this.showLabel(a.element, a.message)
				}
				if (this.errorList.length) {
					this.toShow = this.toShow.add(this.containers)
				}
				if (this.settings.success) {
					for (var f = 0; this.successList[f]; f++) {
						this.showLabel(this.successList[f])
					}
				}
				if (this.settings.unhighlight) {
					for (var f = 0,
					e = this.validElements(); e[f]; f++) {
						this.settings.unhighlight.call(this, e[f], this.settings.errorClass, this.settings.validClass)
					}
				}
				this.toHide = this.toHide.not(this.toShow);
				this.hideErrors();
				this.addWrapper(this.toShow).show()
			},
			validElements: function() {
				return this.currentElements.not(this.invalidElements())
			},
			invalidElements: function() {
				return b(this.errorList).map(function() {
					return this.element
				})
			},
			showLabel: function(f, e) {
				var a = this.errorsFor(f);
				if (a.length) {
					a.removeClass().addClass(this.settings.errorClass);
					a.attr("generated") && a.html(e)
				} else {
					a = b("<" + this.settings.errorElement + "/>").attr({
						"for": this.idOrName(f),
						generated: true
					}).addClass(this.settings.errorClass).html(e || "");
					if (this.settings.wrapper) {
						a = a.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()
					}
					if (!this.labelContainer.append(a).length) {
						this.settings.errorPlacement ? this.settings.errorPlacement(a, b(f)) : a.insertAfter(f)
					}
				}
				if (!e && this.settings.success) {
					a.text("");
					typeof this.settings.success == "string" ? a.addClass(this.settings.success) : this.settings.success(a)
				}
				this.toShow = this.toShow.add(a)
			},
			errorsFor: function(d) {
				var a = this.idOrName(d);
				return this.errors().filter(function() {
					return b(this).attr("for") == a
				})
			},
			idOrName: function(a) {
				return this.groups[a.name] || (this.checkable(a) ? a.name: a.id || a.name)
			},
			checkable: function(a) {
				return /radio|checkbox/i.test(a.type)
			},
			findByName: function(a) {
				var d = this.currentForm;
				return b(document.getElementsByName(a)).map(function(f, c) {
					return c.form == d && c.name == a && c || null
				})
			},
			getLength: function(d, a) {
				switch (a.nodeName.toLowerCase()) {
				case "select":
					return b("option:selected", a).length;
				case "input":
					if (this.checkable(a)) {
						return this.findByName(a.name).filter(":checked").length
					}
				}
				return d.length
			},
			depend: function(d, a) {
				return this.dependTypes[typeof d] ? this.dependTypes[typeof d](d, a) : true
			},
			dependTypes: {
				"boolean": function(d, a) {
					return d
				},
				string: function(d, a) {
					return !! b(d, a.form).length
				},
				"function": function(d, a) {
					return d(a)
				}
			},
			optional: function(a) {
				return ! b.validator.methods.required.call(this, b.trim(a.value), a) && "dependency-mismatch"
			},
			startRequest: function(a) {
				if (!this.pending[a.name]) {
					this.pendingRequest++;
					this.pending[a.name] = true
				}
			},
			stopRequest: function(a, d) {
				this.pendingRequest--;
				if (this.pendingRequest < 0) {
					this.pendingRequest = 0
				}
				delete this.pending[a.name];
				if (d && this.pendingRequest == 0 && this.formSubmitted && this.form()) {
					b(this.currentForm).submit();
					this.formSubmitted = false
				} else {
					if (!d && this.pendingRequest == 0 && this.formSubmitted) {
						b(this.currentForm).triggerHandler("invalid-form", [this]);
						this.formSubmitted = false
					}
				}
			},
			previousValue: function(a) {
				return b.data(a, "previousValue") || b.data(a, "previousValue", {
					old: null,
					valid: true,
					message: this.defaultMessage(a, "remote")
				})
			}
		},
		classRuleSettings: {
			required: {
				required: true
			},
			email: {
				email: true
			},
			url: {
				url: true
			},
			date: {
				date: true
			},
			dateISO: {
				dateISO: true
			},
			dateDE: {
				dateDE: true
			},
			number: {
				number: true
			},
			numberDE: {
				numberDE: true
			},
			digits: {
				digits: true
			},
			creditcard: {
				creditcard: true
			}
		},
		addClassRules: function(a, d) {
			a.constructor == String ? this.classRuleSettings[a] = d: b.extend(this.classRuleSettings, a)
		},
		classRules: function(f) {
			var e = {};
			var a = b(f).attr("class");
			a && b.each(a.split(" "),
			function() {
				if (this in b.validator.classRuleSettings) {
					b.extend(e, b.validator.classRuleSettings[this])
				}
			});
			return e
		},
		attributeRules: function(j) {
			var h = {};
			var a = b(j);
			for (var g in b.validator.methods) {
				var i = a.attr(g);
				if (i) {
					h[g] = i
				}
			}
			if (h.maxlength && /-1|2147483647|524288/.test(h.maxlength)) {
				delete h.maxlength
			}
			return h
		},
		metadataRules: function(a) {
			if (!b.metadata) {
				return {}
			}
			var d = b.data(a.form, "validator").settings.meta;
			return d ? b(a).metadata()[d] : b(a).metadata()
		},
		staticRules: function(f) {
			var e = {};
			var a = b.data(f.form, "validator");
			if (a.settings.rules) {
				e = b.validator.normalizeRule(a.settings.rules[f.name]) || {}
			}
			return e
		},
		normalizeRules: function(d, a) {
			b.each(d,
			function(c, g) {
				if (g === false) {
					delete d[c];
					return
				}
				if (g.param || g.depends) {
					var h = true;
					switch (typeof g.depends) {
					case "string":
						h = !!b(g.depends, a.form).length;
						break;
					case "function":
						h = g.depends.call(a, a);
						break
					}
					if (h) {
						d[c] = g.param !== undefined ? g.param: true
					} else {
						delete d[c]
					}
				}
			});
			b.each(d,
			function(f, c) {
				d[f] = b.isFunction(c) ? c(a) : c
			});
			b.each(["minlength", "maxlength", "min", "max"],
			function() {
				if (d[this]) {
					d[this] = Number(d[this])
				}
			});
			b.each(["rangelength", "range"],
			function() {
				if (d[this]) {
					d[this] = [Number(d[this][0]), Number(d[this][1])]
				}
			});
			if (b.validator.autoCreateRanges) {
				if (d.min && d.max) {
					d.range = [d.min, d.max];
					delete d.min;
					delete d.max
				}
				if (d.minlength && d.maxlength) {
					d.rangelength = [d.minlength, d.maxlength];
					delete d.minlength;
					delete d.maxlength
				}
			}
			if (d.messages) {
				delete d.messages
			}
			return d
		},
		normalizeRule: function(d) {
			if (typeof d == "string") {
				var a = {};
				b.each(d.split(/\s/),
				function() {
					a[this] = true
				});
				d = a
			}
			return d
		},
		addMethod: function(a, e, f) {
			b.validator.methods[a] = e;
			b.validator.messages[a] = f != undefined ? f: b.validator.messages[a];
			if (e.length < 3) {
				b.validator.addClassRules(a, b.validator.normalizeRule(a))
			}
		},
		methods: {
			required: function(h, a, f) {
				if (!this.depend(f, a)) {
					return "dependency-mismatch"
				}
				switch (a.nodeName.toLowerCase()) {
				case "select":
					var g = b(a).val();
					return g && g.length > 0;
				case "input":
					if (this.checkable(a)) {
						return this.getLength(h, a) > 0
					}
				default:
					return b.trim(h).length > 0
				}
			},
			remote: function(i, l, h) {
				if (this.optional(l)) {
					return "dependency-mismatch"
				}
				var k = this.previousValue(l);
				if (!this.settings.messages[l.name]) {
					this.settings.messages[l.name] = {}
				}
				k.originalMessage = this.settings.messages[l.name].remote;
				this.settings.messages[l.name].remote = k.message;
				h = typeof h == "string" && {
					url: h
				} || h;
				if (this.pending[l.name]) {
					return "pending"
				}
				if (k.old === i) {
					return k.valid
				}
				k.old = i;
				var a = this;
				this.startRequest(l);
				var j = {};
				j[l.name] = i;
				b.ajax(b.extend(true, {
					url: h,
					mode: "abort",
					port: "validate" + l.name,
					dataType: "json",
					data: j,
					success: function(f) {
						a.settings.messages[l.name].remote = k.originalMessage;
						var d = f === true;
						if (d) {
							var g = a.formSubmitted;
							a.prepareElement(l);
							a.formSubmitted = g;
							a.successList.push(l);
							a.showErrors()
						} else {
							var c = {};
							var e = f || a.defaultMessage(l, "remote");
							c[l.name] = k.message = b.isFunction(e) ? e(i) : e;
							a.showErrors(c)
						}
						k.valid = d;
						a.stopRequest(l, d)
					}
				},
				h));
				return "pending"
			},
			minlength: function(f, a, e) {
				return this.optional(a) || this.getLength(b.trim(f), a) >= e
			},
			maxlength: function(f, a, e) {
				return this.optional(a) || this.getLength(b.trim(f), a) <= e
			},
			rangelength: function(g, a, f) {
				var h = this.getLength(b.trim(g), a);
				return this.optional(a) || (h >= f[0] && h <= f[1])
			},
			min: function(f, a, e) {
				return this.optional(a) || f >= e
			},
			max: function(f, a, e) {
				return this.optional(a) || f <= e
			},
			range: function(f, a, e) {
				return this.optional(a) || (f >= e[0] && f <= e[1])
			},
			email: function(d, a) {
				return this.optional(a) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(d)
			},
			url: function(d, a) {
				return this.optional(a) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(d)
			},
			date: function(d, a) {
				return this.optional(a) || !/Invalid|NaN/.test(new Date(d))
			},
			dateISO: function(d, a) {
				return this.optional(a) || /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(d)
			},
			number: function(d, a) {
				return this.optional(a) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(d)
			},
			digits: function(d, a) {
				return this.optional(a) || /^\d+$/.test(d)
			},
			creditcard: function(k, n) {
				if (this.optional(n)) {
					return "dependency-mismatch"
				}
				if (/[^0-9-]+/.test(k)) {
					return false
				}
				var j = 0,
				l = 0,
				a = false;
				k = k.replace(/\D/g, "");
				for (var i = k.length - 1; i >= 0; i--) {
					var m = k.charAt(i);
					var l = parseInt(m, 10);
					if (a) {
						if ((l *= 2) > 9) {
							l -= 9
						}
					}
					j += l;
					a = !a
				}
				return (j % 10) == 0
			},
			accept: function(f, a, e) {
				e = typeof e == "string" ? e.replace(/,/g, "|") : "png|jpe?g|gif";
				return this.optional(a) || f.match(new RegExp(".(" + e + ")$", "i"))
			},
			equalTo: function(h, a, f) {
				var g = b(f).unbind(".validate-equalTo").bind("blur.validate-equalTo",
				function() {
					b(a).valid()
				});
				return h == g.val()
			}
		}
	});
	b.format = b.validator.format
})(jQuery); (function(f) {
	var e = {};
	if (f.ajaxPrefilter) {
		f.ajaxPrefilter(function(b, c, a) {
			var h = b.port;
			if (b.mode == "abort") {
				if (e[h]) {
					e[h].abort()
				}
				e[h] = a
			}
		})
	} else {
		var d = f.ajax;
		f.ajax = function(b) {
			var a = ("mode" in b ? b: f.ajaxSettings).mode,
			c = ("port" in b ? b: f.ajaxSettings).port;
			if (a == "abort") {
				if (e[c]) {
					e[c].abort()
				}
				return (e[c] = d.apply(this, arguments))
			}
			return d.apply(this, arguments)
		}
	}
})(jQuery); (function(b) {
	if (!jQuery.event.special.focusin && !jQuery.event.special.focusout && document.addEventListener) {
		b.each({
			focus: "focusin",
			blur: "focusout"
		},
		function(f, a) {
			b.event.special[a] = {
				setup: function() {
					this.addEventListener(f, e, true)
				},
				teardown: function() {
					this.removeEventListener(f, e, true)
				},
				handler: function(c) {
					arguments[0] = b.event.fix(c);
					arguments[0].type = a;
					return b.event.handle.apply(this, arguments)
				}
			};
			function e(c) {
				c = b.event.fix(c);
				c.type = a;
				return b.event.handle.call(this, c)
			}
		})
	}
	b.extend(b.fn, {
		validateDelegate: function(e, f, a) {
			return this.bind(f,
			function(d) {
				var c = b(d.target);
				if (c.is(e)) {
					return a.apply(c, arguments)
				}
			})
		}
	})
})(jQuery); (function(a) {
	a.extend(a.fn, {
		validate: function(d) {
			if (this.length) {
				var c = a.data(this[0], "validator");
				if (c) {
					return c
				}
				c = new a.validator(d, this[0]);
				a.data(this[0], "validator", c);
				if (c.settings.onsubmit) {
					this.find("input, button").filter(".cancel").click(function() {
						c.cancelSubmit = true
					});
					c.settings.submitHandler && this.find("input, button").filter(":submit").click(function() {
						c.submitButton = this
					});
					this.submit(function(f) {
						function b() {
							if (c.settings.submitHandler) {
								if (c.submitButton) {
									var e = a("<input type='hidden'/>").attr("name", c.submitButton.name).val(c.submitButton.value).appendTo(c.currentForm)
								}
								c.settings.submitHandler.call(c, c.currentForm);
								c.submitButton && e.remove();
								return false
							}
							return true
						}
						c.settings.debug && f.preventDefault();
						if (c.cancelSubmit) {
							c.cancelSubmit = false;
							return b()
						}
						if (c.form()) {
							if (c.pendingRequest) {
								c.formSubmitted = true;
								return false
							}
							return b()
						} else {
							c.focusInvalid();
							return false
						}
					})
				}
				return c
			} else {
				d && d.debug && window.console && console.warn("nothing selected, can't validate, returning nothing")
			}
		},
		valid: function() {
			if (a(this[0]).is("form")) {
				return this.validate().form()
			} else {
				var d = true,
				c = a(this[0].form).validate();
				this.each(function() {
					d &= c.element(this)
				});
				return d
			}
		},
		removeAttrs: function(e) {
			var c = {},
			f = this;
			a.each(e.split(/\s/),
			function(d, b) {
				c[b] = f.attr(b);
				f.removeAttr(b)
			});
			return c
		},
		rules: function(i, c) {
			var n = this[0];
			if (i) {
				var m = a.data(n.form, "validator").settings,
				l = m.rules,
				k = a.validator.staticRules(n);
				switch (i) {
				case "add":
					a.extend(k, a.validator.normalizeRule(c));
					l[n.name] = k;
					if (c.messages) {
						m.messages[n.name] = a.extend(m.messages[n.name], c.messages)
					}
					break;
				case "remove":
					if (!c) {
						delete l[n.name];
						return k
					}
					var j = {};
					a.each(c.split(/\s/),
					function(b, d) {
						j[d] = k[d];
						delete k[d]
					});
					return j
				}
			}
			n = a.validator.normalizeRules(a.extend({},
			a.validator.metadataRules(n), a.validator.classRules(n), a.validator.attributeRules(n), a.validator.staticRules(n)), n);
			if (n.required) {
				m = n.required;
				delete n.required;
				n = a.extend({
					required: m
				},
				n)
			}
			return n
		}
	});
	a.extend(a.expr[":"], {
		blank: function(b) {
			return ! a.trim("" + b.value)
		},
		filled: function(b) {
			return !! a.trim("" + b.value)
		},
		unchecked: function(b) {
			return ! b.checked
		}
	});
	a.validator = function(d, c) {
		this.settings = a.extend(true, {},
		a.validator.defaults, d);
		this.currentForm = c;
		this.init()
	};
	a.validator.format = function(d, c) {
		if (arguments.length == 1) {
			return function() {
				var b = a.makeArray(arguments);
				b.unshift(d);
				return a.validator.format.apply(this, b)
			}
		}
		if (arguments.length > 2 && c.constructor != Array) {
			c = a.makeArray(arguments).slice(1)
		}
		if (c.constructor != Array) {
			c = [c]
		}
		a.each(c,
		function(f, b) {
			d = d.replace(RegExp("\\{" + f + "\\}", "g"), b)
		});
		return d
	};
	a.extend(a.validator, {
		defaults: {
			messages: {},
			groups: {},
			rules: {},
			errorClass: "error",
			validClass: "valid",
			errorElement: "div",
			focusInvalid: true,
			errorContainer: a([]),
			errorLabelContainer: a([]),
			onsubmit: true,
			ignore: [],
			ignoreTitle: false,
			onfocusin: function(b) {
				this.lastActive = b;
				if (this.settings.focusCleanup && !this.blockFocusCleanup) {
					this.settings.unhighlight && this.settings.unhighlight.call(this, b, this.settings.errorClass, this.settings.validClass);
					this.addWrapper(this.errorsFor(b)).hide()
				}
			},
			onfocusout: function(b) {
				if (!this.checkable(b) && (b.name in this.submitted || !this.optional(b))) {
					this.element(b)
				}
			},
			onkeyup: function(b) {
				if (b.name in this.submitted || b == this.lastElement) {
					this.element(b)
				}
			},
			onclick: function(b) {
				if (b.name in this.submitted) {
					this.element(b)
				} else {
					b.parentNode.name in this.submitted && this.element(b.parentNode)
				}
			},
			highlight: function(e, c, f) {
				e.type === "radio" ? this.findByName(e.name).addClass(c).removeClass(f) : a(e).addClass(c).removeClass(f)
			},
			unhighlight: function(e, c, f) {
				e.type === "radio" ? this.findByName(e.name).removeClass(c).addClass(f) : a(e).removeClass(c).addClass(f)
			}
		},
		setDefaults: function(b) {
			a.extend(a.validator.defaults, b)
		},
		messages: {
			required: "请在文本框内输入有效的值",
			remote: "Please fix this field.",
			email: "Please enter a valid email address.",
			url: "Please enter a valid URL.",
			date: "Please enter a valid date.",
			dateISO: "Please enter a valid date (ISO).",
			number: "Please enter a valid number.",
			digits: "Please enter only digits.",
			creditcard: "Please enter a valid credit card number.",
			equalTo: "Please enter the same value again.",
			accept: "Please enter a value with a valid extension.",
			maxlength: a.validator.format("Please enter no more than {0} characters."),
			minlength: a.validator.format("Please enter at least {0} characters."),
			rangelength: a.validator.format("Please enter a value between {0} and {1} characters long."),
			range: a.validator.format("Please enter a value between {0} and {1}."),
			max: a.validator.format("Please enter a value less than or equal to {0}."),
			min: a.validator.format("Please enter a value greater than or equal to {0}.")
		},
		autoCreateRanges: false,
		prototype: {
			init: function() {
				function e(d) {
					var b = a.data(this[0].form, "validator");
					d = "on" + d.type.replace(/^validate/, "");
					b.settings[d] && b.settings[d].call(b, this[0])
				}
				this.labelContainer = a(this.settings.errorLabelContainer);
				this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm);
				this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer);
				this.submitted = {};
				this.valueCache = {};
				this.pendingRequest = 0;
				this.pending = {};
				this.invalid = {};
				this.reset();
				var c = this.groups = {};
				a.each(this.settings.groups,
				function(d, b) {
					a.each(b.split(/\s/),
					function(j, i) {
						c[i] = d
					})
				});
				var f = this.settings.rules;
				a.each(f,
				function(d, b) {
					f[d] = a.validator.normalizeRule(b)
				});
				a(this.currentForm).validateDelegate(":text, :password, :file, select, textarea", "focusin focusout keyup", e).validateDelegate(":radio, :checkbox, select, option", "click", e);
				this.settings.invalidHandler && a(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler)
			},
			form: function() {
				this.checkForm();
				a.extend(this.submitted, this.errorMap);
				this.invalid = a.extend({},
				this.errorMap);
				this.valid() || a(this.currentForm).triggerHandler("invalid-form", [this]);
				this.showErrors();
				return this.valid()
			},
			checkForm: function() {
				this.prepareForm();
				for (var d = 0,
				c = this.currentElements = this.elements(); c[d]; d++) {
					this.check(c[d])
				}
				return this.valid()
			},
			element: function(d) {
				this.lastElement = d = this.clean(d);
				this.prepareElement(d);
				this.currentElements = a(d);
				var c = this.check(d);
				if (c) {
					delete this.invalid[d.name]
				} else {
					this.invalid[d.name] = true
				}
				if (!this.numberOfInvalids()) {
					this.toHide = this.toHide.add(this.containers)
				}
				this.showErrors();
				return c
			},
			showErrors: function(d) {
				if (d) {
					a.extend(this.errorMap, d);
					this.errorList = [];
					for (var c in d) {
						this.errorList.push({
							message: d[c],
							element: this.findByName(c)[0]
						})
					}
					this.successList = a.grep(this.successList,
					function(b) {
						return ! (b.name in d)
					})
				}
				this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors()
			},
			resetForm: function() {
				a.fn.resetForm && a(this.currentForm).resetForm();
				this.submitted = {};
				this.prepareForm();
				this.hideErrors();
				this.elements().removeClass(this.settings.errorClass)
			},
			numberOfInvalids: function() {
				return this.objectLength(this.invalid)
			},
			objectLength: function(e) {
				var c = 0,
				f;
				for (f in e) {
					c++
				}
				return c
			},
			hideErrors: function() {
				this.addWrapper(this.toHide).hide()
			},
			valid: function() {
				return this.size() == 0
			},
			size: function() {
				return this.errorList.length
			},
			focusInvalid: function() {
				if (this.settings.focusInvalid) {
					try {
						a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin")
					} catch(b) {}
				}
			},
			findLastActive: function() {
				var b = this.lastActive;
				return b && a.grep(this.errorList,
				function(c) {
					return c.element.name == b.name
				}).length == 1 && b
			},
			elements: function() {
				var d = this,
				c = {};
				return a(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function() { ! this.name && d.settings.debug && window.console && console.error("%o has no name assigned", this);
					if (this.name in c || !d.objectLength(a(this).rules())) {
						return false
					}
					return c[this.name] = true
				})
			},
			clean: function(b) {
				return a(b)[0]
			},
			errors: function() {
				return a(this.settings.errorElement + "." + this.settings.errorClass, this.errorContext)
			},
			reset: function() {
				this.successList = [];
				this.errorList = [];
				this.errorMap = {};
				this.toShow = a([]);
				this.toHide = a([]);
				this.currentElements = a([])
			},
			prepareForm: function() {
				this.reset();
				this.toHide = this.errors().add(this.containers)
			},
			prepareElement: function(b) {
				this.reset();
				this.toHide = this.errorsFor(b)
			},
			check: function(i) {
				i = this.clean(i);
				if (this.checkable(i)) {
					i = this.findByName(i.name).not(this.settings.ignore)[0]
				}
				var c = a(i).rules(),
				n = false,
				m;
				for (m in c) {
					var l = {
						method: m,
						parameters: c[m]
					};
					try {
						var k = a.validator.methods[m].call(this, i.value.replace(/\r/g, ""), i, l.parameters);
						if (k == "dependency-mismatch") {
							n = true
						} else {
							n = false;
							if (k == "pending") {
								this.toHide = this.toHide.not(this.errorsFor(i));
								return
							}
							if (!k) {
								this.formatAndAdd(i, l);
								return false
							}
						}
					} catch(j) {
						this.settings.debug && window.console && console.log("exception occured when checking element " + i.id + ", check the '" + l.method + "' method", j);
						throw j
					}
				}
				if (!n) {
					this.objectLength(c) && this.successList.push(i);
					return true
				}
			},
			customMetaMessage: function(e, c) {
				if (a.metadata) {
					var f = this.settings.meta ? a(e).metadata()[this.settings.meta] : a(e).metadata();
					return f && f.messages && f.messages[c]
				}
			},
			customMessage: function(e, c) {
				var f = this.settings.messages[e];
				return f && (f.constructor == String ? f: f[c])
			},
			findDefined: function() {
				for (var b = 0; b < arguments.length; b++) {
					if (arguments[b] !== undefined) {
						return arguments[b]
					}
				}
			},
			defaultMessage: function(d, c) {
				return this.findDefined(this.customMessage(d.name, c), this.customMetaMessage(d, c), !this.settings.ignoreTitle && d.title || undefined, a.validator.messages[c], "<strong>Warning: No message defined for " + d.name + "</strong>")
			},
			formatAndAdd: function(f, c) {
				var h = this.defaultMessage(f, c.method),
				g = /\$?\{(\d+)\}/g;
				if (typeof h == "function") {
					h = h.call(this, c.parameters, f)
				} else {
					if (g.test(h)) {
						h = jQuery.format(h.replace(g, "{$1}"), c.parameters)
					}
				}
				this.errorList.push({
					message: h,
					element: f
				});
				this.errorMap[f.name] = h;
				this.submitted[f.name] = h
			},
			addWrapper: function(b) {
				if (this.settings.wrapper) {
					b = b.add(b.parent(this.settings.wrapper))
				}
				return b
			},
			defaultShowErrors: function() {
				for (var d = 0; this.errorList[d]; d++) {
					var c = this.errorList[d];
					this.settings.highlight && this.settings.highlight.call(this, c.element, this.settings.errorClass, this.settings.validClass);
					this.showLabel(c.element, c.message)
				}
				if (this.errorList.length) {
					this.toShow = this.toShow.add(this.containers)
				}
				if (this.settings.success) {
					for (d = 0; this.successList[d]; d++) {
						this.showLabel(this.successList[d])
					}
				}
				if (this.settings.unhighlight) {
					d = 0;
					for (c = this.validElements(); c[d]; d++) {
						this.settings.unhighlight.call(this, c[d], this.settings.errorClass, this.settings.validClass)
					}
				}
				this.toHide = this.toHide.not(this.toShow);
				this.hideErrors();
				this.addWrapper(this.toShow).show()
			},
			validElements: function() {
				return this.currentElements.not(this.invalidElements())
			},
			invalidElements: function() {
				return a(this.errorList).map(function() {
					return this.element
				})
			},
			showLabel: function(e, c) {
				var f = this.errorsFor(e);
				if (f.length) {
					f.removeClass().addClass(this.settings.errorClass);
					f.attr("generated") && f.html(c)
				} else {
					f = a("<" + this.settings.errorElement + "/>").attr({
						"for": this.idOrName(e),
						generated: true
					}).addClass(this.settings.errorClass).html(c || "");
					if (this.settings.wrapper) {
						f = f.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()
					}
					this.labelContainer.append(f).length || (this.settings.errorPlacement ? this.settings.errorPlacement(f, a(e)) : f.insertAfter(e))
				}
				if (!c && this.settings.success) {
					f.text("");
					typeof this.settings.success == "string" ? f.addClass(this.settings.success) : this.settings.success(f)
				}
				this.toShow = this.toShow.add(f)
			},
			errorsFor: function(d) {
				var c = this.idOrName(d);
				return this.errors().filter(function() {
					return a(this).attr("for") == c
				})
			},
			idOrName: function(b) {
				return this.groups[b.name] || (this.checkable(b) ? b.name: b.id || b.name)
			},
			checkable: function(b) {
				return /radio|checkbox/i.test(b.type)
			},
			findByName: function(d) {
				var c = this.currentForm;
				return a(document.getElementsByName(d)).map(function(f, b) {
					return b.form == c && b.name == d && b || null
				})
			},
			getLength: function(d, c) {
				switch (c.nodeName.toLowerCase()) {
				case "select":
					return a("option:selected", c).length;
				case "input":
					if (this.checkable(c)) {
						return this.findByName(c.name).filter(":checked").length
					}
				}
				return d.length
			},
			depend: function(d, c) {
				return this.dependTypes[typeof d] ? this.dependTypes[typeof d](d, c) : true
			},
			dependTypes: {
				"boolean": function(b) {
					return b
				},
				string: function(d, c) {
					return !! a(d, c.form).length
				},
				"function": function(d, c) {
					return d(c)
				}
			},
			optional: function(b) {
				return ! a.validator.methods.required.call(this, a.trim(b.value), b) && "dependency-mismatch"
			},
			startRequest: function(b) {
				if (!this.pending[b.name]) {
					this.pendingRequest++;
					this.pending[b.name] = true
				}
			},
			stopRequest: function(d, c) {
				this.pendingRequest--;
				if (this.pendingRequest < 0) {
					this.pendingRequest = 0
				}
				delete this.pending[d.name];
				if (c && this.pendingRequest == 0 && this.formSubmitted && this.form()) {
					a(this.currentForm).submit();
					this.formSubmitted = false
				} else {
					if (!c && this.pendingRequest == 0 && this.formSubmitted) {
						a(this.currentForm).triggerHandler("invalid-form", [this]);
						this.formSubmitted = false
					}
				}
			},
			previousValue: function(b) {
				return a.data(b, "previousValue") || a.data(b, "previousValue", {
					old: null,
					valid: true,
					message: this.defaultMessage(b, "remote")
				})
			}
		},
		classRuleSettings: {
			required: {
				required: true
			},
			email: {
				email: true
			},
			url: {
				url: true
			},
			date: {
				date: true
			},
			dateISO: {
				dateISO: true
			},
			dateDE: {
				dateDE: true
			},
			number: {
				number: true
			},
			numberDE: {
				numberDE: true
			},
			digits: {
				digits: true
			},
			creditcard: {
				creditcard: true
			}
		},
		addClassRules: function(d, c) {
			d.constructor == String ? this.classRuleSettings[d] = c: a.extend(this.classRuleSettings, d)
		},
		classRules: function(d) {
			var c = {}; (d = a(d).attr("class")) && a.each(d.split(" "),
			function() {
				this in a.validator.classRuleSettings && a.extend(c, a.validator.classRuleSettings[this])
			});
			return c
		},
		attributeRules: function(f) {
			var c = {};
			f = a(f);
			for (var h in a.validator.methods) {
				var g = f.attr(h);
				if (g) {
					c[h] = g
				}
			}
			c.maxlength && /-1|2147483647|524288/.test(c.maxlength) && delete c.maxlength;
			return c
		},
		metadataRules: function(d) {
			if (!a.metadata) {
				return {}
			}
			var c = a.data(d.form, "validator").settings.meta;
			return c ? a(d).metadata()[c] : a(d).metadata()
		},
		staticRules: function(e) {
			var c = {},
			f = a.data(e.form, "validator");
			if (f.settings.rules) {
				c = a.validator.normalizeRule(f.settings.rules[e.name]) || {}
			}
			return c
		},
		normalizeRules: function(d, c) {
			a.each(d,
			function(h, g) {
				if (g === false) {
					delete d[h]
				} else {
					if (g.param || g.depends) {
						var b = true;
						switch (typeof g.depends) {
						case "string":
							b = !!a(g.depends, c.form).length;
							break;
						case "function":
							b = g.depends.call(c, c)
						}
						if (b) {
							d[h] = g.param !== undefined ? g.param: true
						} else {
							delete d[h]
						}
					}
				}
			});
			a.each(d,
			function(f, b) {
				d[f] = a.isFunction(b) ? b(c) : b
			});
			a.each(["minlength", "maxlength", "min", "max"],
			function() {
				if (d[this]) {
					d[this] = Number(d[this])
				}
			});
			a.each(["rangelength", "range"],
			function() {
				if (d[this]) {
					d[this] = [Number(d[this][0]), Number(d[this][1])]
				}
			});
			if (a.validator.autoCreateRanges) {
				if (d.min && d.max) {
					d.range = [d.min, d.max];
					delete d.min;
					delete d.max
				}
				if (d.minlength && d.maxlength) {
					d.rangelength = [d.minlength, d.maxlength];
					delete d.minlength;
					delete d.maxlength
				}
			}
			d.messages && delete d.messages;
			return d
		},
		normalizeRule: function(d) {
			if (typeof d == "string") {
				var c = {};
				a.each(d.split(/\s/),
				function() {
					c[this] = true
				});
				d = c
			}
			return d
		},
		addMethod: function(e, c, f) {
			a.validator.methods[e] = c;
			a.validator.messages[e] = f != undefined ? f: a.validator.messages[e];
			c.length < 3 && a.validator.addClassRules(e, a.validator.normalizeRule(e))
		},
		methods: {
			required: function(e, c, f) {
				if (!this.depend(f, c)) {
					return "dependency-mismatch"
				}
				switch (c.nodeName.toLowerCase()) {
				case "select":
					return (e = a(c).val()) && e.length > 0;
				case "input":
					if (this.checkable(c)) {
						return this.getLength(e, c) > 0
					}
				default:
					return a.trim(e).length > 0
				}
			},
			remote: function(h, c, l) {
				if (this.optional(c)) {
					return "dependency-mismatch"
				}
				var k = this.previousValue(c);
				this.settings.messages[c.name] || (this.settings.messages[c.name] = {});
				k.originalMessage = this.settings.messages[c.name].remote;
				this.settings.messages[c.name].remote = k.message;
				l = typeof l == "string" && {
					url: l
				} || l;
				if (this.pending[c.name]) {
					return "pending"
				}
				if (k.old === h) {
					return k.valid
				}
				k.old = h;
				var j = this;
				this.startRequest(c);
				var i = {};
				i[c.name] = h;
				a.ajax(a.extend(true, {
					url: l,
					mode: "abort",
					port: "validate" + c.name,
					dataType: "json",
					data: i,
					success: function(e) {
						j.settings.messages[c.name].remote = k.originalMessage;
						var b = e === true;
						if (b) {
							var d = j.formSubmitted;
							j.prepareElement(c);
							j.formSubmitted = d;
							j.successList.push(c);
							j.showErrors()
						} else {
							d = {};
							e = e || j.defaultMessage(c, "remote");
							d[c.name] = k.message = a.isFunction(e) ? e(h) : e;
							j.showErrors(d)
						}
						k.valid = b;
						j.stopRequest(c, b)
					}
				},
				l));
				return "pending"
			},
			minlength: function(e, c, f) {
				return this.optional(c) || this.getLength(a.trim(e), c) >= f
			},
			maxlength: function(e, c, f) {
				return this.optional(c) || this.getLength(a.trim(e), c) <= f
			},
			rangelength: function(e, c, f) {
				e = this.getLength(a.trim(e), c);
				return this.optional(c) || e >= f[0] && e <= f[1]
			},
			min: function(e, c, f) {
				return this.optional(c) || e >= f
			},
			max: function(e, c, f) {
				return this.optional(c) || e <= f
			},
			range: function(e, c, f) {
				return this.optional(c) || e >= f[0] && e <= f[1]
			},
			email: function(d, c) {
				return this.optional(c) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(d)
			},
			url: function(d, c) {
				return this.optional(c) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(d)
			},
			date: function(d, c) {
				return this.optional(c) || !/Invalid|NaN/.test(new Date(d))
			},
			dateISO: function(d, c) {
				return this.optional(c) || /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(d)
			},
			number: function(d, c) {
				return this.optional(c) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(d)
			},
			digits: function(d, c) {
				return this.optional(c) || /^\d+$/.test(d)
			},
			creditcard: function(h, c) {
				if (this.optional(c)) {
					return "dependency-mismatch"
				}
				if (/[^0-9-]+/.test(h)) {
					return false
				}
				var l = 0,
				k = 0,
				j = false;
				h = h.replace(/\D/g, "");
				for (var i = h.length - 1; i >= 0; i--) {
					k = h.charAt(i);
					k = parseInt(k, 10);
					if (j) {
						if ((k *= 2) > 9) {
							k -= 9
						}
					}
					l += k;
					j = !j
				}
				return l % 10 == 0
			},
			accept: function(e, c, f) {
				f = typeof f == "string" ? f.replace(/,/g, "|") : "png|jpe?g|gif";
				return this.optional(c) || e.match(RegExp(".(" + f + ")$", "i"))
			},
			equalTo: function(e, c, f) {
				f = a(f).unbind(".validate-equalTo").bind("blur.validate-equalTo",
				function() {
					a(c).valid()
				});
				return e == f.val()
			}
		}
	});
	a.format = a.validator.format
})(jQuery); (function(f) {
	var e = {};
	if (f.ajaxPrefilter) {
		f.ajaxPrefilter(function(c, b, a) {
			b = c.port;
			if (c.mode == "abort") {
				e[b] && e[b].abort();
				e[b] = a
			}
		})
	} else {
		var d = f.ajax;
		f.ajax = function(b) {
			var a = ("port" in b ? b: f.ajaxSettings).port;
			if (("mode" in b ? b: f.ajaxSettings).mode == "abort") {
				e[a] && e[a].abort();
				return e[a] = d.apply(this, arguments)
			}
			return d.apply(this, arguments)
		}
	}
})(jQuery); (function(a) { ! jQuery.event.special.focusin && !jQuery.event.special.focusout && document.addEventListener && a.each({
		focus: "focusin",
		blur: "focusout"
	},
	function(e, c) {
		function f(b) {
			b = a.event.fix(b);
			b.type = c;
			return a.event.handle.call(this, b)
		}
		a.event.special[c] = {
			setup: function() {
				this.addEventListener(e, f, true)
			},
			teardown: function() {
				this.removeEventListener(e, f, true)
			},
			handler: function(b) {
				arguments[0] = a.event.fix(b);
				arguments[0].type = c;
				return a.event.handle.apply(this, arguments)
			}
		}
	});
	a.extend(a.fn, {
		validateDelegate: function(e, c, f) {
			return this.bind(c,
			function(d) {
				var b = a(d.target);
				if (b.is(e)) {
					return f.apply(b, arguments)
				}
			})
		}
	})
})(jQuery); (function(b) {
	b.fn.visualize = function(d, a) {
		return b(this).each(function() {
			var G = b.extend({
				type: "bar",
				width: b(this).width(),
				height: b(this).height(),
				appendTitle: true,
				title: null,
				appendKey: true,
				rowFilter: " ",
				colFilter: " ",
				colors: ["#be1e2d", "#666699", "#92d5ea", "#ee8310", "#8d10ee", "#5a3b16", "#26a4ed", "#f45a90", "#e9e744"],
				textColors: [],
				parseDirection: "x",
				pieMargin: 20,
				pieLabelsAsPercent: true,
				pieLabelPos: "inside",
				lineWeight: 4,
				barGroupMargin: 10,
				barMargin: 1,
				yLabelInterval: 30
			},
			d);
			G.width = parseFloat(G.width);
			G.height = parseFloat(G.height);
			var H = b(this);
			function J() {
				var f = G.colors;
				var e = G.textColors;
				var g = {
					dataGroups: function() {
						var j = [];
						if (G.parseDirection == "x") {
							H.find("tr:gt(0)").filter(G.rowFilter).each(function(k) {
								j[k] = {};
								j[k].points = [];
								j[k].color = f[k];
								if (e[k]) {
									j[k].textColor = e[k]
								}
								b(this).find("td").filter(G.colFilter).each(function() {
									j[k].points.push(parseFloat(b(this).text()))
								})
							})
						} else {
							var h = H.find("tr:eq(1) td").filter(G.colFilter).size();
							for (var i = 0; i < h; i++) {
								j[i] = {};
								j[i].points = [];
								j[i].color = f[i];
								if (e[i]) {
									j[i].textColor = e[i]
								}
								H.find("tr:gt(0)").filter(G.rowFilter).each(function() {
									j[i].points.push(b(this).find("td").filter(G.colFilter).eq(i).text() * 1)
								})
							}
						}
						return j
					},
					allData: function() {
						var h = [];
						b(this.dataGroups()).each(function() {
							h.push(this.points)
						});
						return h
					},
					dataSum: function() {
						var h = 0;
						var i = this.allData().join(",").split(",");
						b(i).each(function() {
							h += parseFloat(this)
						});
						return h
					},
					topValue: function() {
						var h = 0;
						var i = this.allData().join(",").split(",");
						b(i).each(function() {
							if (parseFloat(this, 10) > h) {
								h = parseFloat(this)
							}
						});
						return h
					},
					bottomValue: function() {
						var h = 0;
						var i = this.allData().join(",").split(",");
						b(i).each(function() {
							if (this < h) {
								h = parseFloat(this)
							}
						});
						return h
					},
					memberTotals: function() {
						var h = [];
						var i = this.dataGroups();
						b(i).each(function(k) {
							var j = 0;
							b(i[k].points).each(function(l) {
								j += i[k].points[l]
							});
							h.push(j)
						});
						return h
					},
					yTotals: function() {
						var i = [];
						var k = this.dataGroups();
						var h = this.xLabels().length;
						for (var j = 0; j < h; j++) {
							i[j] = [];
							var l = 0;
							b(k).each(function(m) {
								i[j].push(this.points[j])
							});
							i[j].join(",").split(",");
							b(i[j]).each(function() {
								l += parseFloat(this)
							});
							i[j] = l
						}
						return i
					},
					topYtotal: function() {
						var i = 0;
						var h = this.yTotals().join(",").split(",");
						b(h).each(function() {
							if (parseFloat(this, 10) > i) {
								i = parseFloat(this)
							}
						});
						return i
					},
					totalYRange: function() {
						return this.topValue() - this.bottomValue()
					},
					xLabels: function() {
						var h = [];
						if (G.parseDirection == "x") {
							H.find("tr:eq(0) th").filter(G.colFilter).each(function() {
								h.push(b(this).html())
							})
						} else {
							H.find("tr:gt(0) th").filter(G.rowFilter).each(function() {
								h.push(b(this).html())
							})
						}
						return h
					},
					yLabels: function() {
						var h = [];
						h.push(P);
						var i = Math.round(G.height / G.yLabelInterval);
						var j = Math.ceil(V / i) || 1;
						while (h[h.length - 1] < K - j) {
							h.push(h[h.length - 1] + j)
						}
						h.push(K);
						return h
					}
				};
				return g
			}
			var B = {
				pie: function() {
					N.addClass("visualize-pie");
					if (G.pieLabelPos == "outside") {
						N.addClass("visualize-pie-outside")
					}
					var f = Math.round(R.width() / 2);
					var g = Math.round(R.height() / 2);
					var i = g - G.pieMargin;
					var j = 0;
					var h = function(k) {
						return (Math.PI / 180) * k
					};
					var e = b('<ul class="visualize-labels"></ul>').insertAfter(R);
					b.each(L,
					function(r) {
						var l = (this <= 0 || isNaN(this)) ? 0 : this / M;
						F.beginPath();
						F.moveTo(f, g);
						F.arc(f, g, i, j * Math.PI * 2 - Math.PI * 0.5, (j + l) * Math.PI * 2 - Math.PI * 0.5, false);
						F.lineTo(f, g);
						F.closePath();
						F.fillStyle = U[r].color;
						F.fill();
						var n = (j + l / 2);
						var x = G.pieLabelPos == "inside" ? i / 1.5 : i + i / 5;
						var s = Math.round(f + Math.sin(n * Math.PI * 2) * (x));
						var u = Math.round(g - Math.cos(n * Math.PI * 2) * (x));
						var w = (s > f) ? "right": "left";
						var v = (u > g) ? "bottom": "top";
						var k = parseFloat((l * 100).toFixed(2));
						if (k) {
							var q = (G.pieLabelsAsPercent) ? k + "%": this;
							var m = b('<span class="visualize-label">' + q + "</span>").css(w, 0).css(v, 0);
							if (m) {
								var p = b('<li class="visualize-label-pos"></li>').appendTo(e).css({
									left: s,
									top: u
								}).append(m)
							}
							m.css("font-size", i / 8).css("margin-" + w, -m.width() / 2).css("margin-" + v, -m.outerHeight() / 2);
							if (U[r].textColor) {
								m.css("color", U[r].textColor)
							}
						}
						j += l
					})
				},
				line: function(f) {
					if (f) {
						N.addClass("visualize-area")
					} else {
						N.addClass("visualize-line")
					}
					var e = R.width() / (I.length - 1);
					var i = b('<ul class="visualize-labels-x"></ul>').width(R.width()).height(R.height()).insertBefore(R);
					b.each(I,
					function(l) {
						var n = b("<li><span>" + this + "</span></li>").prepend('<span class="line" />').css("left", e * l).appendTo(i);
						var m = n.find("span:not(.line)");
						var k = m.width() / -2;
						if (l == 0) {
							k = 0
						} else {
							if (l == I.length - 1) {
								k = -m.width()
							}
						}
						m.css("margin-left", k).addClass("label")
					});
					var g = R.height() / V;
					var h = R.height() / (o.length - 1);
					var j = b('<ul class="visualize-labels-y"></ul>').width(R.width()).height(R.height()).insertBefore(R);
					b.each(o,
					function(k) {
						var n = b("<li><span>" + this + "</span></li>").prepend('<span class="line"  />').css("bottom", h * k).prependTo(j);
						var m = n.find("span:not(.line)");
						var l = m.height() / -2;
						if (k == 0) {
							l = -m.height()
						} else {
							if (k == o.length - 1) {
								l = 0
							}
						}
						m.css("margin-top", l).addClass("label")
					});
					F.translate(0, T);
					b.each(U,
					function(k) {
						F.beginPath();
						F.lineWidth = G.lineWeight;
						F.lineJoin = "round";
						var l = this.points;
						var m = 0;
						F.moveTo(0, -(l[0] * g));
						b.each(l,
						function() {
							F.lineTo(m, -(this * g));
							m += e
						});
						F.strokeStyle = this.color;
						F.stroke();
						if (f) {
							F.lineTo(m, 0);
							F.lineTo(0, 0);
							F.closePath();
							F.fillStyle = this.color;
							F.globalAlpha = 0.3;
							F.fill();
							F.globalAlpha = 1
						} else {
							F.closePath()
						}
					})
				},
				area: function() {
					B.line(true)
				},
				bar: function() {
					N.addClass("visualize-bar");
					var l = R.width() / (I.length);
					var q = b('<ul class="visualize-labels-x"></ul>').width(R.width()).height(R.height()).insertBefore(R);
					b.each(I,
					function(r) {
						var u = b('<li><span class="label">' + this + "</span></li>").prepend('<span class="line" />').css("left", l * r).width(l).appendTo(q);
						var s = u.find("span.label");
						s.addClass("label")
					});
					var h = R.height() / V;
					var p = R.height() / (o.length - 1);
					var j = b('<ul class="visualize-labels-y"></ul>').width(R.width()).height(R.height()).insertBefore(R);
					b.each(o,
					function(r) {
						var v = b("<li><span>" + this + "</span></li>").prepend('<span class="line"  />').css("bottom", p * r).prependTo(j);
						var u = v.find("span:not(.line)");
						var s = u.height() / -2;
						if (r == 0) {
							s = -u.height()
						} else {
							if (r == o.length - 1) {
								s = 0
							}
						}
						u.css("margin-top", s).addClass("label")
					});
					F.translate(0, T);
					for (var e = 0; e < U.length; e++) {
						F.beginPath();
						var n = (l - G.barGroupMargin * 2) / U.length;
						var m = n - (G.barMargin * 2);
						F.lineWidth = m;
						var k = U[e].points;
						var f = 0;
						for (var g = 0; g < k.length; g++) {
							var i = (f - G.barGroupMargin) + (e * n) + n / 2;
							i += G.barGroupMargin * 2;
							F.moveTo(i, 0);
							F.lineTo(i, Math.round( - k[g] * h));
							f += l
						}
						F.strokeStyle = U[e].color;
						F.stroke();
						F.closePath()
					}
				}
			};
			var O = document.createElement("canvas");
			O.setAttribute("height", G.height);
			O.setAttribute("width", G.width);
			var R = b(O);
			var c = G.title || H.find("caption").text();
			var N = (a || b('<div class="visualize" role="img" aria-label="Chart representing data from the table: ' + c + '" />')).height(G.height).width(G.width).append(R);
			var S = J();
			var U = S.dataGroups();
			var C = S.allData();
			var M = S.dataSum();
			var K = S.topValue();
			var P = S.bottomValue();
			var L = S.memberTotals();
			var V = S.totalYRange();
			var T = G.height * (K / V);
			var I = S.xLabels();
			var o = S.yLabels();
			if (G.appendTitle || G.appendKey) {
				var Q = b('<div class="visualize-info"></div>').appendTo(N)
			}
			if (G.appendTitle) {
				b('<div class="visualize-title">' + c + "</div>").appendTo(Q)
			}
			if (G.appendKey) {
				var D = b('<ul class="visualize-key"></ul>');
				var E;
				if (G.parseDirection == "x") {
					E = H.find("tr:gt(0) th").filter(G.rowFilter)
				} else {
					E = H.find("tr:eq(0) th").filter(G.colFilter)
				}
				E.each(function(e) {
					b('<li><span class="visualize-key-color" style="background: ' + U[e].color + '"></span><span class="visualize-key-label">' + b(this).text() + "</span></li>").appendTo(D)
				});
				D.appendTo(Q)
			}
			if (!a) {
				N.insertAfter(this)
			}
			if (typeof(G_vmlCanvasManager) != "undefined") {
				G_vmlCanvasManager.init();
				G_vmlCanvasManager.initElement(R[0])
			}
			var F = R[0].getContext("2d");
			B[G.type]();
			b(".visualize-line li:first-child span.line, .visualize-line li:last-child span.line, .visualize-area li:first-child span.line, .visualize-area li:last-child span.line, .visualize-bar li:first-child span.line,.visualize-bar .visualize-labels-y li:last-child span.line").css("border", "none");
			if (!a) {
				N.bind("visualizeRefresh",
				function() {
					H.visualize(G, b(this).empty())
				})
			}
		}).next()
	}
})(jQuery);
jQuery.fn.initMenu = function() {
	return this.each(function() {
		var b = $(this).get(0);
		$("li:has(ul)", this).each(function() {});
		$(".sub", this).hide();
		$("li.expand > .sub", this).show();
		$("li.expand > .sub", this).prev().addClass("active");
		$("li a", this).click(function(e) {
			e.stopImmediatePropagation();
			var f = $(this).next();
			var a = this.parentNode.parentNode;
			if ($(a).hasClass("noaccordion")) {
				if (f[0] === undefined) {
					window.location.href = this.href
				}
				$(f).slideToggle("normal",
				function() {
					if ($(this).is(":visible")) {
						$(this).prev().addClass("active")
					} else {
						$(this).prev().removeClass("active");
						$(this).prev().removeClass("active-icon")
					}
				});
				return false
			} else {
				if (f.hasClass("sub") && f.is(":visible")) {
					if ($(a).hasClass("collapsible")) {
						$(".sub:visible", a).first().slideUp("normal",
						function() {
							$(this).prev().removeClass("active");
							$(this).prev().removeClass("active-icon")
						});
						return false
					}
					return false
				}
				if (f.hasClass("sub") && !f.is(":visible")) {
					$(".sub:visible", a).first().slideUp("normal",
					function() {
						$(this).prev().removeClass("active");
						$(this).prev().removeClass("active-icon")
					});
					f.slideDown("normal",
					function() {
						$(this).prev().addClass("active")
					});
					return false
				}
			}
		})
	})
}; (function(b) {
	b.fn.slideList = function(a) {
		return b(this).each(function() {
			var e = b(this).css("padding-left");
			var f = b(this).css("padding-right");
			b(this).hover(function() {
				b(this).animate({
					paddingLeft: parseInt(e) + parseInt(5) + "px"
				},
				130)
			},
			function() {
				bc_hover = b(this).css("background-color");
				b(this).animate({
					paddingLeft: e,
					paddingRight: f
				},
				130)
			})
		})
	}
})(jQuery); (function(b) {
	b.fn.alertBox = function(e, a) {
		var f = b.extend({},
		b.fn.alertBox.defaults, a);
		this.each(function(k) {
			var c = b(this);
			var l = "alert " + f.type;
			if (f.noMargin) {
				l += " no-margin"
			}
			if (f.position) {
				l += " top"
			}
			var d = '<div id="alertBox-generated" style="display:none" class="' + l + '">' + e + "</div>";
			var i = c.prepend(d);
			b("#alertBox-generated").fadeIn()
		})
	};
	b.fn.alertBox.defaults = {
		type: "info",
		position: "top",
		noMargin: true
	}
})(jQuery); (function(b) {
	b.fn.removeAlertBoxes = function(g, h) {
		var f = b(this);
		var a = f.find(".alert");
		a.remove()
	}
})(jQuery);
$("[placeholder]").focus(function() {
	var b = $(this);
	if (b.val() == b.attr("placeholder")) {
		b.val("");
		b.removeClass("placeholder")
	}
}).blur(function() {
	var b = $(this);
	if (b.val() == "" || b.val() == b.attr("placeholder")) {
		b.addClass("placeholder");
		b.val(b.attr("placeholder"))
	}
}).blur().parents("form").submit(function() {
	$(this).find("[placeholder]").each(function() {
		var b = $(this);
		if (b.val() == b.attr("placeholder")) {
			b.val("")
		}
	})
});
$.fn.resetForm = function() {
	$(this).removeAlertBoxes();
	return this.each(function() {
		if (typeof this.reset == "function" || (typeof this.reset == "object" && !this.reset.nodeType)) {
			this.reset()
		}
	})
}; (function(b) {
	b.fn.createTabs = function() {
		var a = b(this);
		a.find(".tab-content").hide();
		a.find("ul.tabs li:first").addClass("active").show();
		a.find(".tab-content:first").show();
		a.find("ul.tabs li").click(function() {
			a.find("ul.tabs li").removeClass("active");
			b(this).addClass("active");
			a.find(".tab-content").hide();
			var d = b(this).find("a").attr("href");
			b(d).fadeIn();
			return false
		})
	}
})(jQuery);
window.log = function() {
	log.history = log.history || [];
	log.history.push(arguments);
	if (this.console) {
		arguments.callee = arguments.callee.caller;
		var b = [].slice.call(arguments); (typeof console.log === "object" ? log.apply.call(console.log, console, b) : console.log.apply(console, b))
	}
}; (function(d) {
	function a() {}
	for (var b = "assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,timeStamp,profile,profileEnd,time,timeEnd,trace,warn".split(","), c; c = b.pop();) {
		d[c] = d[c] || a
	}
})((function() {
	try {
		console.log();
		return window.console
	} catch(b) {
		return window.console = {}
	}
})());
$(document).ready(function() {
	$(".menu").initMenu();
	$(".menu li a").slideList();
	$("a[href*=#]").bind("click",
	function(a) {
		a.preventDefault();
		var d = $(this).attr("href");
		if (d == "#top") {}
		$("html,body").animate({
			scrollTop: $(d).offset().top
		},
		1000,
		function() {})
	});
	$("span.hide").click(function() {
		$(this).parent().slideUp()
	});
	$(".toolbox-action").click(function() {
		$(".toolbox-content").fadeOut();
		$(this).next().fadeIn();
		return false
	});
	$(".close-toolbox").click(function() {
		$(this).parents(".toolbox-content").fadeOut()
	});
	$(".user-button").click(function() {
		$(".dropdown-username-menu").slideToggle()
	});
	$(document).click(function(a) {
		if (!$(a.target).is(".user-button, .arrow-link-down, .dropdown-username-menu *")) {
			$(".dropdown-username-menu").slideUp()
		}
	});
	var b;
	$(".user-button, ul.dropdown-username-menu").mouseleave(function(a) {
		b = setTimeout(function() {
			$(".dropdown-username-menu").slideUp()
		},
		400)
	});
	$(".user-button, ul.dropdown-username-menu").mouseenter(function(a) {
		clearTimeout(b)
	});
	$(".block-border .block-header span").click(function() {
		if ($(this).hasClass("closed")) {
			$(this).removeClass("closed")
		} else {
			$(this).addClass("closed")
		}
		$(this).parent().parent().children(".block-content").slideToggle()
	});
	$("a[rel=tooltip]").tipsy({
		fade: true
	});
	$("a[rel=tooltip-bottom]").tipsy({
		fade: true
	});
	$("a[rel=tooltip-right]").tipsy({
		fade: true,
		gravity: "w"
	});
	$("a[rel=tooltip-top]").tipsy({
		fade: true,
		gravity: "s"
	});
	$("a[rel=tooltip-left]").tipsy({
		fade: true,
		gravity: "e"
	});
	$("a[rel=tooltip-html]").tipsy({
		fade: true,
		html: true
	});
	$("div[rel=tooltip]").tipsy({
		fade: true
	})
});


$().ready(function() {


	
	
	
	var b = $("#login-form").validate({
		invalidHandler: function(h, f) {
			var i = f.numberOfInvalids();
			if (i) {
				var g = i == 1 ? "请输入账号或密码.": "账号和密码都不能为空";
				$("#login-form").removeAlertBoxes();
				$("#login-form").alertBox(g, {
					type: "error"
				})
			} else {
				$("#login-form").removeAlertBoxes()
			}
		}
	});
	
	
	jQuery("#reset-login").click(function() {
		b.resetForm()
	})
});